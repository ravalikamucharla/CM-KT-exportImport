- name: establish connection and getting output from SAP installed System 
  sap_pyrfc: 
    ConnectionString: "{{connection_string}}"
    DBtype: "{{ db_type }}"
    abappath: "{{ abap_scripts_path }}" 
    abapscript: "{{ item.name }}" 
    outputspath: "{{ abap_export_path }}" 
    inputparams: "{{ item.input_params | default('EXPORT') }}"
  with_items:
    - "{{ abap_pre_migration_list[sap_type | lower] | default([]) }}"
    - "{{ abap_pre_migration_list[db_type | lower] | default([]) }}"
    - "{{ version_specific_scripts }}"
  register: output
  async: 3600
  poll: 0

- name: checking the job status running in background based.
  async_status:
     jid: "{{ output.results[index].ansible_job_id }}"
  register: job_result
  until: job_result.finished
  retries: 2000
  delay: 10
  with_items:
    - "{{ abap_pre_migration_list[sap_type | lower] | default([]) }}"
    - "{{ abap_pre_migration_list[db_type | lower] | default([]) }}"
    - "{{ version_specific_scripts }}"
  loop_control:
      index_var: index
  when:
     - (item.name) == output.results[index].item.name

- name: file creation 
  file:
    path: "{{ outputs_path }}/Migrate_{{ source.sap.sid }}_{{ target.sap.sid }}/source/sm59_output/"
    state: directory
    mode: "755"

- SM59_create_populate:
    json_path: "{{ abap_export_path }}ZCM_EXP_SM59_RFC_DESTINATIONS.json"
    outputpath: "{{outputs_path}}/Migrate_{{ source.sap.sid }}_{{ target.sap.sid }}/source/sm59_output/"
  register: output 

- debug:
    var: output

- name: change permission 
  file:
    path: "{{outputs_path}}/Migrate_{{source.sap.sid}}_{{target.sap.sid}}/source/sm59_output/"
    mode: "777"
    recurse: yes

- name: read ZCM_RSRFCCHK_EXP_JOBSUBMIT.json
  command: cat "{{outputs_path}}/Migrate_{{source.sap.sid}}_{{target.sap.sid}}/source/abap_export/ZCM_RSRFCCHK_EXP_JOBSUBMIT.json"
  register: RSRFCCHK_result

- name: Parse JSON output
  set_fact:
    job_info: "{{ RSRFCCHK_result.stdout | from_json }}"

- name: Print Jobname 
  set_fact:
    RSRFCCHK_Jobname: "{{ job_info.OUTPUT[0].DATA[0].Jobname }}"

- name: Print Jobnumber
  set_fact:
    RSRFCCHK_Jobnumber: "{{ job_info.OUTPUT[0].DATA[0].Jobnumber }}"

- debug:
    msg: "{{RSRFCCHK_Jobname}}"

- debug:
    msg: "{{RSRFCCHK_Jobnumber}}"

- debug:
    msg: "{{RSRFCCHK_Jobname}}|{{RSRFCCHK_Jobnumber}}"

- name: test rsrfc_status_check
  rsrfc_status_check_test:
    ConnectionString: "{{connection_string}}"
    abappath: "{{ abap_scripts_path }}" 
    abapscript: ZCM_RSRFCCHK_EXP_SPOOL.txt
    outputspath: "{{ abap_export_path }}" 
    inputparams: "{{RSRFCCHK_Jobname}}|{{RSRFCCHK_Jobnumber}}"
    DBtype: "{{ db_type }}"

- name: set fact the db types for which db scpecific scripts are executed
  set_fact:
    db_types: ["oracle", "hana", "sql", "sybase", "db2"]

- name: set fact the remaining dbtype to generate default message
  set_fact:
    database_type: "{{ db_types | difference(db_type) }}"

- name: write default output to json 
  template:
    src: "{{ (item.name | splitext)[0] }}.j2"
    dest: "{{ abap_export_path }}/{{ (item.name | splitext)[0] }}.json"
  delegate_to: localhost
  with_items: 
    - "{{ abap_pre_migration_list[database_type[0] | lower] | default([]) }}"
    - "{{ abap_pre_migration_list[database_type[1] | lower] | default([]) }}"
    - "{{ abap_pre_migration_list[database_type[2] | lower] | default([]) }}"
    - "{{ abap_pre_migration_list[database_type[3] | lower] | default([]) }}"

- name: set fact
  set_fact :
    client_list: >
        [
        {% for e in abap_pre_migration_list_clients %}
        {% for c in source.sap.all_clients %}
        {{ e | combine (c) }},
        {% endfor %}
        {% endfor %}
        ]
  when: source.sap.all_clients is defined

- name: establish connection and getting output from SAP installed System client
  sap_pyrfc: 
    ConnectionString: "{{connection_string}}"
    DBtype: "{{ db_type }}"
    abappath: "{{ abap_scripts_path }}" 
    abapscript: "{{ item.name }}" 
    outputspath: "{{ abap_export_path }}{{ item.client }}_" 
    inputparams: "{{ item.input_params | default('EXPORT') }}"
    no_log: true
  with_items:
      - "{{ client_list }}"
  when: source.sap.all_clients is defined
  register: output_ls

- name: Timestamp Capture
  json_write: stage={{ stage }}
  register: timestamp_output

- name: Copy timestamp file to outputs folder
  copy:
    src: "/cm_sap_migration/ExecutionTiming_{{ stage }}.json"
    dest: "{{ outputs_path }}/Migrate_{{ source.sap.sid }}_{{ target.sap.sid }}/source/abap_export/"
    owner: "{{ cloudmigrate_server_sudo_user }}"
    group: "{{ cloudmigrate_server_sudo_user_group }}"
    mode: '0644'

- name: Remove file
  file:
    path: "/cm_sap_migration/ExecutionTiming_{{ stage }}.json"
    state: absent

- name: Execute os commands
  os_command_execution: 
    ConnectionString: "{{connection_string}}"
    abappath: "{{ abap_scripts_path }}" 
    abapscript: ZCM_EXP_RSBDCOS0_OSCOMMAND.txt 
    command: "{{ item.query }}" 
    input_params: EXPORT
  with_items: 
    - "{{ os_queries_windows }}"
    - "{{ os_queries_linux }}"
  register: os_command_output
  when: "{{ item.when }}"

- name: Write ouptut for os queries
  template:
    src: "os_commands.j2"
    dest: '{{ abap_export_path }}/{{ item.name }}_outputs.txt'
  with_items: 
    - "{{ os_queries_windows }}"
    - "{{ os_queries_linux }}"
  when: "{{ item.when }}"
  loop_control:
      index_var: index
