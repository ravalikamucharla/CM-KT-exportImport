*---------------------------------------------------------------------*
* Program Name        :  ZCM_T_CVERS_EXP_SOFTWARE_COMP                *
* Title               :  Component Versions Export                    *
* Purpose             :  This report is used to export component      *
*                        version details from system pre migration    *
*---------------------------------------------------------------------*
* Related Transaction OR Standard Program References                  *
* XXXX                                                                *
*---------------------------------------------------------------------*
*	Tables              :   SELECT    UPDATE      INSERT      DELETE    *
* XXXX                      X                                         *
*---------------------------------------------------------------------*
* Program Change History                                              *
*---------------------------------------------------------------------*
*Date        Version   Author       TR#/Local     Description         *
*---------------------------------------------------------------------*
*19-08-2021  Initial   ASHWINI B    LOCAL         To export component *
*                                                 version details     *
*28-12-2021  V001      Yasaswini K  V001          To add component    *
*                                                 type                *
*---------------------------------------------------------------------*
REPORT zcm_t_cvers_exp_software_comp.

FORM get_config
TABLES ft_input  STRUCTURE tab512
       ft_output STRUCTURE tab512.

  CONSTANTS: lc_sep       TYPE c       VALUE '|'            LENGTH 1,
             lc_act_exp   TYPE char6   VALUE 'EXPORT',
             lc_comp      TYPE char9   VALUE 'Component',
             lc_rel       TYPE char7   VALUE 'Release',
             lc_extra_rel TYPE char21  VALUE 'Support package level',
             lc_descr     TYPE char11  VALUE 'Description',
             lc_msg       TYPE char80  VALUE
                            'No data found',
* Begin of changes V001
             lc_type      TYPE c       VALUE 'ComponentType'
                                                             LENGTH 15,
             lc_noinput   TYPE c       VALUE 'No input passed'
                                                             LENGTH 20,
             lc_title     TYPE c       VALUE
             'Software component details'                    LENGTH 40,
             lc_inc_input TYPE c       VALUE
             'Incorrect input'                               LENGTH 20.
* End of changes V001


  DATA: ls_input   TYPE tab512,
        ls_output  TYPE tab512,
        lv_action  TYPE char8,
        lt_comptab TYPE TABLE OF spam_cvers,
        ls_comptab TYPE spam_cvers.

  CLEAR: ls_input,
         ls_output,
         ls_comptab,
         lv_action.

  FREE: lt_comptab[].

  " Title
  CLEAR: ls_output.
  ls_output = lc_title.
  APPEND ls_output TO ft_output.

  " Read input values from Python/Ansibel
  READ TABLE ft_input INTO ls_input INDEX 1.
  IF sy-subrc EQ 0.
    lv_action = ls_input.
* Begin of changes V001
  ELSE.
    ls_output = lc_noinput.
    APPEND ls_output TO ft_output.
    CLEAR ls_output.
    RETURN.
  ENDIF.
* End of changes V001

  CASE lv_action.

    WHEN lc_act_exp. "EXPORT

* Under the pre-migration activities, the system component
* version details are fetched and exported to Python.
* Components Info

      CALL FUNCTION 'OCS_GET_INSTALLED_COMPS'
        TABLES
          tt_comptab       = lt_comptab
        EXCEPTIONS
          no_release_found = 1
          wrong_release    = 2
          OTHERS           = 3.

      IF sy-subrc EQ 0 AND lt_comptab[] IS NOT INITIAL.
        SORT: lt_comptab[] BY component.
      ELSE.
        " Error
        CLEAR: ls_output.
        ls_output = lc_msg.
        APPEND ls_output TO ft_output.    "+V001
        RETURN.
      ENDIF.

      IF lt_comptab[] IS NOT INITIAL.

        " Heading Columns
        CLEAR: ls_output.
        CONCATENATE lc_comp      lc_sep
        lc_type      lc_sep                               "+V001
        lc_rel       lc_sep
        lc_extra_rel lc_sep
        lc_descr INTO ls_output.
        APPEND ls_output TO ft_output.

        " Data
        CLEAR: ls_output,ls_comptab.
        LOOP AT lt_comptab INTO ls_comptab.
          CONCATENATE ls_comptab-component  lc_sep
          ls_comptab-comp_type              lc_sep          "+V001
          ls_comptab-release                lc_sep
          ls_comptab-extrelease             lc_sep
          ls_comptab-desc_text INTO ls_output.
          APPEND ls_output TO ft_output.
          CLEAR: ls_output,ls_comptab.
        ENDLOOP.

      ELSE.

        CLEAR: ls_output.
        " No data found
        ls_output = lc_msg.
        APPEND ls_output TO ft_output.
      ENDIF.

    WHEN OTHERS.
* Begin of changes V001
      " Incorrect input
      ls_output = lc_inc_input.
      APPEND ls_output TO ft_output.
      CLEAR ls_output.
* End  of changes V001
  ENDCASE.

ENDFORM.