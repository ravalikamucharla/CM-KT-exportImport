*---------------------------------------------------------------------*
* Program Name        :   ZCM_SLICENSE_EXP_SETTINGS_LIC               *
* Title               :   Export current settings and digitally       *
*                         signed licenses                             *
* Purpose             :   To export details of current settings and   *
*                         digitally signed licenses from SLICENSE     *
*---------------------------------------------------------------------*
* Related Transaction OR Standard Program References                  *
* SLICENSE                                                            *
*---------------------------------------------------------------------*
* Tables              :   SELECT    UPDATE      INSERT      DELETE    *
* XXXXX                     X                                         *
*---------------------------------------------------------------------*
* Program Change History                                              *
*---------------------------------------------------------------------*
*Date        Version   Author       TR#/Local     Description         *
*---------------------------------------------------------------------*
*06-28-2021  Initial   Soumya Ray   Local        To export details of *
*                                                current settings and *
*                                                digitally signed     *
*                                               licenses from SLICENSE*
*09-13-2022  V001      Yasaswini K  Local       To add no data found  *
*                                               in case no data in sys*
*                                               tem                   *
*---------------------------------------------------------------------*

REPORT zcm_slicense_exp_settings_lic.

LOAD-OF-PROGRAM.

FORM get_config
               TABLES lt_input  STRUCTURE tab512
                      lt_output STRUCTURE tab512.

  CONSTANTS: lc_sep      TYPE c VALUE '|'           LENGTH 1,
             lc_0        TYPE c VALUE '0'           LENGTH 1,
             lc_1        TYPE c VALUE '1'           LENGTH 1,
             lc_2        TYPE c VALUE '2'           LENGTH 1,
             lc_3        TYPE c VALUE '3'           LENGTH 1,
             lc_4        TYPE c VALUE '4'           LENGTH 1,
             lc_5        TYPE c VALUE '5'           LENGTH 1,
             lc_6        TYPE c VALUE '6'           LENGTH 1,
             lc_7        TYPE c VALUE '7'           LENGTH 1,
             lc_export   TYPE c VALUE 'EXPORT'      LENGTH 6,
             lc_null     TYPE c VALUE 'NULL'        LENGTH 4,
             lc_ninput   TYPE c VALUE
             'No input passed'                      LENGTH 15,
             lc_title    TYPE c VALUE
             'SAP License Administration'           LENGTH 30,
             lc_title1   TYPE c VALUE
             'Current settings'                     LENGTH 20,
             lc_title2   TYPE c VALUE
             'Digitally signed licenses'            LENGTH 30,
             lc_acthrdw  TYPE c VALUE
             'Activehardwarekey'                    LENGTH 20,
             lc_instlno  TYPE c VALUE
             'Installationnumber'                   LENGTH 20,
             lc_linexon  TYPE c VALUE
             'Licenseexpireson'                     LENGTH 20,
             lc_sysnum   TYPE c VALUE
             'Systemnoumber'                        LENGTH 20,
             lc_validlsc TYPE c VALUE
             'Validlicense'                         LENGTH 12,
             lc_sid      TYPE c VALUE 'Sid'         LENGTH 3,
             lc_hardky   TYPE c VALUE 'Hardwarekey' LENGTH 11,
             lc_swprod   TYPE c VALUE 'Swproduct'   LENGTH 9,
             lc_limit    TYPE c VALUE 'Limit'       LENGTH 5,
             lc_valdfm   TYPE c VALUE 'Validfrom'   LENGTH 9,
             lc_valdto   TYPE c VALUE 'Validto'     LENGTH 7,
             lc_type     TYPE c VALUE 'Type'        LENGTH 4,
             lc_instno   TYPE c VALUE 'Inst.no.'    LENGTH 8,
             lc_sysno    TYPE c VALUE 'Systemno.'   LENGTH 9,
             lc_prem     TYPE c VALUE 'Prem'        LENGTH 4,
             lc_temp     TYPE c VALUE 'Temp'        LENGTH 4,
             lc_ntvald   TYPE c VALUE
             'Noteonvalidity'                       LENGTH 14,
             lc_naction  TYPE c VALUE
             'Incorrect input'                      LENGTH 30, "+V001
             lc_elicens  TYPE c VALUE
     'Issue in fetching digitally signed licenses'  LENGTH 50,
             lc_nlicens  TYPE c VALUE
             'Sap license not present in system'    LENGTH 50,
             lc_insysid  TYPE c VALUE
             'INITIAL_SYSTEM_IDX'                   LENGTH 18,
             lc_txt001   TYPE c VALUE
             'System no. empty'                     LENGTH 16,
             lc_txt116   TYPE c VALUE
             'Could not determine status'           LENGTH 30,
             lc_validtxt TYPE c VALUE 'Valid'       LENGTH 5,
             lc_validwhd TYPE c VALUE
             'Valid (inactive hardware key)'        LENGTH 29,
             lc_exptxt   TYPE c VALUE 'Expired'     LENGTH 7,
             lc_validwrn TYPE c VALUE
             'Valid (expires soon)'                 LENGTH 20,
             lc_unknwtxt TYPE c VALUE 'Unknown'     LENGTH 7,
             lc_wrngsid  TYPE c VALUE
             'Incorrect System ID'                  LENGTH 20,
             lc_tmpnall  TYPE c VALUE
             'Temporary license key not permitted'  LENGTH 50,
             lc_nyetval  TYPE c VALUE
              'Not yet valid'                       LENGTH 15,
             lc_signval  TYPE c VALUE
             'Signature invalid'                    LENGTH 20,
             lc_intrner  TYPE c VALUE
             'Internal Error'                       LENGTH 15,
             lc_expirper TYPE c VALUE '14'          LENGTH 2.

  DATA: lv_action       TYPE string,
        ls_input        TYPE tab512,
        ls_output       TYPE tab512,
        ls_prefinal     TYPE string,
        lv_swproduct    TYPE string,
        lv_type         TYPE string,
        lv_validity     TYPE string,
        lv_last_char    TYPE char1,
        lt_likeyentries TYPE likey_license_tab,
        ls_likeyentry   TYPE likey_license,
        lv_custkey      TYPE custkey_t,
        lv_expirdate    TYPE d,
        lv_instnr       TYPE slic_inst,
        lv_systemid     TYPE slic_sysid,
        lv_stdprod3020  TYPE likey_sw_product,
        lv_rest(10)     TYPE n.

  "Title
  ls_output = lc_title.
  APPEND ls_output TO lt_output.
  CLEAR ls_output.
  "Read the input
  READ TABLE lt_input INTO ls_input INDEX 1.
  IF sy-subrc NE 0.
    "No input passed
    ls_output = lc_ninput.
    APPEND ls_output TO lt_output.
    CLEAR ls_output.
    RETURN.
  ENDIF.

  lv_action = ls_input.

  CASE lv_action.
    WHEN lc_export.
      FREE: lt_output, lt_likeyentries.
      CLEAR : ls_output, lv_custkey, lv_expirdate, lv_instnr,
      lv_systemid, lv_stdprod3020, lv_rest.
*//---------Current Settings-----------------------------//*
" Standard code of Program SAPMSLIC & subroutine 'SL_READ_DATA_1000'
      "Heading of Current Settings
      ls_output = lc_title1.
      APPEND ls_output TO lt_output.
      CLEAR ls_output.
      "Subheading
      CONCATENATE lc_acthrdw lc_instlno lc_linexon lc_sysnum
      lc_validlsc INTO ls_output SEPARATED BY lc_sep.
      APPEND ls_output TO lt_output.
      CLEAR ls_output.

      "Get the hardware key
      CALL FUNCTION 'SLIC_GET_CUSTKEY'
        EXPORTING
          from_where         = 1
          hostname           = ' '
        IMPORTING
          custkey            = lv_custkey
        EXCEPTIONS
          slic_bad_parameter = 1
          OTHERS             = 2.
      IF sy-subrc <> 0.
        lv_custkey = lc_null.
      ENDIF.

      "Get the license expiration date
      CALL FUNCTION 'SLIC_GET_LICENCE_DATE'
        IMPORTING
          licence_date = lv_expirdate.
      IF lv_expirdate EQ ''.
        lv_expirdate = lc_null.
      ENDIF.
      "Get the installation number
      CALL FUNCTION 'SLIC_GET_LICENCE_NUMBER'
        IMPORTING
          license_number = lv_instnr.
      IF lv_instnr EQ ''.
        lv_instnr = lc_null.
      ENDIF.
      "Get the system number
      CALL FUNCTION 'SLIC_GET_SYSTEM_ID'
        IMPORTING
          systemid = lv_systemid.
      IF lv_systemid = lc_insysid.
        lv_systemid = lc_txt001.
      ENDIF.
      "Get Valid license key
      CALL FUNCTION 'SLIC_LIKEY_GET_STANDARD_PROD'
        IMPORTING
          standard_sw_product = lv_stdprod3020
        EXCEPTIONS
          error               = 1
          OTHERS              = 2.

      IF sy-subrc <> 0.
        lv_stdprod3020 = lc_txt116.
      ENDIF.
      CONCATENATE lv_custkey lv_instnr lv_expirdate lv_systemid
      lv_stdprod3020 INTO ls_output SEPARATED BY lc_sep.
      APPEND ls_output TO lt_output.

*//------------------------------------------------------//*
*//---------Digitally Signed Licenses details-----------//*
" Standard code of Program SAPMSLIC & subroutine 'SL_READ_DATA_3020'
      CLEAR ls_output.
      APPEND ls_output TO lt_output.

      " Heading for Digitally signed licenses
      ls_output = lc_title2.
      APPEND ls_output TO lt_output.
      CLEAR ls_output.
      " Read all license keys from the database
      CALL FUNCTION 'SLIC_LIKEY_GET_ALL_LICENSES'
        IMPORTING
          licenses = lt_likeyentries
        EXCEPTIONS
          error    = 1
          OTHERS   = 2.
      IF sy-subrc NE 0.
        "Issue in fetching digitally signed licenses
        ls_output = lc_elicens.
        APPEND ls_output TO lt_output.
        CLEAR ls_output.
        RETURN.
      ENDIF.

      IF lt_likeyentries IS INITIAL.
        "Sap license not present in system
        ls_output = lc_nlicens.
        APPEND ls_output TO lt_output.
        CLEAR ls_output.
        RETURN.
      ENDIF.
      SORT lt_likeyentries.
      " Subheading
      CONCATENATE lc_sid lc_hardky lc_swprod lc_limit lc_valdfm
      lc_valdto lc_type lc_instno lc_sysno lc_ntvald
      INTO ls_output SEPARATED BY lc_sep.
      APPEND ls_output TO lt_output.
      CLEAR ls_output.

      "Digitally signed license data
      LOOP AT lt_likeyentries INTO ls_likeyentry.

        " Set the type text.
        CASE ls_likeyentry-type.
          WHEN lc_0. " permanent
            lv_type = lc_prem.
          WHEN lc_1. " temporary
            lv_type = lc_temp.
          WHEN OTHERS.
            lv_type = ls_likeyentry-type.
        ENDCASE.
        " To get validity text
        CASE ls_likeyentry-validity.
          WHEN lc_0."Valid
            lv_validity = lc_validtxt.
            IF ls_likeyentry-hwkey <> lv_custkey.
              lv_validity = lc_validwhd. "Valid (inactive hardware key)
            ENDIF.
            IF ls_likeyentry-end_date < sy-datum.
              lv_validity = lc_exptxt."Expired
            ELSE.
              lv_rest = ls_likeyentry-end_date - sy-datum.
              IF lv_rest <= lc_expirper.
                lv_validity = lc_validwrn  ."Valid (expires soon)
              ENDIF.
            ENDIF.
          WHEN lc_1."Unknown
            lv_validity = lc_unknwtxt.
          WHEN lc_2."Incorrect System ID
            lv_validity = lc_wrngsid.
          WHEN lc_3."Temporary license key not permitted
            lv_validity = lc_tmpnall.
          WHEN lc_4."Expired
            lv_validity = lc_exptxt.
          WHEN lc_5."Not yet valid
            lv_validity = lc_nyetval.
          WHEN lc_6."Signature invalid
            lv_validity = lc_signval.
          WHEN lc_7."Internal Error
            lv_validity = lc_intrner.
          WHEN OTHERS. "unknown
            lv_validity = lc_unknwtxt.
        ENDCASE.

        lv_swproduct = ls_likeyentry-sw_prod_limit.
        "Data
        CONCATENATE ls_likeyentry-sid ls_likeyentry-hwkey
        ls_likeyentry-sw_product lv_swproduct
        ls_likeyentry-begin_date ls_likeyentry-end_date
        lv_type ls_likeyentry-install_no ls_likeyentry-system_no
        lv_validity INTO ls_prefinal SEPARATED BY lc_sep.

        "To check if end field is blank and replace it with NULL
        lv_last_char = substring( val = ls_prefinal
        off = strlen( ls_prefinal ) - 1
        len = 1 ).
        IF lv_last_char = '|'.
          CONCATENATE ls_prefinal lc_null INTO ls_prefinal.
        ENDIF.

        "Replace middle blank values with NULL
        REPLACE ALL OCCURRENCES OF SUBSTRING '||' IN
        ls_prefinal WITH '|NULL|'.


        CONDENSE ls_prefinal.
        ls_output = ls_prefinal.
        APPEND ls_output TO lt_output.
        CLEAR: ls_likeyentry, ls_output, lv_swproduct, lv_type,
        lv_validity, ls_prefinal, lv_rest, lv_last_char, ls_output.

      ENDLOOP.
      CLEAR: lv_custkey, lv_expirdate, lv_instnr, lv_systemid,
      lv_stdprod3020.
*//---------------------------------------------------------//*

    WHEN OTHERS.
      "Action not supported
      ls_output = lc_naction.
      APPEND ls_output TO lt_output.
      CLEAR ls_output.
  ENDCASE.


ENDFORM.