*---------------------------------------------------------------------*
* Program Name        :   ZCM_STMS_EXP_IMPORT_QUEUE                   *
* Title               :   STMS Queue                                  *
* Purpose             :   This report is used to export import queue  *
*---------------------------------------------------------------------*
* Related Transaction OR Standard Program References                  *
* STMS                                                                *
*---------------------------------------------------------------------*
*Tables              :   SELECT    UPDATE      INSERT      DELETE    *
* XXXXX                     X                                         *
*---------------------------------------------------------------------*
* Program Change History                                              *
*---------------------------------------------------------------------*
*Date        Version   Author           TR#/Local     Description     *
*---------------------------------------------------------------------*
*07-09-2020  Initial   Fathima Hussain   Local        To export import*
*                                                     queue           *
*09-09-2022  V001      Yasaswini K       Local        To add no data  *
*                                                     found changes   *
*---------------------------------------------------------------------*
REPORT zcm_stms_exp_import_queue.

FORM get_config
              TABLES lt_input  STRUCTURE tab512
                     lt_output STRUCTURE tab512.

  CONSTANTS: lc_sep        TYPE c       VALUE '|',
             lc_export     TYPE char20  VALUE 'EXPORT',
             lc_msg_nodata TYPE string  VALUE
             'No data found',
*  Begin of changes in V001
             lc_inc_input  TYPE c       VALUE
             'Incorrect input'                             LENGTH 20,
             lc_noinput    TYPE c       VALUE
             'No input passed'                             LENGTH 20.
*  End of changes in V001

  DATA: ls_input     TYPE tab512,
        ls_output    TYPE tab512,
        ls_prefinal  TYPE string,
        lv_action    TYPE char8,
        lt_tmsbuffer TYPE STANDARD TABLE OF tmsbuffer,   "+V001
        ls_tmsbuffer TYPE tmsbuffer.                     "+V001

  CLEAR: ls_input,
         lv_action.

*      Table Name
  ls_output = 'TMSBUFFER'.
  APPEND ls_output TO lt_output.
  CLEAR: ls_output.

  " Read action required from Python interface
  READ TABLE lt_input INTO ls_input INDEX 1.
* Begin of changes in V001
  IF sy-subrc NE 0.
    " No input passed
    ls_output = lc_noinput.
    APPEND ls_output TO lt_output.
    CLEAR ls_output.
    RETURN.
  ENDIF.
* End of changes in V001
  lv_action = ls_input.

  CASE lv_action.

    WHEN lc_export.

      SELECT * FROM tmsbuffer INTO TABLE lt_tmsbuffer.
      IF sy-subrc <> 0.
        ls_output = lc_msg_nodata.
        APPEND ls_output TO lt_output.
        RETURN.
      ENDIF.

      " Titles
      CONCATENATE 'DOMNAM' lc_sep
                  'SYSNAM' lc_sep
                  'BUFPOS' lc_sep
                  'BUFLVL' lc_sep
                  'TRKORR' lc_sep
                  'UMODES' lc_sep
                  'IMPFLG' lc_sep
                  'MAXRC' lc_sep
                  'TARCLI' lc_sep
                  'PROJECT' lc_sep
                  'TRFUNC' lc_sep
                  'ACTFLG' lc_sep
                  'PREFLG' lc_sep
                  'NODATAFLG' lc_sep
                  'JOBID' lc_sep
                  'TPSTATID' lc_sep
                  'IMPSING' lc_sep
                  'CVERSFLG' lc_sep
                  'OWNER' lc_sep
                  'TEXT' lc_sep
                  'COMSYS' lc_sep
                  'SRCCLI'
                  INTO ls_output.
      APPEND ls_output TO lt_output.

      "Table data
      LOOP AT lt_tmsbuffer INTO ls_tmsbuffer.
        CONCATENATE ls_tmsbuffer-domnam lc_sep
                    ls_tmsbuffer-sysnam lc_sep
                    ls_tmsbuffer-bufpos lc_sep
                    ls_tmsbuffer-buflvl lc_sep
                    ls_tmsbuffer-trkorr lc_sep
                    ls_tmsbuffer-umodes lc_sep
                    ls_tmsbuffer-impflg lc_sep
                    ls_tmsbuffer-maxrc lc_sep
                    ls_tmsbuffer-tarcli lc_sep
                    ls_tmsbuffer-project lc_sep
                    ls_tmsbuffer-trfunc lc_sep
                    ls_tmsbuffer-actflg lc_sep
                    ls_tmsbuffer-preflg lc_sep
                    ls_tmsbuffer-nodataflg lc_sep
                    ls_tmsbuffer-jobid lc_sep
                    ls_tmsbuffer-tpstatid lc_sep
                    ls_tmsbuffer-impsing lc_sep
                    ls_tmsbuffer-cversflg lc_sep
                    ls_tmsbuffer-owner lc_sep
                    ls_tmsbuffer-text lc_sep
                    ls_tmsbuffer-comsys lc_sep
                    ls_tmsbuffer-srccli
                    INTO ls_prefinal.
        PERFORM end_null_check CHANGING ls_prefinal.
        ls_output = ls_prefinal.
        APPEND ls_output TO lt_output.
      ENDLOOP.

      PERFORM null_check TABLES  lt_output.

    WHEN OTHERS.
*  Begin of changes in V001
      ls_output = lc_inc_input.        "Incorrect input
      APPEND ls_output TO lt_output.
      CLEAR ls_output.
*  End of changes in V001
  ENDCASE.

ENDFORM.

FORM end_null_check CHANGING ls_string TYPE string.

  DATA lv_last_char TYPE char1.

  lv_last_char = substring( val = ls_string
                   off = strlen( ls_string ) - 1
                   len = 1 ).
  IF lv_last_char = '|'.
    CONCATENATE ls_string 'NULL'
      INTO ls_string.
  ENDIF.

ENDFORM.


FORM null_check TABLES lt_table TYPE table.

  DO .
    REPLACE ALL OCCURRENCES OF SUBSTRING '||'
    IN TABLE lt_table WITH '|NULL|'.
    FIND '||' IN TABLE lt_table.
    IF sy-subrc <> 0.
      EXIT .
    ENDIF.
  ENDDO.

ENDFORM.