*---------------------------------------------------------------------*
* Program Name        :   ZCM_MSSQL_EXP_CURR_FREE_DBSIZE              *
* Title               :   Capture current & free DB size for MSSQL    *
* Purpose             :   This report is used to fetch current and    *
*                         free database size for MSSQL server         *
*---------------------------------------------------------------------*
* Related Transaction OR Standard Program References                  *
* DBACOCKPIT                                                          *
*---------------------------------------------------------------------*
* Tables              :   SELECT    UPDATE      INSERT      DELETE    *
*                           X                                         *
*---------------------------------------------------------------------*
* Program Change History                                              *
*---------------------------------------------------------------------*
*Date        Version   Author       TR#/Local     Description         *
*---------------------------------------------------------------------*
*04-01-2020  Initial   Ashwini B G    Local    To capture total, used *
*                                              free db size for MSSQL *
*01-03-2021  V001     Soumya Ray Local         To make column heading *
*                                              synchronus across db's *
*---------------------------------------------------------------------*
REPORT zcm_mssql_exp_curr_free_dbsize.

FORM get_config
TABLES lt_input  STRUCTURE tab512
  lt_output STRUCTURE tab512.

  CONSTANTS: lc_fetch      TYPE C VALUE 'FETCH'          LENGTH 5,
  lc_x          TYPE C VALUE 'X'              LENGTH 1,
  lc_sep        TYPE C VALUE '|'              LENGTH 1,
  lc_per        TYPE C VALUE ' %'             LENGTH 2,
  lc_title      TYPE C VALUE
  'Current & Free DB size'                    LENGTH 25,
*   Begin of changes in V001
  lc_unitmb     TYPE C VALUE 'Mb'             LENGTH 2,
  lc_brac_open  TYPE C VALUE '('              LENGTH 1,
  lc_brac_close TYPE C VALUE ')'              LENGTH 1,
  lc_size       TYPE C VALUE 'TotalSize'      LENGTH 9,
  lc_usedspace  TYPE C VALUE 'UsedSpace'      LENGTH 9,
  lc_freespace  TYPE C VALUE 'FreeSpace'      LENGTH 9,
  lc_objname    TYPE smssrattr-objname VALUE
  'sap_mon_sqldbfiles',
  lc_ninput     TYPE C VALUE
  'No input passed'                           LENGTH 15,
  lc_inc_input  TYPE C VALUE
  'Incorrect input'                           LENGTH 20.
*   End of changes in V001

  DATA: ls_input     TYPE tab512,
        ls_output    TYPE tab512,
        lv_action    TYPE char10,
        ls_conn      TYPE mssconndata,
        lt_inparams  TYPE STANDARD TABLE OF mssseria,
        lt_files     TYPE STANDARD TABLE OF mssfiles,
        ls_files     TYPE mssfiles,
        ls_view_data TYPE msscc_action_db02,
        lv_alloc_per TYPE string,
        lv_free_per  TYPE string,
        lv_alloc     TYPE string,
        lv_free      TYPE string,
        lv_totalsize TYPE string. "+V001

  CLEAR: ls_input, lv_action,
  ls_output, ls_conn, ls_files, ls_view_data, lv_alloc_per,
  lv_free_per, lv_alloc, lv_free,  lv_totalsize. "+V001
  FREE: lt_inparams, lt_files. "+V001

* Begin of changes in V001
* Title
  ls_output = lc_title.
  APPEND ls_output TO lt_output.
  CLEAR ls_output.
* End of changes in V001

  " Read input file from Python
  READ TABLE lt_input INTO ls_input INDEX 1.
* Begin of changes in V001
  IF sy-subrc NE 0.
    "No input passed
    ls_output = lc_ninput.
    APPEND ls_output TO lt_output.
    CLEAR ls_output.
    RETURN.
  ENDIF.
* End of changes in V001
  lv_action = ls_input.      " Action

  CASE lv_action.

  WHEN lc_fetch. " FETCH

    " FM to get connection details
    CLEAR: ls_conn.
    CALL FUNCTION 'SMSS_GET_CONNECTION'
    EXPORTING
      auto_conn = lc_x
    IMPORTING
      currcon   = ls_conn.

    FREE: lt_inparams[].
    APPEND ls_conn-dbschema TO lt_inparams. "object source schema
    APPEND ls_conn-dbname TO lt_inparams.

    " FM to get DB details
    FREE: lt_files[].
    CALL FUNCTION 'SMSS_RAT_GENERIC'
    EXPORTING
      conn     = ls_conn
      objname  = lc_objname "+V001
    TABLES
      inparams = lt_inparams
      t_result = lt_files
    EXCEPTIONS
      OTHERS   = 1.
    IF sy-subrc EQ 0.

* The following logic is taken from the standard code and edited
* to suit our requirement. This can be restored if the addl logic
* is found to be required.

      CLEAR: ls_view_data.
      ls_view_data-datatotalmb = 0.
      ls_view_data-datallocmb = 0.

      CLEAR: ls_files.
      LOOP AT lt_files INTO ls_files.
        IF ls_files-logdev NE lc_x.
          " Total DB size
          ls_view_data-datatotalmb =
          ls_view_data-datatotalmb + ls_files-flsizemb.
          " Allocated DB size
          ls_view_data-datallocmb =
          ls_view_data-datallocmb + ls_files-allocmb.
        ENDIF.
      ENDLOOP.

      " Free DB size
      ls_view_data-datafreemb =
      ls_view_data-datatotalmb - ls_view_data-datallocmb.

      IF ls_view_data-datafreemb < 0.
        ls_view_data-datafreemb = 0.
      ENDIF.

      lv_totalsize = ls_view_data-datatotalmb. "+V001
      lv_alloc = ls_view_data-datallocmb.
      lv_free  = ls_view_data-datafreemb.

      " Free DB percentage
      ls_view_data-datafreepct =
      ( ls_view_data-datafreemb / ls_view_data-datatotalmb ) * 100 .

      lv_free_per = |{ lc_brac_open } { ls_view_data-datafreepct }| &
      |{ lc_per } { lc_brac_close }|. "+V001

      " Allocated DB percentage
      ls_view_data-datallocpct = 100 - ls_view_data-datafreepct.

      lv_alloc_per = |{ lc_brac_open } { ls_view_data-datallocpct }| &
      |{ lc_per } { lc_brac_close } |. "+V001

*    Begin of changes in V001
      CONCATENATE lv_totalsize lc_unitmb INTO lv_totalsize
      SEPARATED BY space.
      CONCATENATE lv_alloc lc_unitmb lv_alloc_per INTO lv_alloc
      SEPARATED BY space.
      CONCATENATE lv_free lc_unitmb lv_free_per INTO lv_free
      SEPARATED BY space.
*    End of changes in V001

      " Heading Columns
      CLEAR: ls_output.
*  Begin of changes in V001
      CONCATENATE lc_size lc_sep
      lc_usedspace lc_sep
      lc_freespace
      INTO ls_output.
      APPEND ls_output TO lt_output.

      " Data
      CLEAR: ls_output.
      CONCATENATE lv_totalsize lc_sep
      lv_alloc     lc_sep
      lv_free      INTO ls_output.
      CONDENSE ls_output.
      APPEND ls_output TO lt_output.
* End of changes in V001
    ELSE.

      " Display error message if any
      CLEAR: ls_output.
      MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
      WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4
      INTO ls_output.
      APPEND ls_output TO lt_output.
      RETURN.

    ENDIF.
    CLEAR: ls_input, lv_action, ls_output, ls_conn, ls_files,
    ls_view_data, lv_alloc_per, lv_free_per, lv_alloc, lv_free,
    lv_totalsize. "+V001
    FREE: lt_inparams, lt_files. "+V001

  WHEN OTHERS.
*  Begin of changes in V001
    ls_output = lc_inc_input. "Incorrect input
    APPEND ls_output TO lt_output.
    CLEAR ls_output.
*  End of changes in V001

  ENDCASE.

ENDFORM.