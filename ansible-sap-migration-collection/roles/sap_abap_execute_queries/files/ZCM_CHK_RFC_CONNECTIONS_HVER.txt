*---------------------------------------------------------------------*
* Program Name        :   ZCM_CHK_RFC_CONNECTIONS_HVER                *
* Title               :   Export & Test RFC Connections               *
* Purpose             :   This report is used to Export & Test RFC    *
*                         Connections during Cloud Migration          *
*---------------------------------------------------------------------*
* Related Transaction OR Standard Program References                  *
* RSRFCCHK                                                            *
*---------------------------------------------------------------------*
* Tables              :   SELECT    UPDATE      INSERT      DELETE    *
* XXXXXXX                   X                                         *
*---------------------------------------------------------------------*
* Program Change History                                              *
*---------------------------------------------------------------------*
*Date        Version   Author       TR#/Local     Description         *
*---------------------------------------------------------------------*
*08-24-2020  Initial Ruchir Kamble  FIOK900653 To Export & Test ABAP  *
*                                              RFC Connection         *
*05-18-2021   V001   Ruchir Kamble  FIOK900653 To Export & Test all   *
*                                              types of RFC           *
*                                              Connections and Add    *
*                                              maximum timeout        *
*07-25-2022   V002     Soumya Ray     Local   To pass message "No data*
*                                             found" in case of no    *
*                                             data found in sysytem   *
*07-05-2023   V003     Ashwini K P    Local   Removed extra title &   *
*                                           changed the title to match*
*                                           with other versions       *
*---------------------------------------------------------------------*
REPORT zcm_chk_rfc_connections_hver.

LOAD-OF-PROGRAM.

FORM get_config
              TABLES lt_input  STRUCTURE tab512
                     lt_output STRUCTURE tab512.

  TYPES:BEGIN OF lty_list,
          rfctype        TYPE rfctype_d,
          rfctytext      TYPE rfctytext,
          rfcdest        TYPE rfcdest,
          rfcdoc1        TYPE rfcdoc_d,
          muname         TYPE modusrname,
          mudate         TYPE rdir_udate,
          mutime         TYPE syuzeit,
          muclient       TYPE symandt,
          cuname         TYPE creusrname,
          cudate         TYPE rdir_cdate,
          cutime         TYPE syuzeit,
          cuclient       TYPE symandt,
          rfchost        TYPE rfchost,
          rfcservice     TYPE rfcservice,
          rfcclient      TYPE rfcclient,
          rfcsameusr     TYPE rfcsameusr,
          rfcuser        TYPE rfcalias,
          rfclang        TYPE rfclang,
          rfcauth        TYPE rfcauth,
          rfclogon       TYPE rfclogon,
          rfctsysopt     TYPE rfctsysopt,
          rfcsnc         TYPE rfcsnc,
          authority      TYPE destauth,
          tst_con_passed TYPE boole_d,
          tst_log_passed TYPE boole_d,
          rfc_conn_tst_i TYPE icon_text,
          rfc_conn_tst_t TYPE c LENGTH 132,
          rfc_msgid      TYPE sy-msgid,
          rfc_msgno      TYPE sy-msgno,
          rfc_msgv1      TYPE sy-msgv1,
          color          TYPE lvc_t_scol,
        END OF lty_list.

  CONSTANTS: lc_sep        TYPE c VALUE '|'                  LENGTH 1,
             lc_x          TYPE c VALUE 'X'                  LENGTH 1,
             lc_export     TYPE c VALUE 'EXPORT'             LENGTH 6,
             lc_conn_type  TYPE c VALUE 'Connectiontype'     LENGTH 20,
             lc_rfc_dest   TYPE c VALUE 'RFCDestination'     LENGTH 20,
             lc_desc       TYPE c VALUE 'Description'        LENGTH 20,
             lc_changed_by TYPE c VALUE 'LastChangedby'      LENGTH 25,
             lc_changed_on TYPE c VALUE 'Changedon'          LENGTH 20,
             lc_host       TYPE c VALUE 'Targethost'         LENGTH 20,
             lc_service    TYPE c VALUE 'Service'            LENGTH 10,
             lc_client     TYPE c VALUE 'Client'             LENGTH 6,
             lc_curr_user  TYPE c VALUE 'CurrentUser'        LENGTH 15,
             lc_alias      TYPE c VALUE 'UserIdorAliasName'  LENGTH 25,
             lc_language   TYPE c VALUE 'Language'           LENGTH 10,
             lc_password   TYPE c VALUE 'Password'           LENGTH 10,
             lc_logon      TYPE c VALUE 'LogonScreen'        LENGTH 20,
             lc_trustedsys TYPE c VALUE 'TrustedSystem'      LENGTH 25,
             lc_rfc_snc    TYPE c VALUE 'RFCSNC'             LENGTH 6,
             lc_destn_auth TYPE c VALUE 'DestnAuthorization' LENGTH 30,
             lc_statistics TYPE c VALUE
             'DisplayedRFCConnections'                       LENGTH 40,
             lc_title      TYPE c VALUE
             'RFC Destinations with Logon Data'              LENGTH 50,
             lc_con_passed TYPE c VALUE 'Testpassed'         LENGTH 10,
             lc_testresult TYPE c VALUE 'Testresult'         LENGTH 10,
*   Begin of changes in V001
             lc_inc_input  TYPE c VALUE 'Incorrect input'    LENGTH 20,
             lc_noinput    TYPE c VALUE 'No input given'     LENGTH 20,
             lc_all        TYPE c VALUE '*'                  LENGTH 1,
             lc_cp         TYPE c VALUE 'CP'                 LENGTH 2,
             lc_i          TYPE c VALUE 'I'                  LENGTH 1,
*   End of changes in V001
*   Begin of changes in V002
             lc_err_msg    TYPE c VALUE
             'No data found'                                 LENGTH 20,
             lc_null       TYPE c VALUE 'NULL'               LENGTH 4.
*   End of changes in V002

  DATA: ls_input   TYPE tab512,
        ls_output  TYPE tab512,
        lv_action  TYPE char20,
        lv_cnt     TYPE sy-tabix,
        lv_count   TYPE char5,
        lv_runtime TYPE char10,
        lv_maxtime TYPE sy-tabix,
        lr_rfc_chk TYPE REF TO cl_sais_rfcchk,
        lt_rfctype TYPE cl_sais_rfcchk=>tt_r_rfctyp,
        lt_list    TYPE STANDARD TABLE OF lty_list,
        ls_list    TYPE lty_list.

*   Begin of changes in V001
  " Clearing variables before use
  CLEAR: ls_output, ls_input, ls_list, lv_cnt, lv_count.

  FREE: lt_output, lt_list, lt_rfctype.

  " Adding title to the output
  ls_output = lc_title.
  APPEND ls_output TO lt_output.

  READ TABLE lt_input INTO ls_input INDEX 1.

  IF sy-subrc EQ 0.
    SPLIT ls_input AT lc_sep INTO
    lv_action       " Action
    lv_runtime.     " Maximum timeout in seconds
  ELSE.
    " No input given
    ls_output = lc_noinput.
    APPEND ls_output TO lt_output.
    CLEAR ls_output.
    RETURN.
  ENDIF.

*   End of changes in V001
  CASE lv_action.

    WHEN lc_export.      " If action is Export

      CREATE OBJECT lr_rfc_chk
        EXPORTING
          id_repid = sy-repid.

*   Begin of changes in V001

      lv_maxtime = lv_runtime.

      " Adding RFC connections types to ranges lt_rfctype
      APPEND VALUE #( sign = lc_i option = lc_cp low = lc_all ) TO
      lt_rfctype.

      " To check RFC Connections
      CALL METHOD lr_rfc_chk->check_rfc_destinations
        EXPORTING
          it_r_rfctyp  = lt_rfctype
          id_wo_passw  = lc_x
          id_excl_loc  = lc_x
          id_conn_test = lc_x
          id_maxtim    = lv_maxtime
        RECEIVING
          ed_cnt       = lv_cnt.

*   End of changes in V001

      " To get results of RFC destination
      CALL METHOD lr_rfc_chk->get_result_list
        IMPORTING
          et_list = lt_list.

      IF lt_list IS NOT INITIAL.

        " Adding headings to the output
        CONCATENATE  lc_conn_type  lc_sep
                     lc_rfc_dest   lc_sep
                     lc_desc       lc_sep
                     lc_changed_by lc_sep
                     lc_changed_on lc_sep
                     lc_host       lc_sep
                     lc_service    lc_sep
                     lc_client     lc_sep
                     lc_curr_user  lc_sep
                     lc_alias      lc_sep
                     lc_language   lc_sep
                     lc_password   lc_sep
                     lc_logon      lc_sep
                     lc_trustedsys lc_sep
                     lc_rfc_snc    lc_sep
                     lc_destn_auth lc_sep
                     lc_con_passed lc_sep
                     lc_testresult
                     INTO ls_output.
        APPEND ls_output TO lt_output.
        CLEAR ls_output.

        LOOP AT lt_list INTO ls_list.

*   Begin of changes in V002
          CONDENSE ls_list-rfchost.

          IF ls_list-rfc_conn_tst_t IS INITIAL.
            ls_list-rfc_conn_tst_t = lc_null.
          ENDIF.
*   End of changes in V002

          CONCATENATE ls_list-rfctytext       lc_sep
                      ls_list-rfcdest         lc_sep
                      ls_list-rfcdoc1         lc_sep
                      ls_list-muname          lc_sep
                      ls_list-mudate          lc_sep
                      ls_list-rfchost         lc_sep
                      ls_list-rfcservice      lc_sep
                      ls_list-rfcclient       lc_sep
                      ls_list-rfcsameusr      lc_sep
                      ls_list-rfcuser         lc_sep
                      ls_list-rfclang         lc_sep
                      ls_list-rfcauth         lc_sep
                      ls_list-rfclogon        lc_sep
                      ls_list-rfctsysopt      lc_sep
                      ls_list-rfcsnc          lc_sep
                      ls_list-authority       lc_sep
                      ls_list-tst_con_passed  lc_sep
                      ls_list-rfc_conn_tst_t
                      INTO ls_output.
          APPEND ls_output TO lt_output.
          CLEAR: ls_list, ls_output.
        ENDLOOP.

      ELSE.
        " No data found
        ls_output = lc_err_msg.
        APPEND ls_output TO lt_output.
        CLEAR ls_output.

      ENDIF.

*   Begin of changes in V001
    WHEN OTHERS.
      " Incorrect input
      ls_output = lc_inc_input.
      APPEND ls_output TO lt_output.
      CLEAR ls_output.

*   End of changes in V001

  ENDCASE.

*   Begin of changes in V001
  IF lt_output[] IS NOT INITIAL.
    DO.
      REPLACE ALL OCCURRENCES OF SUBSTRING '||'
      IN TABLE lt_output WITH '|NULL|'.
      FIND '||' IN TABLE lt_output.
      IF sy-subrc <> 0.
        EXIT .
      ENDIF.
    ENDDO.
  ENDIF.
*   End of changes in V001

ENDFORM.