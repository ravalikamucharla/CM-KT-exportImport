*---------------------------------------------------------------------*
* Program Name        :   ZCM_SMT1_EXP_TRUSTED_RFC                    *
* Title               :   Export Trusted RFC in SMT1                  *
* Purpose             :   This report is to capture Trusted RFCs in   *
*                         SMT1 during Cloud Migration                 *
*---------------------------------------------------------------------*
* Related Transaction OR Standard Program References                  *
* SMT1                                                                *
*---------------------------------------------------------------------*
* Tables              :   SELECT    UPDATE      INSERT      DELETE    *
* RFCSYSACL                 X                                         *
*---------------------------------------------------------------------*
* Program Change History                                              *
*---------------------------------------------------------------------*
*Date        Version   Author       TR#/Local     Description         *
*---------------------------------------------------------------------*
*09-18-2020  Initial Ruchir Kamble  FIOK900653   To Capture Trusted   *
*                                                RFCs in SMT1         *
*05-27-2021   V001  Ruchir Kamble  FIOK900653    To Change Column     *
*                                                headings             *
*07-28-2022   V002 Soumya/Yasaswini Local     To pass message "No data*
*                                             found" in case of no    *
*                                             data found in sytem     *
*---------------------------------------------------------------------*

REPORT zcm_smt1_exp_trusted_rfc.

LOAD-OF-PROGRAM.

FORM get_config
              TABLES lt_input  STRUCTURE tab512
                     lt_output STRUCTURE tab512.

  TYPES: BEGIN OF lty_result,
           rfcdest     TYPE rfcdest,
           action(30)  TYPE c,
           result(80)  TYPE c,
           message(80) TYPE c,
         END OF lty_result.

  CONSTANTS:
    lc_sep              TYPE c VALUE '|'                    LENGTH 1,
    lc_export           TYPE c VALUE 'EXPORT'               LENGTH 6,
    lc_null             TYPE c VALUE 'NULL'                 LENGTH 4,
*   Begin of changes in V001
    lc_calling_sys      TYPE c VALUE 'Calling System'       LENGTH 14,
    lc_installation     TYPE c VALUE 'Installation Number'  LENGTH 20,
    lc_called_sys       TYPE c VALUE 'Called System'        LENGTH 13,
    lc_rfcdest          TYPE c VALUE 'RFC Destination'      LENGTH 15,
    lc_appserver        TYPE c VALUE 'Application Server'   LENGTH 18,
    lc_msgserver        TYPE c VALUE 'Message Server'       LENGTH 14,
    lc_installno_called TYPE c VALUE
    'Installation Number (Called System)'                   LENGTH 35,
    lc_appserver_called TYPE c VALUE
    'Application Server (Called System)'                    LENGTH 35,
    lc_x                TYPE c VALUE 'X'                    LENGTH 1,
    lc_d                TYPE c VALUE 'D'                    LENGTH 1,
*   End of changes in V001
    lc_logon            TYPE c VALUE 'Logon'                LENGTH 5,
    lc_cancel           TYPE c VALUE 'Cancel'               LENGTH 6,
    lc_error            TYPE c VALUE 'Error'                LENGTH 5,
    lc_msec             TYPE c VALUE 'msec'                 LENGTH 4,
    lc_errordetails     TYPE c VALUE 'Error details'        LENGTH 15,
    lc_conn_error       TYPE c VALUE 'Connection Error'     LENGTH 18,
    lc_action           TYPE c VALUE 'Action'               LENGTH 6,
    lc_result           TYPE c VALUE 'Result'               LENGTH 6,
    lc_conn_test        TYPE c VALUE 'Connection Test'      LENGTH 25,
    lc_title            TYPE c VALUE
    'Trusted Trusting Connections'                          LENGTH 35,
*  Begin of changes in V002
    lc_err_msg          TYPE c VALUE
    'No data found'                                         LENGTH 20,
    lc_inc_input        TYPE c VALUE
    'Incorrect input'                                       LENGTH 20,
    lc_noinput   TYPE c VALUE
    'No input passed'                                       LENGTH 20.
*  End of changes in V002

  DATA: ls_input         TYPE tab512,
        ls_output        TYPE tab512,
        lv_action        TYPE char20,
        lv_transfer_time TYPE sy-index,
        lv_rfc_mess      TYPE sy-lisel,
        lt_result        TYPE TABLE OF lty_result,
        ls_result        TYPE lty_result,
        lt_trusted       TYPE STANDARD TABLE OF rfcsysacl,
        ls_trusted       TYPE rfcsysacl.

*   Begin of changes in V001

  " Clearing variables before use
  CLEAR: ls_output, ls_input, lv_action, lv_rfc_mess, ls_result,
         ls_trusted, lv_transfer_time.

  FREE: lt_output, lt_result, lt_trusted.

*   End of changes in V001

  " Adding title to the output
  ls_output = lc_title.
  APPEND ls_output TO lt_output.

  READ TABLE lt_input INTO ls_input INDEX 1.

* Begin of changes in V002
  IF sy-subrc NE 0.
  " No input passed
    ls_output = lc_noinput.
    APPEND ls_output TO lt_output.
    CLEAR ls_output.
    RETURN.
  ENDIF.
* End of changes in V002

  lv_action = ls_input.      " Action

  CASE lv_action.

    WHEN lc_export.               " When action is EXPORT

      SELECT *
        FROM rfcsysacl
        INTO TABLE lt_trusted.
* Begin of changes V002
      IF sy-subrc NE 0.
        " No data found
        ls_output = lc_err_msg.
        APPEND ls_output TO lt_output.
        CLEAR ls_output.
      ENDIF.
* End of changes V002

      IF lt_trusted IS NOT INITIAL.

        " Sorting table by RFCSYSSID
        SORT lt_trusted BY rfcsysid.

*   Begin of changes in V001
        " Adding heading to the output
        CONCATENATE lc_calling_sys      lc_sep
                    lc_installation     lc_sep
                    lc_called_sys       lc_sep
                    lc_installno_called lc_sep
                    lc_rfcdest          lc_sep
                    lc_appserver        lc_sep
                    lc_msgserver        lc_sep
                    lc_appserver_called
                    INTO ls_output.
        APPEND ls_output TO lt_output.
        CLEAR ls_output.

*   End of changes in V001

        LOOP AT lt_trusted INTO ls_trusted.
*  Begin of changes in V002
          IF ls_trusted-rfcsysid IS INITIAL.
             ls_trusted-rfcsysid = lc_null.
          ENDIF.

          IF ls_trusted-rfcmsgsrv IS INITIAL.
             ls_trusted-rfcmsgsrv = lc_null.
          ENDIF.
*  End of changes in V002
          CONCATENATE ls_trusted-rfcsysid     lc_sep
                      ls_trusted-tlicense_nr  lc_sep
                      ls_trusted-rfctrustsy   lc_sep
                      ls_trusted-llicense_nr  lc_sep
                      ls_trusted-rfcdest      lc_sep
                      ls_trusted-rfccredest   lc_sep
                      ls_trusted-rfcregdest   lc_sep
                      ls_trusted-rfcmsgsrv
                      INTO ls_output.
          APPEND ls_output TO lt_output.
          CLEAR: ls_trusted, ls_output.

        ENDLOOP.

      ELSE.

        " No data found
        ls_output = lc_err_msg.
        APPEND ls_output TO lt_output.
        CLEAR ls_output.
        RETURN. "+V002

      ENDIF.

      " Adding empty line
      ls_output = space.
      APPEND ls_output TO lt_output.

      " Adding title to the output
      ls_output = lc_conn_test.
      APPEND ls_output TO lt_output.
      CLEAR ls_output.

      " Adding heading to the output
      CONCATENATE lc_rfcdest    lc_sep
                  lc_action     lc_sep
                  lc_result     lc_sep
                  lc_error
                  INTO ls_output.
      APPEND ls_output TO lt_output.

      REFRESH lt_result.

      LOOP AT lt_trusted INTO ls_trusted.

        " FM for Authorization Check of RFCDEST
        CALL FUNCTION 'RFC_TRUSTED_CHECK'
          EXPORTING
            rfcdest       = ls_trusted-rfcdest
          IMPORTING
            transfer_time = lv_transfer_time
            error_message = lv_rfc_mess.

        ls_result-rfcdest = ls_trusted-rfcdest.

        IF syst-subrc = 1 OR NOT lv_rfc_mess IS INITIAL.
          ls_result-action = lc_logon .
          ls_result-result = lc_cancel.
          ls_result-message =  lv_rfc_mess.
          APPEND ls_result TO lt_result.
        ELSE.
          IF syst-subrc = 2.
            ls_result-action  = lc_logon.
            ls_result-result  = lc_conn_error.
            ls_result-message = lv_rfc_mess.
            APPEND ls_result TO lt_result.

          ELSE.
            ls_result-action = lc_logon.
            ls_result-result = lv_transfer_time.
            CONDENSE ls_result-result NO-GAPS.
            CONCATENATE ls_result-result lc_msec
              INTO ls_result-result SEPARATED BY space.
            APPEND ls_result TO lt_result.
          ENDIF.
        ENDIF.

        CLEAR ls_result.

      ENDLOOP.

      LOOP AT lt_result INTO ls_result.

        IF ls_result-message IS INITIAL.
          ls_result-message = lc_null.
        ENDIF.

*  Begin of changes in V002
        IF ls_result-message IS INITIAL.
          ls_result-message = lc_null.
        ENDIF.
*  End of changes in V002

        CONCATENATE ls_result-rfcdest   lc_sep
                    ls_result-action    lc_sep
                    ls_result-result    lc_sep
                    ls_result-message
                    INTO ls_output.
        APPEND ls_output TO lt_output.
        CLEAR: ls_result, ls_output.

      ENDLOOP.

*  Begin of changes in V002
 "Null check in middle fields
  DO .
    REPLACE ALL OCCURRENCES OF SUBSTRING '||'
    IN TABLE lt_output WITH '|NULL|'.
    FIND '||' IN TABLE lt_output.
    IF sy-subrc <> 0.
      EXIT .
    ENDIF.
  ENDDO.
*  End of changes in V002

  WHEN OTHERS.

*  Begin of changes in V002
    ls_output = lc_inc_input. "Incorrect input
    APPEND ls_output TO lt_output.
    CLEAR ls_output.
*  End of changes in V002

  ENDCASE.
ENDFORM.