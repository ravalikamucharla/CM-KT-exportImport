*---------------------------------------------------------------------*
* Program Name        :   ZBASIS_R_QCM_MIGRATE                        *
* Title               :   Invalid Temporary Tables                    *
* Purpose             :   To capture and delete invalid temporary     *
*                         tables                                      *
*---------------------------------------------------------------------*
* Related Transaction OR Standard Program References                  *
* XXXXXXX                                                             *
*---------------------------------------------------------------------*
* Tables              :   SELECT    UPDATE      INSERT      DELETE    *
* XXXXX                     X                                         *
*---------------------------------------------------------------------*
* Program Change History                                              *
*---------------------------------------------------------------------*
*Date        Version   Author       TR#/Local     Description         *
*---------------------------------------------------------------------*
*09-28-2020  Initial   Ruchir Kamble  Local       To capture & delete *
*                                                 invalid temporary   *
*                                                 tables              *
*05-19-2022  V001      Soumya Ray     Local       To pass 'No data    *
*                                                 found' in case of no*
*                                                 data in system      *
*---------------------------------------------------------------------*

REPORT zcm_se14_del_qcm_tables.

LOAD-OF-PROGRAM.

FORM get_config
              TABLES lt_input  STRUCTURE tab512
                     lt_output STRUCTURE tab512.

  DATA BEGIN OF lt_iqcm  OCCURS 80.
  INCLUDE STRUCTURE ddsymtab.
  DATA END OF lt_iqcm.

  DEFINE define_table.
    DATA: BEGIN OF &1 OCCURS &3.
            INCLUDE STRUCTURE &2.
    DATA: END OF &1.
  END-OF-DEFINITION.

  CONSTANTS:
    lc_export      TYPE c VALUE 'EXPORT'               LENGTH 6,
    lc_delete      TYPE c VALUE 'DELETE'               LENGTH 6,
    lc_object_name TYPE c VALUE 'Objectname'           LENGTH 10,
    lc_title       TYPE c VALUE
    'Temporary tables from update without restart log' LENGTH 50,
    lc_del_msg     TYPE c VALUE
    'Invalid temporary tables deleted are'             LENGTH 40,
*  Begin of changes in V001
    lc_noinput     TYPE c VALUE 'No input passed'      LENGTH 30,
    lc_err_msg     TYPE c VALUE 'No data found'        LENGTH 20,
    lc_inc_input   TYPE c VALUE
    'Incorrect input'                                  LENGTH 20.
*  End of changes in V001

  DATA: ls_input   TYPE tab512,
        ls_output  TYPE tab512,
        lv_action  TYPE char20,
        lv_subrc   LIKE sy-subrc,
        lv_tabname LIKE x030l-tabname,
        ls_iqcm    LIKE LINE OF lt_iqcm.

  define_table all_tables dbobject 20000.

  " Adding title to the output
  ls_output = lc_title.
  APPEND ls_output TO lt_output.
  CLEAR ls_output.

  READ TABLE lt_input INTO ls_input INDEX 1.
* Begin of changes in V001
  IF sy-subrc NE 0.
    ls_output = lc_noinput. "No input passed
    APPEND ls_output TO lt_output.
    CLEAR ls_output.
    RETURN.
  ENDIF.
* End of changes in V001

  lv_action = ls_input.      " Action

  CASE lv_action.

    WHEN lc_export.               " When action is EXPORT

      REFRESH lt_iqcm.  CLEAR lt_iqcm.
      CALL FUNCTION 'DB_GET_ALL_TABLES'
        IMPORTING
          subrc      = lv_subrc
        TABLES
          all_tables = all_tables
        EXCEPTIONS
          OTHERS     = 1.

      LOOP AT all_tables.
        IF all_tables-objname(3) EQ 'QCM'.

          lv_tabname = all_tables-objname.
          PERFORM qcm_nametab_verify(saplsddd)
          USING lv_tabname 'X' lv_subrc.
          IF lv_subrc EQ 4.
            lt_iqcm-name = all_tables-objname.
            APPEND lt_iqcm.
          ENDIF.
        ENDIF.
      ENDLOOP.


      IF lt_iqcm IS NOT INITIAL.

* Begin of changes in V001
        " Adding heading to the output
        ls_output = lc_object_name.
        APPEND ls_output TO lt_output.
        CLEAR ls_output.
*  End of changes in V001

        LOOP AT lt_iqcm INTO ls_iqcm.

          ls_output = ls_iqcm-name.
          APPEND ls_output TO lt_output.
          CLEAR: ls_output, ls_iqcm.

        ENDLOOP.

      ELSE.
         " No data found
        ls_output = lc_err_msg.
        APPEND ls_output TO lt_output.
        CLEAR ls_output.

      ENDIF.

    WHEN lc_delete.               " When action is DELETE

      REFRESH lt_iqcm.  CLEAR lt_iqcm.
      CALL FUNCTION 'DB_GET_ALL_TABLES'
        IMPORTING
          subrc      = lv_subrc
        TABLES
          all_tables = all_tables
        EXCEPTIONS
          OTHERS     = 1.
      LOOP AT all_tables.
        IF all_tables-objname(3) EQ 'QCM'.

          lv_tabname = all_tables-objname.
          PERFORM qcm_nametab_verify(saplsddd)
          USING lv_tabname 'X' lv_subrc.
          IF lv_subrc EQ 4.
            lt_iqcm-name = all_tables-objname.
            APPEND lt_iqcm.
          ENDIF.
        ENDIF.
      ENDLOOP.

      IF lt_iqcm IS NOT INITIAL.

        " Invalid temporary tables deleted are
        ls_output = lc_del_msg.
        APPEND ls_output TO lt_output.
        CLEAR ls_output.

        LOOP AT lt_iqcm INTO ls_iqcm.

          CALL 'DB_RM_NTAB' ID 'TABNAME' FIELD ls_iqcm-name.
          CALL FUNCTION 'DB_DROP_TABLE'
            EXPORTING
              tabname               = ls_iqcm-name
            EXCEPTIONS
              program_not_generated = 1
              program_not_written   = 2
              table_not_dropped     = 3
              OTHERS                = 4.

          IF sy-subrc EQ 0.

            ls_output = ls_iqcm-name.
            APPEND ls_output TO lt_output.
            CLEAR ls_output.

          ENDIF.
        ENDLOOP.

      ELSE.
        " No data found
        ls_output = lc_err_msg.
        APPEND ls_output TO lt_output.
        CLEAR ls_output.

      ENDIF.

* Begin of changes in V001
    WHEN OTHERS.
      ls_output = lc_inc_input. "Incorrect input
      APPEND ls_output TO lt_output.
      CLEAR ls_output.
* End of changes in V001
  ENDCASE.

ENDFORM.