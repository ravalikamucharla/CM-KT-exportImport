*---------------------------------------------------------------------*
* Program Name        :   ZCM_EXP_SYSTEM_STATUS                       *
* Title               :   Export SAP System Status                    *
* Purpose             :   This report is used to Export System Status *
*                         during Cloud Migration                      *
*---------------------------------------------------------------------*
* Related Transaction OR Standard Program References                  *
* XXXX                                                                *
*---------------------------------------------------------------------*
* Tables              :   SELECT    UPDATE      INSERT      DELETE    *
* XXXXX                     X                                         *
*---------------------------------------------------------------------*
* Program Change History                                              *
*---------------------------------------------------------------------*
*Date        Version   Author       TR#/Local     Description         *
*---------------------------------------------------------------------*
*06-07-2021  Initial   Ruchir Kamble  Local    To Export System Status*
*11-23-2021  V001      Soumya Ray     Local    To get DBSL patch level*
*                                            from database information*
*---------------------------------------------------------------------*

REPORT zcm_exp_system_status.

LOAD-OF-PROGRAM.

FORM get_config
              TABLES lt_input  STRUCTURE tab512
                     lt_output STRUCTURE tab512.

  TYPES: BEGIN OF lty_version_info,
           line(80) TYPE c,
         END OF lty_version_info,

         BEGIN OF lty_data,
           locnt TYPE xulocnt,
           trdat TYPE xuldate,
           ltime TYPE xultime,
         END OF lty_data.

  CONSTANTS:
    lc_sep         TYPE c VALUE '|'                       LENGTH 1,
    lc_1           TYPE c VALUE '1'                       LENGTH 1,
    lc_2           TYPE c VALUE '2'                       LENGTH 1,
    lc_3           TYPE c VALUE '3'                       LENGTH 1,
    lc_5           TYPE c VALUE '5'                       LENGTH 1,
    lc_6           TYPE c VALUE '6'                       LENGTH 1,
    lc_10          TYPE c VALUE '10'                      LENGTH 2,
    lc_11          TYPE c VALUE '11'                      LENGTH 2,
    lc_12          TYPE c VALUE '12'                      LENGTH 2,
    lc_13          TYPE c VALUE '13'                      LENGTH 2,
    lc_14          TYPE c VALUE '14'                      LENGTH 2,
    lc_15          TYPE c VALUE '15'                      LENGTH 2,
    lc_16          TYPE c VALUE '16'                      LENGTH 2,
    lc_17          TYPE c VALUE '17'                      LENGTH 2,
    lc_18          TYPE c VALUE '18'                      LENGTH 2,
    lc_19          TYPE c VALUE '19'                      LENGTH 2,
    lc_20          TYPE c VALUE '20'                      LENGTH 2,
    lc_21          TYPE c VALUE '21'                      LENGTH 2,
    lc_22          TYPE c VALUE '22'                      LENGTH 2,
    lc_yes         TYPE c VALUE 'Yes'                     LENGTH 3,
    lc_no          TYPE c VALUE 'No'                      LENGTH 2,
    lc_null        TYPE c VALUE 'NULL'                    LENGTH 4,
    lc_export      TYPE c VALUE 'EXPORT'                  LENGTH 6,
    lc_usage       TYPE c VALUE 'Usage data'              LENGTH 10,
    lc_client      TYPE c VALUE 'Client'                  LENGTH 6,
    lc_user        TYPE c VALUE 'User'                    LENGTH 4,
    lc_language    TYPE c VALUE 'Language'                LENGTH 8,
    lc_logondate   TYPE c VALUE 'Logon Date'              LENGTH 10,
    lc_logontime   TYPE c VALUE 'Logon Time'              LENGTH 10,
    lc_systime     TYPE c VALUE 'System time'             LENGTH 11,
    lc_timezone    TYPE c VALUE 'Time Zone'               LENGTH 9,
    lc_time        TYPE c VALUE 'Time'                    LENGTH 4,
    lc_attempts    TYPE c VALUE
    'Number of Failed Password Logon Attempts'            LENGTH 50,
    lc_sapdata     TYPE c VALUE 'SAP System data'         LENGTH 15,
    lc_installnum  TYPE c VALUE 'Installation Number'     LENGTH 20,
    lc_license     TYPE c VALUE 'License Expires On'      LENGTH 20,
    lc_unicode     TYPE c VALUE 'Unicode System'          LENGTH 14,
    lc_hostdata    TYPE c VALUE 'Host data'               LENGTH 9,
    lc_opsys       TYPE c VALUE 'Operating system'        LENGTH 16,
    lc_machine     TYPE c VALUE 'Machine type'            LENGTH 12,
    lc_server      TYPE c VALUE 'Server name'             LENGTH 11,
    lc_platform    TYPE c VALUE 'Platform ID'             LENGTH 11,
    lc_dbdata      TYPE c VALUE 'Database data'           LENGTH 13,
    lc_dbsys       TYPE c VALUE 'Database system'         LENGTH 15,
    lc_release     TYPE c VALUE 'Release'                 LENGTH 7,
    lc_name        TYPE c VALUE 'Name'                    LENGTH 4,
    lc_host        TYPE c VALUE 'Host'                    LENGTH 4,
    lc_schema      TYPE c VALUE 'Schema'                  LENGTH 6,
    lc_owner       TYPE c VALUE 'Owner'                   LENGTH 5,
    lc_kernelinfo  TYPE c VALUE 'Kernel Information'      LENGTH 18,
    lc_kernelrel   TYPE c VALUE 'Kernel release'          LENGTH 14,
    lc_compilation TYPE c VALUE 'Compilation'             LENGTH 11,
    lc_patchlevel  TYPE c VALUE 'Patch Level'             LENGTH 11,
    lc_abapload    TYPE c VALUE 'ABAP Load'               LENGTH 9,
    lc_cuaload     TYPE c VALUE 'CUA load'                LENGTH 8,
    lc_mode        TYPE c VALUE 'Mode'                    LENGTH 4,
    lc_rsynfile    TYPE c VALUE 'Rsyn file'               LENGTH 9,
    lc_dbinfo      TYPE c VALUE 'Database information'    LENGTH 20,
    lc_clientlib   TYPE c VALUE 'DB client lib.'          LENGTH 14,
    lc_dbreleases  TYPE c VALUE 'DB Releases'             LENGTH 11,
    lc_dbslversion TYPE c VALUE 'DBSL version'            LENGTH 12,
    lc_dbslpatch   TYPE c VALUE 'DBSL Patch Level'        LENGTH 16,
    lc_sysinfo     TYPE c VALUE 'System information'      LENGTH 18,
    lc_ipaddress   TYPE c VALUE 'IP address'              LENGTH 10,
    lc_sapversions TYPE c VALUE 'SAP versions'            LENGTH 12,
    lc_oprelease   TYPE c VALUE 'OP release'              LENGTH 10,
    lc_amd64       TYPE c VALUE 'AMD64'                   LENGTH 5,
    lc_x86_64      TYPE c VALUE 'X86_64'                  LENGTH 6,
    lc_title       TYPE c VALUE 'System Status'           LENGTH 13,
    lc_inc_input   TYPE c VALUE 'Incorrect input'         LENGTH 20,
    lc_noinput     TYPE c VALUE 'No input given'          LENGTH 20.

  DATA: ls_output               TYPE tab512,
        ls_input                TYPE tab512,
        lv_action               TYPE char6,
        lv_machinetype(10)      TYPE c,
        lv_platform_id(10)      TYPE c,
        lv_db_schema(10)        TYPE c,
        lv_db_user(12)          TYPE c,
        lv_database_owner(10)   TYPE c,
        lv_database_name(10)    TYPE c,
        lv_database_sys(10)     TYPE c,
        lv_database_release(32) TYPE c,
        lv_unicode(5)           TYPE c,
        lv_opsys(20)            TYPE c,
        lv_kernel_rel(5)        TYPE c,
        lv_compilation(30)      TYPE c,
        lv_patchlevel(5)        TYPE c,
        lv_abapload(5)          TYPE c,
        lv_cuaload(3)           TYPE c,
        lv_mode(8)              TYPE c,
        lv_rsynfile(30)         TYPE c,
        lv_db_clientlib(80)     TYPE c,
        lv_db_releases(80)      TYPE c,
        lv_ipaddress(30)        TYPE c,
        lv_sapversions(40)      TYPE c,
        lv_oprelease(40)        TYPE c,
        lv_dbsl_ver(12)         TYPE c,
        lv_instno(10)           TYPE c,
        lv_code                 TYPE x,
        lv_license(8)           TYPE c,
        lv_locnt(3)             TYPE c,
        lv_cod                  TYPE x VALUE 1,
        lv_langu                TYPE lang,
        lv_client               TYPE mandt,
        lv_servername           TYPE msxxlist-name,
        lv_database_host        TYPE sy-host,
        lv_user                 TYPE sy-uname,
        lv_systime              TYPE sy-uzeit,
        lv_timezone             TYPE timezone,
        lv_dbsl_patchlevel      TYPE dbrelinfo-patchlevel,
        lv_timestamp            TYPE tzonref-tstamps,
        lv_time                 TYPE sy-uzeit,
        ls_dbinfo               TYPE dbrelinfo,
        ls_logondata            TYPE lty_data,
        lt_logondata            TYPE STANDARD TABLE OF lty_data,
        lt_version              TYPE STANDARD TABLE OF lty_version_info,
        ls_version              TYPE lty_version_info.

  " Clearing variables before use
  CLEAR: ls_output, ls_input, ls_version, ls_dbinfo,
         lv_action, lv_servername, lv_machinetype, lv_langu,
         lv_platform_id, lv_database_host, lv_db_schema, lv_db_user,
         lv_database_owner, lv_database_name, lv_database_sys,
         lv_database_release, lv_unicode, lv_opsys, lv_time,
         lv_kernel_rel, lv_compilation, lv_locnt, lv_timestamp,
         lv_patchlevel, lv_abapload, lv_cuaload, lv_mode, lv_rsynfile,
         lv_db_clientlib, lv_db_releases, lv_ipaddress, lv_sapversions,
         lv_oprelease, lv_dbsl_patchlevel, lv_dbsl_ver, lv_instno,
         lv_code, lv_client, lv_user, lv_systime, lv_timezone,
         lv_license, ls_logondata, lv_locnt.

  FREE: lt_output, lt_version, lt_logondata.

  " Adding title to the output
  ls_output = lc_title.
  APPEND ls_output TO lt_output.
  CLEAR ls_output.

  READ TABLE lt_input INTO ls_input INDEX 1.
  IF sy-subrc EQ 0.
    lv_action = ls_input.              " Action
  ELSE.
    " No input given
    ls_output = lc_noinput.
    APPEND ls_output TO lt_output.
    CLEAR ls_output.
    RETURN.
  ENDIF.

  CASE lv_action.

    WHEN lc_export.               " When action is EXPORT
      FREE: lt_output.

*****************************Usage data***************************

      " Adding usage data title
      ls_output = lc_usage.
      APPEND ls_output TO lt_output.
      CLEAR ls_output.

      " Adding headings to the output
      CONCATENATE lc_client      lc_sep
                  lc_user        lc_sep
                  lc_language    lc_sep
                  lc_logondate   lc_sep
                  lc_logontime   lc_sep
                  lc_systime     lc_sep
                  lc_timezone    lc_sep
                  lc_time        lc_sep
                  lc_attempts
                  INTO ls_output.
      APPEND ls_output TO lt_output.
      CLEAR ls_output.

      " To get client
      lv_client = sy-mandt.

      " To get username
      lv_user = sy-uname.

      " To get language
      lv_langu = sy-langu.

      " To get system time
      lv_systime = sy-uzeit.

      " To get timezone
      lv_timezone = sy-zonlo.

      GET TIME STAMP FIELD lv_timestamp.

      CONVERT TIME STAMP lv_timestamp TIME ZONE sy-zonlo
              INTO TIME lv_time.

      " To get last logon date , time & number of failed attempts
      SELECT locnt trdat ltime
             INTO TABLE lt_logondata
             FROM usr02
             WHERE bname = sy-uname.

      IF lt_logondata IS NOT INITIAL.

        READ TABLE lt_logondata INTO ls_logondata INDEX lc_1.

        IF sy-subrc EQ 0.

          lv_locnt =  ls_logondata-locnt.

        ENDIF.

      ELSE.
        ls_logondata-trdat = lc_null.
        ls_logondata-ltime = lc_null.
        lv_locnt           = lc_null.

      ENDIF.

      CONCATENATE lv_client           lc_sep
                  lv_user             lc_sep
                  lv_langu            lc_sep
                  ls_logondata-trdat  lc_sep
                  ls_logondata-ltime  lc_sep
                  lv_systime          lc_sep
                  lv_timezone         lc_sep
                  lv_time             lc_sep
                  lv_locnt
                  INTO ls_output.
      APPEND ls_output TO lt_output.
      CLEAR ls_output.

      " Adding empty space
      ls_output = space.
      APPEND ls_output TO lt_output.

*************************SAP System data**************************

      " Adding SAP system data title
      ls_output = lc_sapdata.
      APPEND ls_output TO lt_output.
      CLEAR ls_output.

      " To get installation number
      CALL 'GET_ACCESS_INFO' ID 'CODE'    FIELD lv_code
                             ID 'LICENSE' FIELD lv_instno.

      " To get license expiry date
      CALL 'GET_ACCESS_INFO' ID 'CODE'    FIELD lv_cod
                             ID 'LICENSE_EXPIRATION' FIELD lv_license.

      " To check system is Unicode or not
      IF cl_abap_char_utilities=>charsize = lc_1.
        lv_unicode = lc_no.
      ELSE.
        lv_unicode = lc_yes.
      ENDIF.

      IF lv_instno IS INITIAL.

        lv_instno = lc_null.

      ENDIF.

      " Adding headings to the output
      CONCATENATE lc_installnum  lc_sep
                  lc_license     lc_sep
                  lc_unicode
                  INTO ls_output.
      APPEND ls_output TO lt_output.
      CLEAR ls_output.

      CONCATENATE lv_instno      lc_sep
                  lv_license     lc_sep
                  lv_unicode
                  INTO ls_output.
      APPEND ls_output TO lt_output.
      CLEAR ls_output.

      " Adding empty space
      ls_output = space.
      APPEND ls_output TO lt_output.

**************************Host data*******************************

      " Adding host data title
      ls_output = lc_hostdata.
      APPEND ls_output TO lt_output.
      CLEAR ls_output.

      CALL 'SAPCORE' ID 'ID'    FIELD 'VERSION'
                     ID 'TABLE' FIELD lt_version.

      READ TABLE lt_version INTO ls_version INDEX lc_2.
      IF sy-subrc EQ 0.
        lv_opsys = ls_version-line+21.
      ELSE.
        lv_opsys = lc_null.
      ENDIF.

      READ TABLE lt_version INTO ls_version INDEX lc_3.
      IF sy-subrc EQ 0.
        lv_machinetype = ls_version-line+21(10).
      ELSE.
        lv_machinetype = lc_null.
      ENDIF.

      REPLACE lc_amd64 IN lv_machinetype WITH lc_x86_64.

      READ TABLE lt_version INTO ls_version INDEX lc_5.
      IF sy-subrc EQ 0.
        lv_platform_id = ls_version-line+21(10).
      ELSE.
        lv_platform_id = lc_null.
      ENDIF.

      READ TABLE lt_version INTO ls_version INDEX lc_6.
      IF sy-subrc EQ 0.
        lv_database_sys = ls_version-line+21(10).
      ELSE.
        lv_database_sys = lc_null.
      ENDIF.

      CALL 'C_SAPGPARAM' ID 'NAME'  FIELD 'rdisp/myname'
                         ID 'VALUE' FIELD lv_servername.

      " Adding headings to the output
      CONCATENATE lc_opsys    lc_sep
                  lc_machine  lc_sep
                  lc_server   lc_sep
                  lc_platform
                  INTO ls_output.
      APPEND ls_output TO lt_output.
      CLEAR ls_output.

      CONCATENATE lv_opsys          lc_sep
                  lv_machinetype    lc_sep
                  lv_servername     lc_sep
                  lv_platform_id
                  INTO ls_output.
      APPEND ls_output TO lt_output.
      CLEAR ls_output.

      " Adding empty space
      ls_output = space.
      APPEND ls_output TO lt_output.

***************************Database data*************************

      " To get database name
      CALL 'C_DB_FUNCTION' ID 'FUNCTION' FIELD 'DB_DBINFO'
                           ID 'DBNAME'   FIELD lv_database_name.

      " To get database host
      CALL 'C_DB_FUNCTION' ID 'FUNCTION' FIELD 'DB_DBINFO'
                           ID 'DBHOST'   FIELD lv_database_host.

      " To get database schema
      CALL 'C_DB_FUNCTION' ID 'FUNCTION' FIELD 'DB_DBINFO'
                           ID 'DBSCHEMA_CURRENT' FIELD lv_db_schema.

      " To get database user
      CALL 'C_DB_FUNCTION' ID 'FUNCTION' FIELD 'DB_DBINFO'
                           ID 'DBUSER'   FIELD lv_db_user.

      " To get database owner
      CALL 'C_DB_FUNCTION' ID 'FUNCTION' FIELD 'DB_DBINFO'
                           ID 'DBSCHEMA' FIELD lv_database_owner.

      " To get database release
      CALL 'DB_GET_REL' ID 'DBRELEASE' FIELD lv_database_release.


      " Adding database data title
      ls_output = lc_dbdata.
      APPEND ls_output TO lt_output.
      CLEAR ls_output.

      IF lv_database_owner IS INITIAL.
        lv_database_owner = lc_null.
      ENDIF.

      " Adding headings to the output
      CONCATENATE lc_dbsys    lc_sep
                  lc_release  lc_sep
                  lc_name     lc_sep
                  lc_host     lc_sep
                  lc_schema   lc_sep
                  lc_user     lc_sep
                  lc_owner
                  INTO ls_output.
      APPEND ls_output TO lt_output.
      CLEAR ls_output.

      CONCATENATE lv_database_sys       lc_sep
                  lv_database_release   lc_sep
                  lv_database_name      lc_sep
                  lv_database_host      lc_sep
                  lv_db_schema          lc_sep
                  lv_db_user            lc_sep
                  lv_database_owner
                  INTO ls_output.
      APPEND ls_output TO lt_output.
      CLEAR ls_output.

      " Adding empty space
      ls_output = space.
      APPEND ls_output TO lt_output.

*************************Kernel information**********************

      " Adding kernel information title
      ls_output = lc_kernelinfo.
      APPEND ls_output TO lt_output.
      CLEAR ls_output.

      " Adding headings to the output
      CONCATENATE lc_kernelrel     lc_sep
                  lc_compilation   lc_sep
                  lc_patchlevel    lc_sep
                  lc_abapload      lc_sep
                  lc_cuaload       lc_sep
                  lc_mode          lc_sep
                  lc_rsynfile
                  INTO ls_output.
      APPEND ls_output TO lt_output.
      CLEAR ls_output.

      READ TABLE lt_version INTO ls_version INDEX lc_12.
      IF sy-subrc EQ 0.
        lv_kernel_rel = ls_version-line+21.
      ELSE.
        lv_kernel_rel = lc_null.
      ENDIF.

      READ TABLE lt_version INTO ls_version INDEX lc_14.
      IF sy-subrc EQ 0 .
        lv_compilation = ls_version-line+21.
      ELSE.
        lv_compilation = lc_null.
      ENDIF.

      READ TABLE lt_version INTO ls_version INDEX lc_15.
      IF sy-subrc EQ 0.
        lv_patchlevel = ls_version-line+21.
      ELSE.
        lv_patchlevel = lc_null.
      ENDIF.

      READ TABLE lt_version INTO ls_version INDEX lc_20.
      IF sy-subrc EQ 0.
        lv_abapload = ls_version-line+21.
      ELSE.
        lv_abapload = lc_null.
      ENDIF.

      READ TABLE lt_version INTO ls_version INDEX lc_21.
      IF sy-subrc EQ 0.
        lv_cuaload = ls_version-line+21.
      ELSE.
        lv_cuaload = lc_null.
      ENDIF.

      READ TABLE lt_version INTO ls_version INDEX lc_22.
      IF sy-subrc EQ 0.
        lv_mode = ls_version-line+21.
      ELSE.
        lv_mode = lc_null.
      ENDIF.

      READ TABLE lt_version INTO ls_version INDEX lc_10.
      IF sy-subrc EQ 0.
        lv_rsynfile = ls_version-line+21.
      ELSE.
        lv_rsynfile = lc_null.
      ENDIF.

      IF lv_rsynfile IS INITIAL.
        lv_rsynfile = lc_null.
      ENDIF.

      CONCATENATE lv_kernel_rel     lc_sep
                  lv_compilation    lc_sep
                  lv_patchlevel     lc_sep
                  lv_abapload       lc_sep
                  lv_cuaload        lc_sep
                  lv_mode           lc_sep
                  lv_rsynfile
                  INTO ls_output.
      APPEND ls_output TO lt_output.
      CLEAR ls_output.

      " Adding empty space
      ls_output = space.
      APPEND ls_output TO lt_output.

*************************Database information********************

      " Adding database information title
      ls_output = lc_dbinfo.
      APPEND ls_output TO lt_output.
      CLEAR ls_output.

      " Adding headings to the output
      CONCATENATE lc_clientlib    lc_sep
                  lc_dbreleases   lc_sep
                  lc_dbslversion  lc_sep
                  lc_dbslpatch
                  INTO ls_output.
      APPEND ls_output TO lt_output.
      CLEAR ls_output.

      " To get DBSL patch level
      CALL FUNCTION 'DB_DBRELINFO'
        IMPORTING
          dbinfo = ls_dbinfo.

      IF ls_dbinfo-patchlevel IS NOT INITIAL. "+V006
        lv_dbsl_patchlevel = ls_dbinfo-patchlevel.
      ELSE.
        lv_dbsl_patchlevel = lc_null.
      ENDIF.

      " To get DBSL version
      lv_dbsl_ver = ls_dbinfo-dbsl_vers. "+V006

      READ TABLE lt_version INTO ls_version INDEX lc_13.
      IF sy-subrc EQ 0.
        lv_db_clientlib = ls_version-line+21.
      ELSE.
        lv_db_clientlib = lc_null.
      ENDIF.

      READ TABLE lt_version INTO ls_version INDEX lc_17.
      IF sy-subrc EQ 0.
        lv_db_releases = ls_version-line+21.
      ELSE.
        lv_db_releases = lc_null.
      ENDIF.

      CONCATENATE lv_db_clientlib     lc_sep
                  lv_db_releases      lc_sep
                  lv_dbsl_ver         lc_sep
                  lv_dbsl_patchlevel
                  INTO ls_output.
      APPEND ls_output TO lt_output.
      CLEAR ls_output.

      " Adding empty space
      ls_output = space.
      APPEND ls_output TO lt_output.

*************************System information**********************

      " Adding system information title
      ls_output = lc_sysinfo.
      APPEND ls_output TO lt_output.
      CLEAR ls_output.

      " Adding headings to the output
      CONCATENATE lc_ipaddress    lc_sep
                  lc_sapversions  lc_sep
                  lc_opsys        lc_sep
                  lc_oprelease
                  INTO ls_output.
      APPEND ls_output TO lt_output.
      CLEAR ls_output.

      READ TABLE lt_version INTO ls_version INDEX lc_11.
      IF sy-subrc EQ 0.
        lv_ipaddress = ls_version-line+21.
      ELSE.
        lv_ipaddress = lc_null.
      ENDIF.

      READ TABLE lt_version INTO ls_version INDEX lc_16.
      IF sy-subrc EQ 0.
        lv_sapversions = ls_version-line+21.
      ELSE.
        lv_sapversions = lc_null.
      ENDIF.

      READ TABLE lt_version INTO ls_version INDEX lc_18.
      IF sy-subrc EQ 0.
        lv_opsys = ls_version-line+21.
      ELSE.
        lv_opsys = lc_null.
      ENDIF.

      READ TABLE lt_version INTO ls_version INDEX lc_19.
      IF sy-subrc EQ 0.
        lv_oprelease = ls_version-line+21.
      ELSE.
        lv_oprelease = lc_null.
      ENDIF.

      CONCATENATE lv_ipaddress    lc_sep
                  lv_sapversions  lc_sep
                  lv_opsys        lc_sep
                  lv_oprelease
                  INTO ls_output.
      APPEND ls_output TO lt_output.
      CLEAR ls_output.

    WHEN OTHERS.
      " Incorrect input
      ls_output = lc_inc_input.
      APPEND ls_output TO lt_output.
      CLEAR ls_output.

  ENDCASE.

  " To replace blank values with NULL
  DO.
    REPLACE ALL OCCURRENCES OF SUBSTRING '||'
    IN TABLE lt_output WITH '|NULL|'.
    FIND '||' IN TABLE lt_output.
    IF sy-subrc <> 0.
      EXIT .
    ENDIF.
  ENDDO.

ENDFORM.