*---------------------------------------------------------------------*
* Program Name        :   ZCM_SM58_EXPORT_FAILED_TRFC                 *
* Title               :   Export Failed tRFCs                         *
* Purpose             :   This report is used to query the ARFCSSTATE *
*                     :   table and read the list of failed tRFCs as  *
*                     :   seen in transaction SM58                    *
*---------------------------------------------------------------------*
* Related Transaction OR Standard Program References                  *
* SM58                                                                *
*---------------------------------------------------------------------*
*Tables              :   SELECT    UPDATE      INSERT      DELETE     *
* ARFCSSTATE                X                                         *
*---------------------------------------------------------------------*
* Program Change History                                              *
*---------------------------------------------------------------------*
*Date        Version   Author         TR#/Local     Description       *
*---------------------------------------------------------------------*
*04-03-21   Initial   Fathima Hussain   Local   To list the failed    *
*                                               tRFCs                 *
*12-13-21   V001      Soumya Ray        V001    To get failed tRFC's  *
*                                               for current date as   *
*                                               part of rampdown check*
*09-06-22   V002      Soumya Ray        V002    To fetch failed TRFC  *
*                                               state records and of  *
*                                               particular time period*
*                                               for rampdown checks   *
*                                               and pre-refresh       *
*05-23-23   V003      Ashwini K P       V003    Changed the data type *
*                                              to string from numeric *
*---------------------------------------------------------------------*

REPORT zcm_sm58_export_failed_trfc.

FORM get_config
              TABLES lt_input  STRUCTURE tab512
                     lt_output STRUCTURE tab512.

* Begin of changes in V002
  TYPES: BEGIN OF lty_arfcstate,
           state TYPE arfcstate,
         END OF lty_arfcstate,

         BEGIN OF lty_datum,
           sign   TYPE c LENGTH 1,
           option TYPE c LENGTH 2,
           low    TYPE sydatum,
           high   TYPE sydatum,
         END OF lty_datum.
* End of changes in V002

  CONSTANTS: lc_sep         TYPE c      VALUE '|',
             lc_export      TYPE c      VALUE 'EXPORT'     LENGTH 6,
             lc_msg_title   TYPE c      VALUE 'ARFCSSTATE' LENGTH 10,
             lc_msg_nodata  TYPE string VALUE 'No data found',
             lc_caller      TYPE c      VALUE 'Caller'     LENGTH 6,
             lc_func_module TYPE c      VALUE
             'FunctionModule'                              LENGTH 14,
             lc_target_sys  TYPE c      VALUE
             'TargetSystem'                                LENGTH 12,
             lc_date        TYPE c      VALUE 'Date'       LENGTH 4,
             lc_time        TYPE c      VALUE 'Time'       LENGTH 4,
             lc_status_txt  TYPE c      VALUE 'StatusText' LENGTH 10,
             lc_tranc_id    TYPE c      VALUE
             'TransactionID'                               LENGTH 14,
             lc_host        TYPE c      VALUE 'Host'       LENGTH 4,
             lc_tcode       TYPE c      VALUE 'Tcode'      LENGTH 5,
             lc_program     TYPE c      VALUE 'Program'    LENGTH 7,
* Begin of changes in V001
             lc_inc_input   TYPE c      VALUE
             'Incorrect input'                             LENGTH 20,
             lc_noinput     TYPE c      VALUE
             'No input passed'                             LENGTH 20,
* End of changes in V001
* Begin of changes in V002
             lc_include     TYPE c      VALUE 'I'          LENGTH 1,
             lc_between     TYPE c      VALUE 'BT'         LENGTH 2,
             lc_cpicerr     TYPE arfcstate VALUE 'CPICERR',
             lc_sysfail     TYPE arfcstate VALUE 'SYSFAIL',
             lc_aretry      TYPE arfcstate VALUE 'ARETRY',
             lc_anoretry    TYPE arfcstate VALUE 'ANORETRY',
             lc_vberror     TYPE arfcstate VALUE 'VBERROR',
             lc_retry       TYPE arfcstate VALUE 'RETRY'.
* End of changes in V002

  DATA: ls_input          TYPE tab512,
        ls_output         TYPE tab512,
        ls_prefinal       TYPE string,
        lv_action         TYPE char8,
        lt_trfc           TYPE TABLE OF arfcsstate,
        ls_trfc           TYPE arfcsstate,
*  Begin of changes in V001
        lv_program        TYPE string,
        lv_transaction_id TYPE string,
        lv_date           TYPE sy-datum,
*  End of changes in V001
*  Begin of changes in V002
*        lv_days           TYPE n, "-V003
        lv_days           TYPE string,  "+V003
        lv_caldate        TYPE sy-datum,
        ls_arfcdatum      TYPE lty_datum,
        lt_arfcdatum      TYPE STANDARD TABLE OF lty_datum,
        ls_arfcstate      TYPE lty_arfcstate,
        lt_arfcstate      TYPE STANDARD TABLE OF lty_arfcstate.
*  End of changes in V002

  CLEAR: ls_input, lv_action, lv_program, lv_transaction_id, lv_date,
         lv_caldate, ls_arfcstate, ls_arfcdatum, lv_days."+V002
  FREE: lt_arfcstate, lt_arfcdatum. "+V002

  ls_output = lc_msg_title.
  APPEND ls_output TO lt_output.

* Read action required from Python interface
  READ TABLE lt_input INTO ls_input INDEX 1.
* Begin of changes in V001
  IF sy-subrc EQ 0.
    SPLIT ls_input AT lc_sep INTO
     lv_action
     lv_days. "+V002
  ELSE.
    " No input passed
    ls_output = lc_noinput.
    APPEND ls_output TO lt_output.
    CLEAR ls_output.
    RETURN.
  ENDIF.
* End of changes in V001

  CASE lv_action.

    WHEN lc_export.

* Begin of changes in V002
      ls_arfcstate-state = lc_cpicerr.
      APPEND ls_arfcstate TO lt_arfcstate.
      CLEAR ls_arfcstate.

      ls_arfcstate-state = lc_sysfail.
      APPEND ls_arfcstate TO lt_arfcstate.
      CLEAR ls_arfcstate.

      ls_arfcstate-state = lc_aretry.
      APPEND ls_arfcstate TO lt_arfcstate.
      CLEAR ls_arfcstate.

      ls_arfcstate-state =  lc_anoretry.
      APPEND ls_arfcstate TO lt_arfcstate.
      CLEAR ls_arfcstate.

      ls_arfcstate-state =   lc_vberror.
      APPEND ls_arfcstate TO lt_arfcstate.
      CLEAR ls_arfcstate.

      ls_arfcstate-state =   lc_retry.
      APPEND ls_arfcstate TO lt_arfcstate.
      CLEAR ls_arfcstate.

*     Retrieve failed tRFC data from ARFCSSTATE
      lv_date = sy-datum.
      lv_caldate = lv_date - lv_days.

      ls_arfcdatum-sign   = lc_include.
      ls_arfcdatum-option = lc_between.
      ls_arfcdatum-low    = lv_caldate.
      ls_arfcdatum-high   = lv_date.
      APPEND ls_arfcdatum TO lt_arfcdatum.

* End of changes in V002

      SELECT * FROM arfcsstate INTO TABLE lt_trfc
*  Begin of changes in V002
        FOR ALL ENTRIES IN lt_arfcstate
        WHERE arfcstate = lt_arfcstate-state AND
              arfcdatum IN lt_arfcdatum AND
              arfcreturn  = space.
      IF sy-subrc <> 0.
*       There is no data. Set the msg and return
        ls_output = lc_msg_nodata.
        APPEND ls_output TO lt_output.
        RETURN.
      ENDIF.
*  End of changes in V002

      "Column headings
      CONCATENATE lc_caller lc_func_module lc_target_sys lc_date
      lc_time lc_status_txt lc_tranc_id lc_host lc_tcode lc_program
      INTO ls_output SEPARATED BY lc_sep. "+V001
      APPEND ls_output TO lt_output.

      "Table data
      LOOP AT lt_trfc INTO ls_trfc.

        CONCATENATE ls_trfc-arfcipid  "Begin transaction ID
                   ls_trfc-arfcpid
                   ls_trfc-arfctime
                   ls_trfc-arfctidcnt  "End transaction ID
                   INTO lv_transaction_id.

        SPLIT ls_trfc-arfcreserv AT space INTO lv_program
        ls_trfc-arfcreserv.
        CONCATENATE ls_trfc-arfcuser lc_sep
                    ls_trfc-arfcfnam lc_sep
                    ls_trfc-arfcdest lc_sep
                    ls_trfc-arfcdatum lc_sep
                    ls_trfc-arfcuzeit lc_sep
                    ls_trfc-arfcmsg lc_sep
                    lv_transaction_id lc_sep
                    ls_trfc-arfcrhost lc_sep
                    ls_trfc-arfctcode lc_sep
                    lv_program
                    INTO ls_prefinal.
        PERFORM end_null_check CHANGING ls_prefinal.
        ls_output = ls_prefinal.
        APPEND ls_output TO lt_output.
        CLEAR: ls_output, ls_prefinal, lv_transaction_id.
      ENDLOOP.


      PERFORM null_check TABLES  lt_output.

    WHEN OTHERS.
*  Begin of changes in V001
      ls_output = lc_inc_input. "Incorrect input
      APPEND ls_output TO lt_output.
      CLEAR ls_output.
*  End of changes in V001
  ENDCASE.

ENDFORM.

FORM end_null_check CHANGING ls_string TYPE string.

  DATA lv_last_char TYPE char1.

  lv_last_char = substring( val = ls_string
  off = strlen( ls_string ) - 1
  len = 1 ).
  IF lv_last_char = '|'.
    CONCATENATE ls_string 'NULL'
    INTO ls_string.
  ENDIF.

ENDFORM.

FORM null_check TABLES lt_table TYPE table.

  DO .
    REPLACE ALL OCCURRENCES OF SUBSTRING '||'
    IN TABLE lt_table WITH '|NULL|'.
    FIND '||' IN TABLE lt_table.
    IF sy-subrc <> 0.
      EXIT .
    ENDIF.
  ENDDO.

ENDFORM.