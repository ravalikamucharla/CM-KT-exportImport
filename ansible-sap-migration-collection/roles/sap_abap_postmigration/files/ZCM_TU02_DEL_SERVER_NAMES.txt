*---------------------------------------------------------------------*
* Program Name        :  ZCM_TU02_DEL_SERVER_NAMES                    *
* Title               :  To delete servers                            *
* Purpose             :  This report is used to delete servers        *
*                     :  from TU02                                    *
*---------------------------------------------------------------------*
* Related Transaction OR Standard Program References                  *
* TU02                                                                *
*---------------------------------------------------------------------*
*	Tables              :   SELECT    UPDATE      INSERT      DELETE    *
* PAHI                                                        X       *
*---------------------------------------------------------------------*
* Program Change History                                              *
*---------------------------------------------------------------------*
*Date        Version   Author         TR#/Local     Description       *
*---------------------------------------------------------------------*
*14-09-2022  Initial   Yasaswini K   Local   To delete servers in     *
*                                            target system            *
*---------------------------------------------------------------------*

REPORT zcm_tu02_del_server_names.

LOAD-OF-PROGRAM.

FORM get_config
               TABLES lt_input  STRUCTURE tab512
                      lt_output STRUCTURE tab512.

  TYPES: BEGIN OF lty_sapwlserv,
           name   TYPE stuninst,
           instno TYPE sapwlsysno,
           host   TYPE stunhost,
         END OF lty_sapwlserv,

         BEGIN OF lty_pahi,
           partype  TYPE partype,
           hostname TYPE stunhost,
           systemid TYPE systemid,
         END OF lty_pahi.

  CONSTANTS: lc_lock_type TYPE c      VALUE 'E'    LENGTH 1,
             lc_delete    TYPE c      VALUE 'DELETE'
                                                   LENGTH 6,
             lc_no_serv   TYPE c      VALUE
             'No servers found to delete'          LENGTH 30,
             lc_inc_input TYPE c      VALUE
             'Incorrect input'                     LENGTH 20,
             lc_noinput   TYPE c      VALUE
             'No input given'                      LENGTH 20,
             lc_message   TYPE c      VALUE
             'Message'                             LENGTH 10,
             lc_title     TYPE c      VALUE 'ApplicationServers'
                                                   LENGTH 20,
             lc_msg       TYPE c      VALUE
             'parameters deleted successfully'     LENGTH 40,
             lc_host      TYPE c      VALUE 'Host' LENGTH 4,
             lc_sysid     TYPE c      VALUE
             'SystemID'                            LENGTH 10,
             lc_err       TYPE c      VALUE
             'parameters not deleted'              LENGTH 40,
             lc_lock_tbl  TYPE rstable-tabname
                                      VALUE 'PAHI'.

  DATA: lv_action    TYPE string,
        ls_output    TYPE tab512,
        lt_sapwlserv TYPE TABLE OF lty_sapwlserv,
        lt_pahi      TYPE TABLE OF lty_pahi,
        ls_pahi      TYPE pahi,
        ls_sapwlserv TYPE sapwlserv,
        lv_count     TYPE i,
        ls_input     TYPE tab512.

  CLEAR: lv_action, ls_input, ls_pahi, ls_sapwlserv, ls_output.

  FREE: lt_pahi[], lt_sapwlserv[].

  "Title
  ls_output = lc_title.
  APPEND ls_output TO lt_output.
  CLEAR: ls_output.

  " Read input file from Python
  READ TABLE lt_input INTO ls_input INDEX 1.

  IF sy-subrc EQ 0.
    lv_action  = ls_input.                              " Action
  ELSE.
    " No input given
    ls_output = lc_noinput.
    APPEND ls_output TO lt_output.
    CLEAR ls_output.
    RETURN.
  ENDIF.


  CASE lv_action.

    WHEN lc_delete.


      "Column Headings
      ls_output = lc_message.
      APPEND ls_output TO lt_output.
      CLEAR: ls_output.

      "Fetch active servers

      SELECT name instno host FROM sapwlserv INTO TABLE lt_sapwlserv.

      IF sy-subrc = 0.

        SORT lt_sapwlserv BY host instno.

        "Fetch all servers from TU02

        SELECT partype hostname systemid FROM pahi INTO TABLE lt_pahi
          WHERE systemid NE space.


        IF sy-subrc = 0.

          SORT lt_pahi BY hostname systemid.

          DELETE ADJACENT DUPLICATES FROM lt_pahi COMPARING
          hostname systemid.

          LOOP AT lt_pahi  INTO ls_pahi.

            READ TABLE lt_sapwlserv  INTO ls_sapwlserv WITH KEY
            host = ls_pahi-hostname
            instno = ls_pahi-systemid.

            " if inactive server found delete it

            IF ls_sapwlserv IS INITIAL.

              CALL FUNCTION 'ENQUEUE_E_TABLE'
                EXPORTING
                  mode_rstable   = lc_lock_type
                  tabname        = lc_lock_tbl
                EXCEPTIONS
                  foreign_lock   = 1
                  system_failure = 2
                  OTHERS         = 3.
              IF sy-subrc = 0.

                DELETE FROM pahi          " deleting param's in pahi
                     WHERE systemid = ls_pahi-systemid AND
                           hostname = ls_pahi-hostname.

                IF sy-subrc = 0.
                  COMMIT WORK.
                  "Success message
                  CONCATENATE lc_host ls_pahi-hostname
                  lc_sysid ls_pahi-systemid lc_msg
                  INTO ls_output
                  SEPARATED BY space.
                  APPEND ls_output TO lt_output.
                  CLEAR: ls_output.

                ELSE.
                  "Error
                  CONCATENATE lc_host ls_pahi-hostname
                  lc_sysid ls_pahi-systemid lc_err
                  INTO ls_output
                  SEPARATED BY space.
                  APPEND ls_output TO lt_output.
                  CLEAR: ls_output.
                ENDIF.

                CALL FUNCTION 'DEQUEUE_E_TABLE'
                  EXPORTING
                    mode_rstable = lc_lock_type
                    tabname      = lc_lock_tbl.

              ENDIF.
            ENDIF.

            CLEAR: ls_pahi, ls_sapwlserv, ls_output.

          ENDLOOP.
        ENDIF.
      ENDIF.

      "Adding message to output if no servers are found to del
      DESCRIBE TABLE lt_output LINES lv_count.

      IF lv_count LT 3.
        DELETE lt_output INDEX 2.
        ls_output = lc_no_serv.
        APPEND ls_output TO lt_output.
        CLEAR ls_output.
      ENDIF.


    WHEN OTHERS.
      " Incorrect input
      ls_output = lc_inc_input.
      APPEND ls_output TO lt_output.
      CLEAR ls_output.
  ENDCASE.

ENDFORM.