*---------------------------------------------------------------------*
* Program Name        :   ZCM_SP12_EXP_TEMSE_CONSISTENCY              *
* Title               :   Capture TEMSE Consistency Objects           *
* Purpose             :   This report is to capture TEMSE Consistency *
*                         Objects during Cloud Migration              *
*---------------------------------------------------------------------*
* Related Transaction OR Standard Program References                  *
* SP12                                                                *
*---------------------------------------------------------------------*
* Tables              :   SELECT    UPDATE      INSERT      DELETE    *
* XXXXX                     X                                         *
*---------------------------------------------------------------------*
* Program Change History                                              *
*---------------------------------------------------------------------*
*Date        Version   Author       TR#/Local     Description         *
*---------------------------------------------------------------------*
*03-09-2020 Initial Ruchir Kamble  FIOK900653 To Capture TEMSE objects*
*09-09-2022  V001   Yasaswini K    Local      To add no data found    *
*                                             changes                 *
*---------------------------------------------------------------------*

" This code has been referred from standard report RSTS0020
" Subroutine test_consistence_tst01 & test_consistence_tst03

REPORT zcm_sp12_exp_temse_consistency.

TABLES: tst01, tst03m.

TYPES: BEGIN OF yt_tst01.
TYPES: selbox TYPE c,
       color  TYPE lvc_t_scol.
    INCLUDE STRUCTURE ibd_tst03m_alv.
TYPES: END OF yt_tst01.

DATA:BEGIN OF incons_tab OCCURS 100,
       client LIKE tst01-dclient,
       name   LIKE tst01-dname,
     END   OF incons_tab.

CONSTANTS: lc_sep      TYPE c VALUE '|'                  LENGTH 1,
           lc_export   TYPE c VALUE 'EXPORT'             LENGTH 6,
           lc_client   TYPE c VALUE 'Client'             LENGTH 7,
           lc_objname  TYPE c VALUE 'TemseObjectName'    LENGTH 20,
           lc_part     TYPE c VALUE 'Part'               LENGTH 4,
           lc_comments TYPE c VALUE 'Comments'           LENGTH 12,
           lc_title    TYPE c VALUE
           'Temse Data Consistency Check'                LENGTH 50,
           lc_txt110   TYPE c VALUE
           'Incorrect number of data lines in TST03'     LENGTH 50,
           lc_txt290   TYPE c VALUE
           'The related file has an incorrect length'    LENGTH 50,
           lc_txt294   TYPE c VALUE 'TST01'              LENGTH 10,
           lc_txt296   TYPE c VALUE 'File'               LENGTH 4,
           lc_txt271   TYPE c VALUE 'Length = 0'         LENGTH 20,
           lc_txt272   TYPE c VALUE 'Object reset'       LENGTH 20,
           lc_txt280   TYPE c VALUE
           'Unable to access the related file'           LENGTH 50,
           lc_txt300   TYPE c VALUE
           'Does the related file have a name?'          LENGTH 50,
           lc_txt130   TYPE c VALUE
           'Object with part number 1 missing'           LENGTH 50,
           lc_txt140   TYPE c VALUE
           'A queue object can only have one part'       LENGTH 60,
           lc_txt150   TYPE c VALUE
           'Object with part number'                     LENGTH 40,
           lc_txt151   TYPE c VALUE 'is missing.'        LENGTH 20,
           lc_txt160   TYPE c VALUE 'TST01 is OK'        LENGTH 25,
           lc_txt170   TYPE c VALUE
           'No object found in TST01'                    LENGTH 40,
           lc_txt200   TYPE c VALUE 'TST03 is OK'        LENGTH 20,
           lc_txt180   TYPE c VALUE
           'Data line number too small'                  LENGTH 35,
           lc_txt190   TYPE c VALUE
           'Line number of data too big.'                LENGTH 45,
*  Begin of changes in V001
           lc_inc_input TYPE c VALUE
           'Incorrect input'                             LENGTH 20,
           lc_noinput   TYPE c VALUE
           'No input passed'                             LENGTH 20,
           lc_null      TYPE C VALUE 'NULL'              LENGTH 4.
*  End of changes in V001

DATA: ls_input                 TYPE tab512,
      ls_output                TYPE tab512,
      lv_action                TYPE char20,
      lv_dpart                 TYPE char1,
      lv_client                TYPE sy-mandt,
      sap_yes(1)               VALUE 'X',
      sap_no(1)                VALUE ' ',
      table_with_problem(1),
      cons_test(4),
      h_name                   TYPE tst01-dname,
      h_client                 TYPE tst01-dclient,
      gt_tst01                 TYPE STANDARD TABLE OF yt_tst01,
      gw_tst01                 TYPE yt_tst01,
      gt_tst03                 TYPE STANDARD TABLE OF yt_tst01,
      gw_tst03                 TYPE yt_tst01.

LOAD-OF-PROGRAM.

FORM get_config
              TABLES lt_input  STRUCTURE tab512
                     lt_output STRUCTURE tab512.

  READ TABLE lt_input INTO ls_input INDEX 1.

* Begin of changes in V001
  IF sy-subrc NE 0.
    "Title
    ls_output = lc_title.
    APPEND ls_output TO lt_output.
    CLEAR ls_output.

    " No input passed
    ls_output = lc_noinput.
    APPEND ls_output TO lt_output.
    CLEAR ls_output.
    RETURN.
  ENDIF.
* End of changes in V001

  lv_action = ls_input.      " Action


  CASE lv_action.

    WHEN lc_export.               " When action is EXPORT

      lv_client = '%'.

      " Adding title to the output

        ls_output = lc_title.
        APPEND ls_output TO lt_output.
        CLEAR ls_output.

      PERFORM test_consistence_tst01 TABLES lt_output USING '%'.

      IF gt_tst01 IS NOT INITIAL.

        " Constructing title and headings to the output
        CONCATENATE lc_client     lc_sep
                    lc_objname    lc_sep
                    lc_part       lc_sep
                    lc_comments
                    INTO ls_output.
        APPEND ls_output TO lt_output.

        LOOP AT gt_tst01 INTO gw_tst01.

*  Begin of changes in V001
          IF gw_tst01-dclient IS INITIAL.
             gw_tst01-dclient = lc_null.
          ENDIF.

          IF gw_tst01-coments IS INITIAL .
             gw_tst01-coments = lc_null.
          ENDIF.
*  End of changes in V001

          lv_dpart = gw_tst01-dpart.

          CONCATENATE gw_tst01-dclient   lc_sep
                      gw_tst01-dname     lc_sep
                      lv_dpart           lc_sep
                      gw_tst01-coments
                      INTO ls_output.
          APPEND ls_output TO lt_output.

        ENDLOOP.
      ENDIF.

        ls_output = space.
        APPEND ls_output TO lt_output.
        CLEAR ls_output.

      PERFORM test_consistence_tst03 TABLES lt_output USING '%'.

*  Begin of changes in V001
 "Null check in middle fields
  DO .
    REPLACE ALL OCCURRENCES OF SUBSTRING '||'
    IN TABLE lt_output WITH '|NULL|'.
    FIND '||' IN TABLE lt_output.
    IF sy-subrc <> 0.
      EXIT .
    ENDIF.
  ENDDO.
*  End of changes in V001

  WHEN OTHERS.
*  Begin of changes in V001
   "Title
    ls_output = lc_title.
    APPEND ls_output TO lt_output.
    CLEAR ls_output.

    ls_output = lc_inc_input. "Incorrect input
    APPEND ls_output TO lt_output.
    CLEAR ls_output.
*  End of changes in V001

  ENDCASE.

ENDFORM.

FORM test_consistence_tst01 TABLES lt_output USING a_name_pattern.

  DATA: counter TYPE p,
        commit_counter TYPE p,
        last_client LIKE tst01-dclient,
        last_name   LIKE tst01-dname,
        last_part   LIKE tst01-dpart,
        expect_part LIKE tst01-dpart,
        looked_at_counter TYPE p VALUE 0,
        l_path(72),
        break_counter2 TYPE p VALUE 0,
        own_jobname       LIKE tbtcm-jobname  VALUE ' ',
        own_jobcount      LIKE tbtcm-jobcount VALUE ' ',
        own_job_structure LIKE tbtcjob,
        own_opcode        LIKE btch0000-int4  VALUE 19.

  DATA: BEGIN OF itst01 OCCURS 200.
      INCLUDE STRUCTURE tst01.
  DATA: END OF itst01.

  DATA: l_rc(5)
      , l_errmsg(70)
      , l_length(8)   TYPE p
      , l_buff(20)
      .
  DATA: lv_dsize(10)    TYPE c,
        lv_length(8)    TYPE c,
        lv_last_part(5) TYPE c.

  table_with_problem = sap_no.
  cons_test = 'ST01'.
  CLEAR: last_client, last_name, commit_counter.

  IF sy-batch = 'X'.
    CALL FUNCTION 'GET_JOB_RUNTIME_INFO'
      IMPORTING
        jobname         = own_jobname
        jobcount        = own_jobcount
      EXCEPTIONS
        no_runtime_info = 1
        OTHERS          = 2.
    IF sy-subrc <> 0.
      MESSAGE e801(bt).
    ENDIF.
    CALL FUNCTION 'BP_JOB_READ'
      EXPORTING
        job_read_jobname      = own_jobname
        job_read_jobcount     = own_jobcount
        job_read_opcode       = own_opcode
      IMPORTING
        job_read_jobhead      = own_job_structure
      EXCEPTIONS
        job_doesnt_exist      = 1
        job_doesnt_have_steps = 2
        OTHERS                = 99.
    IF sy-subrc <> 0.
      own_job_structure-joblog = ' '.
    ENDIF.
  ENDIF.

  " Die TST01 in eine interne Tabelle kopieren,
  SELECT * FROM tst01
                      CLIENT SPECIFIED
                      INTO TABLE itst01
                      WHERE dclient LIKE lv_client
                      AND   dname   LIKE a_name_pattern
                      ORDER BY dname dpart dclient.
  CLEAR gt_tst01.
  REFRESH gt_tst01.
  LOOP AT itst01.
    tst01 = itst01.
    ADD 1 TO looked_at_counter.
    CLEAR counter.
    IF tst01-dstotyp <> 'F' AND tst01-dstotyp <> 'P'.
*   TST03M is a view on TST03 which does not see the LONG data.
      SELECT COUNT(*) FROM tst03m
      CLIENT SPECIFIED
      INTO   counter
      WHERE dclient = tst01-dclient
      AND   dname   = tst01-dname
      AND   dpart   = tst01-dpart.
      ADD counter TO commit_counter.
      IF ( tst01-drows <> counter ).
        PERFORM save_incons.
        PERFORM write_c_n_p__1.
        MOVE lc_txt110 TO gw_tst01-coments.
        APPEND gw_tst01 TO gt_tst01.
        CLEAR gw_tst01.
      ENDIF.
    ENDIF.

*   * if file-stored
    IF tst01-dstotyp = 'F' OR tst01-dstotyp = 'P'.
      CALL 'C_RSTS_REMOVE' ID 'CLIENT'   FIELD tst01-dclient
                           ID 'NAME'     FIELD tst01-dname
                           ID 'PART'     FIELD tst01-dpart
                           ID 'INFOONLY' FIELD 'X'
                           ID 'PATH'     FIELD l_path
                           ID 'RC'       FIELD l_rc
                           ID 'ERRMSG'   FIELD l_errmsg
                           .
      IF sy-subrc = 0.

        CALL 'C_RSTRB_READ_BUFFERED' ID 'NAME' FIELD l_path
                                     ID 'SIZE' FIELD 10   "any >3
                                     ID 'POSI' FIELD 0
                                     ID 'BACK' FIELD 'X'
                                     ID 'RBEG' FIELD l_length
                                     ID 'BUFF' FIELD l_buff
                                     .

        IF sy-subrc = 4 OR sy-subrc = 0.
          IF sy-subrc = 0.
            " Strange! Why no EOF.
            ADD 1 TO break_counter2.
*           if break_counter2 < 10.  break-point 2. endif.
          ENDIF.
          CALL 'C_RSTRB_READ_BUFFERED' ID 'CLOS' FIELD 'X'
                                       ID 'BUFF' FIELD l_buff
                                       .
          IF    ( sy-batch    = 'X' )
            AND ( tst01-dname(6) = 'JOBLGX' )
            AND ( tst01-dname = own_job_structure-joblog ).
            l_length = tst01-dsize.
          ENDIF.
          IF tst01-dsize <> l_length.
*              WAIT UP TO 2 SECONDS.
            SELECT SINGLE * FROM tst01
                            CLIENT SPECIFIED
                            WHERE dclient = itst01-dclient
                            AND   dname   = itst01-dname
                            AND   dpart   = itst01-dpart.
            IF sy-subrc   <> 0.
              tst01-dsize = l_length = 0.
            ELSE.
              CALL 'C_RSTRB_READ_BUFFERED'  ID 'NAME' FIELD l_path
                                            ID 'SIZE' FIELD 10
                                            ID 'POSI' FIELD 0
                                            ID 'BACK' FIELD 'X'
                                            ID 'RBEG' FIELD l_length
                                            ID 'BUFF' FIELD l_buff.
              IF sy-subrc    > 4.
                tst01-dsize = l_length = 0.
              ENDIF.
            ENDIF.
          ENDIF.


          IF tst01-dsize <> l_length.
            PERFORM save_incons.       " HIDE at 1st line.
            PERFORM write_c_n_p__1.
            WRITE tst01-dsize TO lv_dsize.
            WRITE l_length TO lv_length.
            CONCATENATE lc_txt290 lc_txt294 lv_dsize
                        lc_txt296 lv_length
                        INTO gw_tst01-coments SEPARATED BY space.
            APPEND gw_tst01 TO gt_tst01.
            CLEAR gw_tst01.
          ENDIF.
        ELSE.
          PERFORM save_incons.
          PERFORM write_c_n_p__1.
          IF ( tst01-dstate = 'W' ).
            MOVE lc_txt272 TO gw_tst01-coments.
            IF tst01-dsize = 0.
              CONCATENATE lc_txt272 lc_txt271 INTO gw_tst01-coments
              SEPARATED BY space.

            ENDIF.
            APPEND gw_tst01 TO gt_tst01.
            CLEAR gw_tst01.
          ELSE.
            MOVE lc_txt280 TO gw_tst01-coments.

            IF tst01-dsize = 0.
              CONCATENATE lc_txt280 lc_txt271 INTO gw_tst01-coments
              SEPARATED BY space.
            ENDIF.
            APPEND gw_tst01 TO gt_tst01.
            CLEAR gw_tst01.
          ENDIF.
        ENDIF.
      ELSE.
        PERFORM save_incons.
        PERFORM write_c_n_p__1.
        MOVE lc_txt300 TO gw_tst01-coments.
        APPEND gw_tst01 TO gt_tst01.
        CLEAR gw_tst01.
      ENDIF.
    ENDIF.

    IF ( tst01-dclient <> last_client ) OR
      ( tst01-dname <> last_name ).
*     Erstes Teil eines Objektes
      IF ( tst01-dpart <> 1 ).
        PERFORM save_incons.
        PERFORM write_c_n_p__1.
        MOVE lc_txt130 TO gw_tst01-coments.
        APPEND gw_tst01 TO gt_tst01.
        CLEAR gw_tst01.

      ENDIF.

    ELSE.

      expect_part = last_part + 1 .
      IF ( tst01-dpq = 'Q' ).
        PERFORM save_incons.
        PERFORM write_c_n_p__1.
        MOVE lc_txt140 TO gw_tst01-coments.
        APPEND gw_tst01 TO gt_tst01.
        CLEAR gw_tst01.

      ELSEIF ( tst01-dpart <> expect_part ).
        PERFORM save_incons.
        PERFORM write_c_n_p__1.
        CONCATENATE lc_txt150 lv_last_part lc_txt151
        INTO gw_tst01-coments SEPARATED BY space.
        APPEND gw_tst01 TO gt_tst01.
        CLEAR gw_tst01.
      ENDIF.

    ENDIF.

*
*   check for size = 0 and not currently in use
*
    IF ( tst01-dsize = 0 ) AND ( tst01-dstate = '.' ) AND
       ( tst01-dname(14) <> 'KONS1INCONSTAB' )        AND
       ( tst01-dname     <> h_name ).
      PERFORM save_incons.
      PERFORM write_c_n_p__1.
      MOVE lc_txt271 TO gw_tst01-coments.
      APPEND gw_tst01 TO gt_tst01.
      CLEAR gw_tst01.
    ENDIF.

    last_client = tst01-dclient.
    last_name   = tst01-dname.
    last_part   = tst01-dpart.

    IF commit_counter > 1000.
      COMMIT WORK.
      CLEAR commit_counter.
    ENDIF.

  ENDLOOP.

  IF gt_tst01 IS INITIAL.
    CLEAR cons_test.
  ENDIF.

  IF table_with_problem <> sap_yes.
    MOVE lc_txt160 TO ls_output.
    APPEND ls_output TO lt_output.
    CLEAR ls_output.
  ENDIF.

ENDFORM.

FORM test_consistence_tst03 TABLES lt_output USING a_name_pattern.

  DATA: looked_at_counter TYPE p VALUE 0.

  DATA: BEGIN OF itst03s OCCURS 100,
          dclient LIKE tst03m-dclient,
          dname   LIKE tst03m-dname,
          dpart   LIKE tst03m-dpart,
          drowno  LIKE tst03m-drowno,
        END OF itst03s.

* TST03-Konsistenzprüfung **************************************
  table_with_problem = sap_no.
  cons_test = 'ST03'.
*  FORMAT COLOR COL_NORMAL INTENSIFIED OFF INVERSE OFF.
  CLEAR gt_tst03.
  REFRESH gt_tst03.

  REFRESH itst03s.
  IF lv_client = '%'.

    DATA: BEGIN OF it000 OCCURS 100,
            mandt LIKE t000-mandt,
          END   OF it000.

    SELECT mandt INTO CORRESPONDING FIELDS OF TABLE it000 FROM t000.

    SELECT dclient dname dpart drowno FROM tst03m
           CLIENT  SPECIFIED
           INTO    CORRESPONDING FIELDS OF TABLE itst03s
           FOR ALL ENTRIES IN it000
           WHERE   dclient  = it000-mandt
           AND     dname LIKE a_name_pattern.
  ELSE.
    SELECT dclient dname dpart drowno FROM tst03m
           CLIENT  SPECIFIED
           INTO    CORRESPONDING FIELDS OF TABLE itst03s
           WHERE   dclient  =    lv_client
           AND     dname    LIKE a_name_pattern.
  ENDIF.



  SORT itst03s BY dname dpart dclient drowno.
  COMMIT WORK.
  LOOP AT itst03s.
    MOVE-CORRESPONDING itst03s TO tst03m.
    ADD 1 TO looked_at_counter.

    SELECT SINGLE * FROM tst01 CLIENT SPECIFIED
                               WHERE dclient = tst03m-dclient
                               AND   dname   = tst03m-dname
                               AND   dpart   = tst03m-dpart.

    IF sy-subrc <> 0.
      PERFORM save_incons.
      PERFORM write_c_n_p__3m.
      MOVE tst03m-drowno TO gw_tst03-drowno.
      MOVE lc_txt170 TO gw_tst03-coments.
      APPEND gw_tst03 TO gt_tst03.
      CLEAR gw_tst03.
    ELSEIF ( tst03m-drowno < tst01-dfirrow ).
      PERFORM save_incons.
      PERFORM write_c_n_p__3m.
      MOVE tst03m-drowno TO gw_tst03-drowno.
      MOVE lc_txt180 TO gw_tst03-coments.
      APPEND gw_tst03 TO gt_tst03.
      CLEAR gw_tst03.
    ELSEIF ( tst03m-drowno > tst01-drows ).
      PERFORM save_incons.
      PERFORM write_c_n_p__3m.
      MOVE tst03m-drowno TO gw_tst03-drowno.
      MOVE lc_txt190 TO gw_tst03-coments.
      APPEND gw_tst03 TO gt_tst03.
      CLEAR gw_tst03.
    ENDIF.

  ENDLOOP.

  COMMIT WORK.
  IF gt_tst03 IS INITIAL.
    CLEAR cons_test.
  ENDIF.

  IF table_with_problem <> sap_yes.
    MOVE lc_txt200 TO ls_output.
    APPEND ls_output TO lt_output.
  ENDIF.

ENDFORM.

FORM save_incons.

  CASE cons_test.

    WHEN 'ST01'.
      h_client = tst01-dclient.
      h_name   = tst01-dname.

    WHEN 'ST03'.
      h_client = tst03m-dclient.
      h_name   = tst03m-dname.

  ENDCASE.

  table_with_problem = sap_yes.
  incons_tab-client = h_client.
  incons_tab-name   = h_name.
  COLLECT incons_tab.

ENDFORM.

FORM write_c_n_p__1.
  MOVE : tst01-dclient TO gw_tst01-dclient,
         tst01-dname TO gw_tst01-dname,
         tst01-dpart TO gw_tst01-dpart.
ENDFORM.

FORM write_c_n_p__3m.
  MOVE : tst03m-dclient TO gw_tst03-dclient,
         tst03m-dname TO gw_tst03-dname,
         tst03m-dpart TO gw_tst03-dpart.
ENDFORM.