*---------------------------------------------------------------------*
* Program Name        :  ZCM_AL11_UPD_SAP_DIRECTORY                   *
* Title               :  To update path for user defined directories  *
*                        in AL11                                      *
* Purpose             :  This report is used to update path for user  *
*                     :  defined directories in AL11 post migration   *
*---------------------------------------------------------------------*
* Related Transaction OR Standard Program References                  *
* AL11                                                                *
*---------------------------------------------------------------------*
*	Tables              :   SELECT    UPDATE      INSERT      DELETE    *
* XXXX                :                                       X       *
*---------------------------------------------------------------------*
* Program Change History                                              *
*---------------------------------------------------------------------*
*Date        Version   Author         TR#/Local     Description       *
*---------------------------------------------------------------------*
*19-09-2022  Initial  Ashwini K P       Local  To update path for user*
*                                              defined directories in *
*                                              AL11                   *
*---------------------------------------------------------------------*
REPORT zcm_al11_upd_sap_directory.

FORM get_config
               TABLES lt_input  STRUCTURE tab512
                      lt_output STRUCTURE tab512.

  CONSTANTS: lc_sep        TYPE c               VALUE '|'    LENGTH 1,
             lc_title      TYPE c               VALUE
             'AL11 Directories restore'                      LENGTH 30,
             lc_nodata     TYPE c               VALUE
             'No data found to update'                       LENGTH 30,
             lc_mode       TYPE dd26e-enqmode   VALUE 'E',
             lc_user_dir   TYPE rstable-tabname VALUE 'USER_DIR',
             lc_err_msg    TYPE c               VALUE
             'Error during updating,table cannot be locked'  LENGTH 80,
             lc_insert     TYPE c               VALUE 'I'    LENGTH 1,
             lc_delete     TYPE c               VALUE 'D'    LENGTH 1,
             lc_ins_msg    TYPE c               VALUE
             'Number of entries inserted : '                 LENGTH 50,
             lc_del_msg    TYPE c               VALUE
             'Number of entries deleted : '                  LENGTH 50,
             lc_fail_ins   TYPE c VALUE
             'Failed to insert AL11 entries'                 LENGTH 35,
             lc_fail_del   TYPE c VALUE
             'Failed to delete Al11 entries'                 LENGTH 35.

  TYPES: BEGIN OF lty_user_dir,
           dirname TYPE dirname,
           aliass  TYPE dirname,
           svrname TYPE dirname,
         END OF lty_user_dir.

  DATA: ls_output       TYPE tab512,
        ls_input        TYPE tab512,
        lv_lines        TYPE i,
        ls_user_dir     TYPE lty_user_dir,
        lt_user_insert  TYPE STANDARD TABLE OF user_dir,
        lt_user_delete  TYPE STANDARD TABLE OF user_dir,
        lv_exist        TYPE string,
        lv_user_defined TYPE string,
        lv_action       TYPE char1,
        lv_count        TYPE string.

  " Adding title to the output
  ls_output = lc_title.
  APPEND ls_output TO lt_output.
  CLEAR: ls_output.

  CLEAR: lv_lines.
  DESCRIBE TABLE lt_input LINES lv_lines.

  IF lv_lines > 2.
    DELETE lt_input INDEX 1.
  ELSE.
    ls_output = lc_nodata.
    APPEND ls_output TO lt_output.
    CLEAR: ls_output.
    RETURN. "nothing to do since there are no entries
  ENDIF.

* Remove the 'Null' values
  PERFORM null_check TABLES lt_input.

  FREE: lt_user_delete,lt_user_insert.

  CLEAR: ls_user_dir,ls_input,lv_action.
  LOOP AT lt_input INTO ls_input.
    SPLIT ls_input AT lc_sep INTO
    ls_user_dir-aliass
    ls_user_dir-dirname
    lv_exist
    ls_user_dir-svrname
    lv_user_defined
    lv_action.

    IF lv_action EQ lc_insert.

      APPEND ls_user_dir TO lt_user_insert.
      CLEAR: ls_user_dir.

    ELSEIF lv_action EQ lc_delete.

      APPEND ls_user_dir TO lt_user_delete.
      CLEAR: ls_user_dir.

    ENDIF.
    CLEAR: ls_input,lv_action.
  ENDLOOP.

  CALL FUNCTION 'ENQUEUE_E_TABLE'
    EXPORTING
      mode_rstable   = lc_mode "'E'
      tabname        = lc_user_dir "'USER_DIR'
    EXCEPTIONS
      foreign_lock   = 1
      system_failure = 2
      OTHERS         = 3.
  IF sy-subrc NE 0.
    ls_output = lc_err_msg.
    APPEND ls_output TO lt_output.
    CLEAR: ls_output.
    RETURN.
  ENDIF.

  " Delete AL11 entries
  IF lt_user_delete IS NOT INITIAL.

    DELETE user_dir FROM TABLE lt_user_delete.

    IF sy-subrc EQ 0.

      CLEAR: lv_count.
      DESCRIBE TABLE lt_user_delete LINES lv_count.

      " Number of entries deleted in the table
      CONCATENATE lc_del_msg lv_count INTO ls_output.
      APPEND ls_output TO lt_output.
      CLEAR ls_output.

    ELSE.

      " Failed to delete AL11 entries
      ls_output = lc_fail_del.
      APPEND ls_output TO lt_output.
      CLEAR ls_output.

    ENDIF.

  ENDIF.

  " Insert AL11 entries
  IF lt_user_insert IS NOT INITIAL.

    MODIFY user_dir FROM TABLE lt_user_insert.

    IF sy-subrc EQ 0.

      CLEAR: lv_count.
      DESCRIBE TABLE lt_user_insert LINES lv_count.

      " Number of entries created in the table
      CONCATENATE lc_ins_msg lv_count INTO ls_output.
      APPEND ls_output TO lt_output.
      CLEAR ls_output.

    ELSE.

      " Failed to insert AL11 entries
      ls_output = lc_fail_ins.
      APPEND ls_output TO lt_output.
      CLEAR ls_output.

    ENDIF.

  ENDIF.

  " FM to unlock the table
  CALL FUNCTION 'DEQUEUE_E_TABLE'
    EXPORTING
      mode_rstable = lc_mode
      tabname      = lc_user_dir. "'USER_DIR'


ENDFORM.
*&---------------------------------------------------------------------*
*& Form NULL_CHECK
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*      -->LT_TABLE Input Table
*&---------------------------------------------------------------------*
FORM null_check TABLES lt_table TYPE table.

  DO.
    REPLACE ALL OCCURRENCES OF SUBSTRING '|NULL|'
    IN TABLE lt_table WITH '| |'.
    FIND '|NULL|' IN TABLE lt_table.
    IF sy-subrc <> 0.
      EXIT .
    ENDIF.
  ENDDO.

ENDFORM.