*---------------------------------------------------------------------*
* Program Name        :  ZCM_T_HTTPURLLOC_UPD                         *
* Title               :  Restore HTTPURLLOC                           *
* Purpose             :  This report is for restoring HTTPURLLOC data *
*                        during Cloud Migration                       *
*---------------------------------------------------------------------*
* Related Transaction OR Standard Program References                  *
* XXXX                                                                *
*---------------------------------------------------------------------*
* Tables              :   SELECT    UPDATE      INSERT      DELETE    *
* HTTPURLLOC                          X                       X       *
*---------------------------------------------------------------------*
* Program Change History                                              *
*---------------------------------------------------------------------*
*Date        Version   Author       TR#/Local     Description         *
*---------------------------------------------------------------------*
*10-07-2020  Initial   Ruchir Kamble   Local   To restore HTTPURLLOC  *
*                                              table data             *
*09-30-2022  V001      Yasaswini K   Local     To remove dead code and*
*                                              inline declarations    *
*---------------------------------------------------------------------*
REPORT zcm_t_httpurlloc_upd.

CONSTANTS: lc_sep        TYPE c VALUE '|'              LENGTH 1,
           lc_insert     TYPE c VALUE 'I'              LENGTH 1,
           lc_update     TYPE c VALUE 'U'              LENGTH 1,
           lc_delete     TYPE c VALUE 'D'              LENGTH 1,
           lc_mode       TYPE dd26e-enqmode VALUE 'E',
           lc_http       TYPE rstable-tabname VALUE 'HTTPURLLOC',
           lc_title      TYPE c VALUE
           'Restore HTTPURLLOC table'                  LENGTH 30,
           lc_insert_msg TYPE c VALUE
           'Number of entries created in Table HTTPURLLOC: ' LENGTH 50,
           lc_update_msg TYPE c VALUE
           'Number of entries updated in Table HTTPURLLOC: ' LENGTH 50,
           lc_delete_msg TYPE c VALUE
           'Number of entries deleted in Table HTTPURLLOC: ' LENGTH 50,
           lc_err_msg    TYPE c VALUE
           'No HTTPURLLOC entries to restore'               LENGTH 35,
           lc_fail_ins   TYPE c VALUE
           'Failed to create HTTPURLLOC entries'            LENGTH 35,
           lc_fail_upd   TYPE c VALUE
           'Failed to update HTTPURLLOC entries'            LENGTH 35,
           lc_fail_del   TYPE c VALUE
           'Failed to delete HTTPURLLOC entries'            LENGTH 35,
           lc_err_unlock TYPE c VALUE
           'Failed to unlock table HTTPURLLOC'              LENGTH 35.

DATA:ls_input       TYPE tab512,
     ls_output      TYPE tab512,
     lv_lines       TYPE i,
     lv_count       TYPE i,
     lv_action      TYPE char1,
     ls_httpurlloc  TYPE httpurlloc,
     lt_http_insert TYPE TABLE OF httpurlloc,
     lt_http_update TYPE TABLE OF httpurlloc,
     lt_http_delete TYPE TABLE OF httpurlloc.

LOAD-OF-PROGRAM.

FORM get_config
              TABLES lt_input  STRUCTURE tab512
                     lt_output STRUCTURE tab512.

  CLEAR lv_lines.
  DESCRIBE TABLE lt_input LINES lv_lines.

  " Adding title to the output
    ls_output = lc_title.
    APPEND ls_output TO lt_output.
    CLEAR ls_output.

  IF lv_lines < 2.

    " No HTTPURLLOC entries to restore
    ls_output = lc_err_msg.
    APPEND ls_output TO lt_output.
    CLEAR ls_output.
    RETURN.
  ENDIF.

  " To delete heading
  DELETE lt_input INDEX 1.

  FREE: lt_http_insert, lt_http_update, lt_http_delete.

  LOOP AT lt_input INTO ls_input.

    CLEAR: ls_httpurlloc, lv_action.

    SPLIT ls_input AT lc_sep INTO
      ls_httpurlloc-mandt
      ls_httpurlloc-sort_key
      ls_httpurlloc-protocol
      ls_httpurlloc-applicatn
      ls_httpurlloc-for_domain
      ls_httpurlloc-host
      ls_httpurlloc-port
      lv_action.

    IF lv_action EQ lc_insert.

      APPEND ls_httpurlloc TO lt_http_insert.
      CLEAR ls_httpurlloc.

    ELSEIF lv_action EQ lc_update.

      APPEND ls_httpurlloc TO lt_http_update.
      CLEAR ls_httpurlloc.

    ELSEIF lv_action EQ lc_delete.

      APPEND ls_httpurlloc TO lt_http_delete.
      CLEAR ls_httpurlloc.

    ENDIF.

  ENDLOOP.

 " FM to Lock the table
  CALL FUNCTION 'ENQUEUE_E_TABLE'
    EXPORTING
      mode_rstable   = lc_mode
      tabname        = lc_http
    EXCEPTIONS
      foreign_lock   = 1
      system_failure = 2
      OTHERS         = 3.

  IF sy-subrc NE 0.

    MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
    WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4
    INTO ls_output.
    APPEND ls_output TO lt_output.
    CLEAR ls_output.
    RETURN.

  ELSE.

*********************Delete HTTPURLLOC entries*****************

  IF lt_http_delete IS NOT INITIAL.

    DELETE httpurlloc FROM TABLE lt_http_delete.
    COMMIT WORK.

    IF sy-subrc EQ 0.

      CLEAR: lv_count.
      DESCRIBE TABLE lt_http_delete LINES lv_count.

      " Number of entries updated in the table
      ls_output-wa = |{ lc_delete_msg } { lv_count }|.
      APPEND ls_output TO lt_output.
      CLEAR ls_output.

    ELSE.
      " Failed to delete HTTPURLLOC entries
      ls_output = lc_fail_del.
      APPEND ls_output TO lt_output.
      CLEAR ls_output.
    ENDIF.

  ENDIF.

**************Insert HTTPURLLOC entries************************

  IF lt_http_insert IS NOT INITIAL.

    MODIFY httpurlloc FROM TABLE lt_http_insert.
    COMMIT WORK.

    IF sy-subrc EQ 0.

      CLEAR: lv_count.
      DESCRIBE TABLE lt_http_insert LINES lv_count.

      " Number of entries created in the table
      ls_output-wa = |{ lc_insert_msg } { lv_count }|.
      APPEND ls_output TO lt_output.
      CLEAR ls_output.
    ELSE.
      " Failed to insert HTTPURLLOC entries
      ls_output = lc_fail_ins.
      APPEND ls_output TO lt_output.
      CLEAR ls_output.
    ENDIF.

  ENDIF.

*********************Update HTTPURLLOC entries*****************

  IF lt_http_update IS NOT INITIAL.

    UPDATE httpurlloc FROM TABLE lt_http_update.
    COMMIT WORK.

    IF sy-subrc EQ 0.

      CLEAR: lv_count.
      DESCRIBE TABLE lt_http_update LINES lv_count.

      " Number of entries updated in the table
      ls_output-wa = |{ lc_update_msg } { lv_count }|.
      APPEND ls_output TO lt_output.
      CLEAR ls_output.
    ELSE.
      " Failed to update HTTPURLLOC entries
      ls_output = lc_fail_upd.
      APPEND ls_output TO lt_output.
      CLEAR ls_output.
    ENDIF.

  ENDIF.

    " FM to unlock the table
    CALL FUNCTION 'DEQUEUE_E_TABLE'
      EXPORTING
        mode_rstable = lc_mode
        tabname      = lc_http.

    IF sy-subrc NE 0.
      ls_output = lc_err_unlock.
      APPEND ls_output TO lt_output.
      CLEAR ls_output.
    ENDIF.

ENDIF.

ENDFORM.