SAPINST.CD.PACKAGE.EXP = {{ params.import.sapinst_pkg_exp }}

# Password for the Diagnostics Agent specific <dasid>adm user. Provided value may be encoded.
# DiagnosticsAgent.dasidAdmPassword =

# Windows domain in which the Diagnostics Agent users must be created. This is an optional property (Windows only).
# DiagnosticsAgent.domain =

# Windows only: Password for the Diagnostics Agent specific 'SAPService<DASID>' user.
# DiagnosticsAgent.sapServiceDASIDPassword =

# WSDL URL for 'sapcontrol' on the SAP HANA host, used to start the 'hdbnsutil -initTopology' process.
# HDB_Recovery_Dialogs.sapControlWsdlUrl =

# The '<sapsid>adm' user on the SAP HANA host
# HDB_Recovery_Dialogs.sidAdmName =

# Password of the '<sapsid>adm' user on the SAP HANA host.
# HDB_Recovery_Dialogs.sidAdmPassword =

# Specify whether Software Provisioning Manager is to drop the schema if it exists.
# HDB_Schema_Check_Dialogs.dropSchema = false

# The name of the database schema.
HDB_Schema_Check_Dialogs.schemaName = {{ schema_name }}

# The password of the database schema.
HDB_Schema_Check_Dialogs.schemaPassword = {{ passwords.db_schema.target }}

# Specify whether Software Provisioning Manager is to validate the schema name. The schema name must only contain numbers and capital letters. It  must not start with '_' . It cannot be 'SYS' or 'SYSTEM'.
HDB_Schema_Check_Dialogs.validateSchemaName = false

# Initialize database or reset tenant database. For uninstall, drop database tenant
HDB_System_Check_Dialogs.initTopology = true

# Database hostnames that will be set directly in hdbuserstore without resolving them in HANA. Comma separated. Example (host1,host2)
# HDB_Userstore.doNotResolveHostnames =

# Alternative port for SystemDB to be used in hdbuserstore
# HDB_Userstore.systemDBPort =

# Use ABAP secure store instead of HANA userstore. Default: false for HANA user store.
# HDB_Userstore.useABAPSSFS = false

# Specify whether you want to decluster during the import.
InitDeclusteringForImport.decluster = false

# SAP HANA: import tasks to omit. To be used in combination with HDB_IMPORT_WITH_SDI=true.
# NW_ABAP_Import.hdbOmitTasksForSDI = TPIV

# SAP code page. Value for Unicode is: '4103' on little endian (intel), '4102' on big endian. Value for Non-Unicode is: '1100' or country specific.
NW_ABAP_Import_Dialog.dbCodepage = 4103

# Communication port for the Migration Monitor.
# NW_ABAP_Import_Dialog.migmonComPort =

# Communication type for the Migration Monitor. Possible values are: 'EXCHANGE', 'SOCKETS', none
# NW_ABAP_Import_Dialog.migmonComType = EXCHANGE

# Exchange directory for the Migration Monitor
NW_ABAP_Import_Dialog.migmonExchangeDir = {{ params.import.migmonExchangeDir }}

# Number of parallel Migration Monitor jobs
NW_ABAP_Import_Dialog.migmonJobNum = {{ monitor_cpu_job }}

# Additional 'R3load' arguments for the LOAD phase
NW_ABAP_Import_Dialog.migmonLoadArgs = -c 100000 -rowstorelist /tmp/sapinst_instdir/NW750/HDB/COPY/SYSTEM/STD/AS-ABAP/REF/rowstorelist.txt

# Additional 'R3load' arguments for the TASK phase
# NW_ABAP_Import_Dialog.migmonTaskArgs =

# Migration key.
NW_ABAP_Import_Dialog.migrationKey = {{ passwords.migration_key }}

# Enables setting advanced 'R3load' options.
NW_ABAP_Import_Dialog.useAdvancedLoadConfig = true

# Enables setting attribues for parallel export/import.
NW_ABAP_Import_Dialog.useParallelExportImport = true

# Activate ICF node '/SAP/BC/REST/SLPROTOCOL'
# NW_CI_Instance_ABAP_Reports.enableActivateICFService = false

# SAP INTERNAL USE ONLY
# NW_CI_Instance_ABAP_Reports.enableSPAMUpdateWithoutStackXml = false

# SAP INTERNAL USE ONLY
# NW_CI_Instance_ABAP_Reports.enableTMSConfigWithoutStackXml = false

# SAP INTERNAL USE ONLY
# NW_CI_Instance_ABAP_Reports.enableTransportsWithoutStackXml = false

# Distributed installation or system copy with any database and SAP Basis release 740 or higher: Execute ABAP program 'RUTPOADAPT' for depooling. Set it to 'true' if declustering / depooling is selected for the distributed database instance installation option.
NW_CI_Instance_ABAP_Reports.executeReportsForDepooling = true

# System copy AS Java with product instance Process Integration and/or Development Infrastructure: Specify whether the target system should replace the source system. Possible values are  'true' or 'false'.
# NW_CreateDBandLoad.movePVCforUsagePiAndDi =

# Password of the DDIC user in client 000
NW_DDIC_Password.ddic000Password = {{ passwords.r3.target }}

# Password of the DDIC user in client 001
# NW_DDIC_Password.ddic001Password =

# Are the passwords for the DDIC users different from the default value? Possible values are 'true' or 'false'. Leave empty for default.
# NW_DDIC_Password.needDDICPasswords =

# Specify whether the all operating system users are to be removed from group 'sapinst' after the execution of Software Provisioning Manager has completed.
# NW_Delete_Sapinst_Users.removeUsers = false

# Stop before starting the system the first time. Default is 'false'.
# NW_Exit_Before_Systemstart.exit = false

# Master password
NW_GetMasterPassword.masterPwd = {{ passwords.master }}

# ABAP schema name
NW_HDB_DB.abapSchemaName = {{ schema_name }}

# Password of the ABAP schema user
NW_HDB_DB.abapSchemaPassword = {{ passwords.db_schema.target }}

# Password of the DBACOCKPIT user
NW_HDB_DB.dbacockpitPassword = {{ passwords.dbacockpit }}

# JAVA schema name
# NW_HDB_DB.javaSchemaName =

# Password of the JAVA schema user
# NW_HDB_DB.javaSchemaPassword =

# Skip checking if creating a HANA user store is needed. Default value is 'true'. If set to 'false', a valid HANA userstore must exists.
# NW_HDB_DBClient.checkCreateUserstore = true

# Install the SAP HANA database client in a central or local directory. Possible values are: 'SAPCPE', 'LOCAL'
# NW_HDB_DBClient.clientPathStrategy = LOCAL

# Data has already been loaded.
# NW_HDB_getDBInfo.dataAlreadyLoaded = false

# The DB admin user for SAP HANA tenant database. Default value: SYSTEM
# NW_HDB_getDBInfo.dbadmin = SYSTEM

# Database host
NW_HDB_getDBInfo.dbhost = {{ ansible_hostname }}

# Database system ID
NW_HDB_getDBInfo.dbsid = {{ sid|upper }}

# The instance number of the SAP HANA database server
NW_HDB_getDBInfo.instanceNumber = {{ instance_number }}

# Password of user 'SYSTEM' within the 'SystemDB' tenant in an SAP HANA MultiDB server
NW_HDB_getDBInfo.systemDbPassword = {{ passwords.db.target }}

# Password of user 'SYSTEM' inside the SAP HANA database server
NW_HDB_getDBInfo.systemPassword = {{ passwords.db.target }}

# Password of user 'SYSTEM' inside the SAP HANA database server from a backup
# NW_HDB_getDBInfo.systemPasswordBackup =

# SAP HANA system ID
NW_HDB_getDBInfo.systemid = {{ sid|upper }}

# A dedicated OS group for the tenant database, required for SAP HANA multitenant database containers with high isolation level.
# NW_HDB_getDBInfo.tenantOsGroup =

# A dedicated OS user for the tenant database, required for SAP HANA multitenant database containers with high isolation level.
# NW_HDB_getDBInfo.tenantOsUser =

# The SQL port for SAP HANA tenant database
# NW_HDB_getDBInfo.tenantPort =

# Connect using SSL/TLS. Default value: false.
# NW_HDB_getDBInfo.usingSSL = false

# DEPRECATED, DO NOT USE!
# NW_SAPCrypto.SAPCryptoFile =

# DEPRECATED, DO NOT USE!
# NW_Unpack.dbaToolsSar =

# DEPRECATED, DO NOT USE!
# NW_Unpack.igsExeSar =

# DEPRECATED, DO NOT USE!
# NW_Unpack.igsHelperSar =

# DEPRECATED, DO NOT USE!
# NW_Unpack.sapExeDbSar =

# DEPRECATED, DO NOT USE!
# NW_Unpack.sapExeSar =

# DEPRECATED, DO NOT USE!
# NW_Unpack.sapJvmSar =

# DEPRECATED, DO NOT USE!
# NW_Unpack.xs2Sar =

# ABAP message server port for connecting to the message server, leave empty for default
# NW_checkMsgServer.abapMSPort =

# The FQDN of the system
# NW_getFQDN.FQDN =

# SAP INTERNAL USE ONLY
# NW_getFQDN.resolve = true

# Specify whether you want to set FQDN for the system.
NW_getFQDN.setFQDN = false

# The load type chosen by the user. Valid values are: 'SAP', 'STD', 'OBR', 'HCP', 'FLASHCOPY', 'MDA', 'HBR', 'SBR'
NW_getLoadType.loadType = STD

# ABAP system is Unicode (true|false), only needed if it cannot be determined from the system.
# NW_getUnicode.isUnicode =

# Provide  'profile' directory of SAP Netweaver-based system.
NW_readProfileDir.profileDir = /usr/sap/{{ app_sid|upper }}/SYS/profile

# Enter the path of the existing 'profile' directory.
# NW_readProfileDir.profilesAvailable = true

# Windows only: The drive to use
# NW_readProfileDir.sapdrive =

# The folder containing all archives that have been downloaded from http://support.sap.com/swdc and are supposed to be used in this procedure
archives.downloadBasket = {{ params.import.downloadbasket }}

# Specify whether a Landscape Reorg Check Procedures file 'HdbLandscapeReorgCheckProcedure.SQL' is to be used. Possible values are 'USEFILE', 'DONOTUSEFILE','DONOTRUN'. Default value is 'USEFILE'.
# hanadb.landscape.reorg.useCheckProcedureFile = USEFILE

# Specify whether a Table Placement Parameters file 'HdbTablePlacementParameters.SQL' is to be used. Possible values are 'USEFILE', 'DONOTUSEFILE'. Default value is 'USEFILE'.
hanadb.landscape.reorg.useParameterFile = DONOTUSEFILE

# DBACOCKPIT user is to be created. Default value is 'true'.
# hdb.create.dbacockpit.user = true

# Windows only: The domain of the SAP Host Agent user
# hostAgent.domain =

# Password for the 'sapadm' user of the SAP Host Agent
# hostAgent.sapAdmPassword =

# Windows only: The domain of all users of this SAP system. Leave empty for default.
# nwUsers.sapDomain =

# Windows only: The password of the 'SAPServiceSID' user
# nwUsers.sapServiceSIDPassword =

# UNIX only: The user ID of the 'sapadm' user, leave empty for default. The ID is ignored if the user already exists.
# nwUsers.sapadmUID =

# UNIX only: The group id of the 'sapsys' group, leave empty for default. The ID is ignored if the group already exists.
nwUsers.sapsysGID = {{ params.sapsys.gid }}

# UNIX only: The user id of the <sapsid>adm user, leave empty for default. The ID is ignored if the user already exists.
nwUsers.sidAdmUID = {{ params.sidadm.uid }}

# The password of the '<sapsid>adm' user
nwUsers.sidadmPassword = {{ passwords.adm.target.db }}

# ABAP schema password
# storageBasedCopy.abapSchemaPassword =

# Instance number of the SAP HANA Database server
storageBasedCopy.hdb.instanceNumber = {{ instance_number }}

# Password of user 'SYSTEM' inside the SAP HANA Database Server
storageBasedCopy.hdb.systemPassword = {{ passwords.db.target }}

# Sets the SAP<SAPSID>DB schema password using a  parameter file.
# storageBasedCopy.javaSchemaPassword =
