*---------------------------------------------------------------------*
* Program Name        :   ZCM_SM51_EXP_KERNEL_PATCH                   *
* Title               :   Kernel & Patch Export                       *
* Purpose             :   This report is used to export kernel and    *
*                     :   patch details from system pre migration     *
*---------------------------------------------------------------------*
* Related Transaction OR Standard Program References                  *
* SM51                                                                *
*---------------------------------------------------------------------*
*	Tables              :   SELECT    UPDATE      INSERT      DELETE    *
* XXXXX                     X                                         *
*---------------------------------------------------------------------*
* Program Change History                                              *
*---------------------------------------------------------------------*
*Date        Version   Author       TR#/Local     Description         *
*---------------------------------------------------------------------*
*08-19-2020  Initial   Ashwini K P  Local  To Export Kernel & Patch   *
*                                          details from system        *
*---------------------------------------------------------------------*
REPORT zcm_sm51_exp_kernel_patch.

FORM get_config
              TABLES ft_input  STRUCTURE tab512
                     ft_output STRUCTURE tab512.

  CONSTANTS: lc_sep     TYPE c VALUE '|'                  LENGTH 1,
             lc_act_exp TYPE c VALUE 'EXPORT'             LENGTH 6,
             lc_kernel  TYPE c VALUE 'Kernel Release'     LENGTH 14,
             lc_patch   TYPE c VALUE 'Kernel Patch level' LENGTH 18,
             lc_msg     TYPE c VALUE 'No data found'      LENGTH 13,
             lc_noinput TYPE c VALUE 'No input passed'    LENGTH 20,
             lc_inc_inp TYPE c VALUE
             'Incorrect input'                            LENGTH 20.

  DATA: ls_input           TYPE tab512,
        ls_output          TYPE tab512,
        lv_action          TYPE char8,
        lt_sys_info        TYPE STANDARD TABLE OF bdi_log,
        ls_sys_info        TYPE bdi_log,
        lv_kern_rel        TYPE thllines-thline,
        lv_kern_patchlevel TYPE thllines-thline.

  " Title
  CLEAR: ls_output.
  ls_output = 'Kernel and Patch values'.
  APPEND ls_output TO ft_output.

  CLEAR: ls_input,
         lv_action.

  " Read input values from Python/Ansibel
  READ TABLE ft_input INTO ls_input INDEX 1.
  IF sy-subrc EQ 0.
    lv_action = ls_input.       " Action
  ELSE.
    " No input passed
    ls_output = lc_noinput.
    APPEND ls_output TO ft_output.
    CLEAR ls_output.
    RETURN.
  ENDIF.

  CASE lv_action.

    WHEN lc_act_exp. "EXPORT
* Under the pre-migration activities, the system data i.e. Kernel
* and patch details are fetched and exported to Python.

* Kernel and Patch Info
      FREE: lt_sys_info[].
      CALL FUNCTION '/SDF/CCMS_GET_SYSTEM_INFO'
        TABLES
          sys_info       = lt_sys_info
        EXCEPTIONS
          no_authority   = 1
          internal_error = 2
          OTHERS         = 3.
      IF sy-subrc EQ 0.
        CLEAR: lv_kern_rel.
        READ TABLE lt_sys_info INTO ls_sys_info
        WITH KEY tcode = 'kernel release'.
        IF sy-subrc EQ 0.
          lv_kern_rel = ls_sys_info-comm.
        ENDIF.
        CLEAR: ls_sys_info,lv_kern_patchlevel.
        READ TABLE lt_sys_info INTO ls_sys_info
        WITH KEY tcode = 'kernel patch level'.
        IF sy-subrc EQ 0.
          lv_kern_patchlevel = ls_sys_info-comm.
        ENDIF.
      ELSE.
        " No data found
        ls_output = lc_msg.
        APPEND ls_output TO ft_output.
        CLEAR: ls_output.
        RETURN.
      ENDIF.

      IF lv_kern_rel IS NOT INITIAL AND
         lv_kern_patchlevel IS NOT INITIAL.

        " Heading Cloumns
        CLEAR: ls_output.
        CONCATENATE lc_kernel lc_sep lc_patch INTO ls_output.
        APPEND ls_output TO ft_output.

        " Data
        CLEAR: ls_output.
        CONCATENATE lv_kern_rel lc_sep lv_kern_patchlevel
        INTO ls_output.
        APPEND ls_output TO ft_output.
        CLEAR: ls_output.
      ELSE.
        " No data found
        ls_output = lc_msg.
        APPEND ls_output TO ft_output.
        CLEAR: ls_output.
        RETURN.
      ENDIF.

    WHEN OTHERS.
      " Incorrect input
      ls_output = lc_inc_inp.
      APPEND ls_output TO ft_output.
      CLEAR ls_output.
      RETURN.

  ENDCASE.

ENDFORM.