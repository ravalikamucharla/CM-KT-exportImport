*---------------------------------------------------------------------*
* Program Name        :   ZCM_EXP_RSICFCHK_DETAILS                    *
* Title               :   SICF Services                               *
* Purpose             :   This report is used to check sicf public    *
*                         services and services with logon data       *
*---------------------------------------------------------------------*
* Related Transaction OR Standard Program References                  *
* RISFCHK                                                             *
*---------------------------------------------------------------------*
*Tables              :   SELECT    UPDATE      INSERT      DELETE    *
* XXXXX                     X                                         *
*---------------------------------------------------------------------*
* Program Change History                                              *
*---------------------------------------------------------------------*
*Date        Version   Author       TR#/Local     Description         *
*---------------------------------------------------------------------*
*06-28-2021  Initial  Yasaswini K     Local   To Check sicf public    *
*                                             services and logon data *
*09-08-2022  V001     Soumya Ray      Local   To pass 'No data found' *
*                                             in case of no data found*
*                                             in system               *
*---------------------------------------------------------------------*
REPORT zcm_exp_rsicfchk_details.

FORM get_config
              TABLES lt_input  STRUCTURE tab512
                     lt_output STRUCTURE tab512.

  CONSTANTS: lc_sep       TYPE c VALUE '|'          LENGTH 1,
             lc_redirect  TYPE c VALUE 'Redirected' LENGTH 10,
             lc_export    TYPE c VALUE 'EXPORT'     LENGTH 6,
             lc_noinput   TYPE c VALUE 'No input given'
                                                    LENGTH 20,
             lc_inc_input TYPE c VALUE 'Incorrect input'
                                                    LENGTH 20,
             lc_null      TYPE c VALUE 'NULL'       LENGTH 4,
             lc_title     TYPE c VALUE
             'SICFPublicServicesAndServicesWithLogonData'
                                                    LENGTH 50,
             lc_host      TYPE c VALUE 'VirtualHostsOrServices'
                                                    LENGTH 30,
             lc_status    TYPE c VALUE 'Status'     LENGTH 6,
             lc_logon     TYPE c VALUE 'LogonData'  LENGTH 10,
             lc_redir     TYPE c VALUE 'RedirectedTo'
                                                    LENGTH 18,
             lc_desc      TYPE c VALUE 'Description'
                                                    LENGTH 15,
             lc_nodata    TYPE c VALUE 'No data found'
                                                    LENGTH 20. "+V001

  DATA: lt_ascilist   TYPE STANDARD TABLE OF soli,
        ls_output     TYPE tab512,
        ls_ascii      TYPE soli,
        lv_redirected TYPE string,
        ls_input      TYPE tab512,
        lv_str        TYPE string,
        lv_logon      TYPE string,
        lv_active     TYPE string,
        lv_str1       TYPE string,
        lv_header     TYPE string,
        lv_new        TYPE char1,
        lv_action     TYPE char6,
        lt_list       TYPE TABLE OF abaplist.

  CLEAR: ls_output, ls_ascii, lv_redirected, ls_input, lv_str, lv_logon,
         lv_active, lv_str1, lv_header, lv_new, lv_action.

  FREE: lt_list, lt_output, lt_ascilist.

  "Title
  ls_output = lc_title.
  APPEND ls_output TO lt_output.
  CLEAR ls_output.

  READ TABLE lt_input INTO ls_input INDEX 1.

  IF sy-subrc EQ 0.
    lv_action = ls_input.
  ELSE.
    " No input given
    ls_output = lc_noinput.
    APPEND ls_output TO lt_output.
    CLEAR ls_output.
    RETURN.
  ENDIF.

  CASE lv_action.

    WHEN lc_export.   " When action is EXPORT

      "Submit report rsicfchk
      SUBMIT rsicfchk
      WITH s_public = abap_true
      WITH s_login  = abap_true
      WITH s_inact  = abap_false

      EXPORTING LIST TO MEMORY AND RETURN.

      CALL FUNCTION 'LIST_FROM_MEMORY'
        TABLES
          listobject = lt_list
        EXCEPTIONS
          not_found  = 1
          OTHERS     = 2.
      IF sy-subrc EQ 0.

        CALL FUNCTION 'LIST_TO_ASCI'
          TABLES
            listasci           = lt_ascilist
            listobject         = lt_list
          EXCEPTIONS
            empty_list         = 1
            list_index_invalid = 2
            OTHERS             = 3.
        IF sy-subrc = 0.
"To delete title and column details from output of standard report
          DELETE lt_ascilist FROM 1 TO 6.
*  Begin of changes in V001
          IF lt_ascilist IS INITIAL.
            ls_output = lc_nodata.
            APPEND ls_output TO lt_output.
            CLEAR ls_output.
            RETURN.
          ENDIF.
*  End of changes in V001

          lv_new = abap_true.

          CONCATENATE lc_host   lc_sep
                      lc_desc   lc_sep
                      lc_logon  lc_sep
                      lc_status lc_sep
                      lc_redir INTO ls_output.
          APPEND ls_output TO lt_output.
          CLEAR: ls_output.

          "Appending Blank line at end of ascii table
          APPEND ls_ascii TO lt_ascilist.
          CLEAR: ls_ascii.

          LOOP AT lt_ascilist INTO ls_ascii.
*Blank line will be there to seperate records
            IF ls_ascii IS INITIAL AND sy-tabix NE 1.
*Setting flag to indicate new record
              lv_new = abap_true.

              IF lv_redirected IS INITIAL.
                lv_redirected = lc_null.
              ENDIF.

              CONCATENATE lv_header lc_sep
                          lv_str1   lc_sep
                          lv_logon  lc_sep
                          lv_active lc_sep
                          lv_redirected INTO ls_output.
              APPEND ls_output TO lt_output.
              CLEAR: ls_output, lv_header, lv_str1, lv_active, lv_logon,
                     lv_redirected.
              CONTINUE.
            ENDIF.

*To get redirected data as this the last column so exiting from loop
            IF ls_ascii CS lc_redirect.
              lv_redirected = ls_ascii.
              CONDENSE lv_redirected.
              CONTINUE.
            ENDIF.

*If the record is new appending header else fetching description and
*logon data
            IF lv_new = abap_true.
              CLEAR: lv_header, lv_new.
              lv_header = ls_ascii.
            ELSE.
              CLEAR: lv_str1, lv_str, lv_logon, lv_active.
              lv_str1 = ls_ascii+0(70).
              lv_str = ls_ascii+70(185).
              CONDENSE lv_str.
              CONDENSE lv_str1.
              SPLIT lv_str AT space INTO lv_logon
                                         lv_active.
            ENDIF.

            CLEAR: ls_output.

          ENDLOOP.

          "Adding NULL values in between
          DO.
            REPLACE ALL OCCURRENCES OF SUBSTRING '||'
            IN TABLE lt_output WITH '|NULL|'.
            FIND '||' IN TABLE lt_output.
            IF sy-subrc <> 0.
              EXIT .
            ENDIF.
          ENDDO.

        ENDIF.
      ENDIF.

    WHEN OTHERS.
      " Incorrect input
      ls_output = lc_inc_input.
      APPEND ls_output TO lt_output.
      CLEAR ls_output.

  ENDCASE.
ENDFORM.