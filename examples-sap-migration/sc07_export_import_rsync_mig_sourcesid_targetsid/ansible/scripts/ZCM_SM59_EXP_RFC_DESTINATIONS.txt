*---------------------------------------------------------------------*
* Program Name        :   ZCM_SM59_EXP_RFC_DESTINATIONS               *
* Title               :   RFC Destinations Export                     *
* Purpose             :   This report is used to export RFC           *
*                         destinations from tcode SM59 pre migration  *
*---------------------------------------------------------------------*
* Related Transaction OR Standard Program References                  *
* SM59                                                                *
*---------------------------------------------------------------------*
* Tables              :   SELECT    UPDATE      INSERT      DELETE    *
* RFCDES                    X                                         *
*---------------------------------------------------------------------*
* Program Change History                                              *
*---------------------------------------------------------------------*
*Date        Version   Author          TR#/Local     Description      *
*---------------------------------------------------------------------*
*10-29-2020  Initial   ASHWINI B      Local   To export RFC dest from *
*                                             tcode SM59              *
*09-12-2022   V001 Yasaswini K/Soumya Local   To pass message "No data*
*                                             found" in case of no    *
*                                             data found in sytem     *
*---------------------------------------------------------------------*
REPORT zcm_sm59_exp_rfc_destinations.

FORM get_config
              TABLES ft_input  STRUCTURE tab512
                     ft_output STRUCTURE tab512.

* Begin of changes in V001
  TYPES: BEGIN OF lty_rfcdes,
           rfcdest    TYPE rfcdest,
           rfctype    TYPE rfctype_d,
           rfcoptions TYPE rfcoptions,
         END OF lty_rfcdes.
* End of changes in V001

  CONSTANTS: lc_sep        TYPE c  VALUE '|'                LENGTH 1,
             lc_act_exp    TYPE c  VALUE 'EXPORT'           LENGTH 6,
             lc_rfcdest    TYPE c  VALUE 'RFC destination'  LENGTH 20,
             lc_rfctype    TYPE c  VALUE 'RFC type'         LENGTH 20,
             lc_rfcoptions TYPE c  VALUE 'RFC options'      LENGTH 20,
             lc_msg        TYPE c  VALUE
             'No data found'                                LENGTH 30,
* Begin of changes in V001
             lc_inc_input  TYPE c VALUE 'Incorrect input'   LENGTH 20,
             lc_noinput    TYPE c VALUE 'No input given'    LENGTH 20.
* End of changes in V001

  DATA: ls_input  TYPE tab512,
        ls_output TYPE tab512,
        lv_action TYPE char6,
* Begin of changes in V001
        lt_rfcdes TYPE STANDARD TABLE OF lty_rfcdes.

  FIELD-SYMBOLS: <fs_rfcdes> TYPE lty_rfcdes,
                 <field>     TYPE any.
* End of changes in V001

  "Title
  ls_output = 'List of RFC destinations'.
  APPEND ls_output TO ft_output.
  CLEAR: ls_output.

  " Read input values from Python/Ansibel
  READ TABLE ft_input INTO ls_input INDEX 1.

* Begin of changes in V001
  IF sy-subrc EQ 0.
    lv_action = ls_input.
  ELSE.
    " No input given
    ls_output = lc_noinput.
    APPEND ls_output TO ft_output.
    CLEAR ls_output.
    RETURN.
  ENDIF.
* End of changes in V001

  CASE lv_action.

    WHEN lc_act_exp. "EXPORT

* Under the pre-migration activities, the data
* related to RFC destinations created in the system is
* exported to Python.The table RFCDES holds this data. This is read
* to determine the number of RFC connections in system
      SELECT rfcdest
             rfctype
             rfcoptions
          FROM rfcdes
          INTO TABLE lt_rfcdes.
      IF sy-subrc EQ 0.
        SORT: lt_rfcdes BY rfcdest rfctype.
      ENDIF.

      IF lt_rfcdes[] IS NOT INITIAL.

        " Heading columns
        CLEAR: ls_output.
        CONCATENATE lc_rfcdest   lc_sep
                    lc_rfctype   lc_sep
                    lc_rfcoptions INTO ls_output.
        APPEND ls_output TO ft_output.

        " Data
        LOOP AT lt_rfcdes ASSIGNING <fs_rfcdes>.

          DO.
            ASSIGN COMPONENT sy-index
            OF STRUCTURE <fs_rfcdes>
            TO <field>.
            CONDENSE <field>.
            IF sy-subrc <> 0.
              EXIT.
            ENDIF.
            IF ( <field> IS INITIAL ) OR
              ( <field> EQ ',' ).
              <field> = 'NULL'.
            ENDIF.
            IF sy-index EQ 1.
              ls_output = <field>.
            ELSE.
              CONCATENATE ls_output <field> INTO ls_output
              SEPARATED BY lc_sep.
            ENDIF.
          ENDDO.

          CONDENSE ls_output.
          APPEND ls_output TO ft_output.
          CLEAR: ls_output.
        ENDLOOP.

      ELSE.

        CLEAR: ls_output.
        " No data found
        ls_output = lc_msg.
        APPEND ls_output TO ft_output.
        RETURN.

      ENDIF.

*   Begin of changes in V001
    WHEN OTHERS.
      " Incorrect input
      ls_output = lc_inc_input.
      APPEND ls_output TO ft_output.
      CLEAR ls_output.
*   End of changes in V001
  ENDCASE.

ENDFORM.