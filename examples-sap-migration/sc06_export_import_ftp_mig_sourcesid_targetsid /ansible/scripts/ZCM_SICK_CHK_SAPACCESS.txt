*---------------------------------------------------------------------*
* Program Name        :   ZCM_SICK_CHK_SAPACCESS                      *
* Title               :   Execute SICK transaction to determine the   *
*                     :   status of system                            *
* Purpose             :   This report is to execute SICK in order to  *
*                     :   determine the status of the system          *
*---------------------------------------------------------------------*
* Related Transaction OR Standard Program References                  *
* SICK/RSICC000                                                       *
*---------------------------------------------------------------------*
* Tables              :   SELECT    UPDATE      INSERT      DELETE    *
* XXXXX               :     X                                         *
*---------------------------------------------------------------------*
* Program Change History                                              *
*---------------------------------------------------------------------*
*Date        Version   Author       TR#/Local     Description         *
*---------------------------------------------------------------------*
*08-28-2019 Initial  Fathima Hussain  Local    To Execute SICK to     *
*                                             determine the status of *
*                                             the system              *
*10-27-2021  V001    Ashwini B G      Local   Changes done to remove  *
*                                             extra heading and un-   *
*                                            -wanted lines with hyphen*
*---------------------------------------------------------------------*

REPORT zcm_sick_chk_sapaccess.

LOAD-OF-PROGRAM.

FORM get_config
              TABLES lt_input  STRUCTURE tab512
                     lt_output STRUCTURE tab512.

* Begin of changes V001
  CONSTANTS: lc_not_found  TYPE c VALUE
             'No data found'                                 LENGTH 25,
             lc_empty_list TYPE c VALUE
             'The list object transported is empty'          LENGTH 50,
             lc_invalid    TYPE c VALUE 'Invalid list index' LENGTH 25,
             lc_fail_asci  TYPE c VALUE
             'Failed to convert to asci'                     LENGTH 25,
             lc_title      TYPE c VALUE 'SICK'               LENGTH 4.
* End of changes V001


  DATA : lt_list   TYPE STANDARD TABLE OF abaplist,
         lt_ascii  TYPE STANDARD TABLE OF soli,
         ls_ascii  TYPE soli,
         ls_output TYPE tab512.


*Execute SICK and retrieve the details of the system's current status
* Begin of changes V001
  ls_output = lc_title.
  APPEND ls_output TO lt_output.
  CLEAR: ls_output.
* End of changes V001

  SUBMIT rsicc000
    EXPORTING LIST TO MEMORY
      AND RETURN.

  CALL FUNCTION 'LIST_FROM_MEMORY'
    TABLES
      listobject = lt_list
    EXCEPTIONS
      not_found  = 1
      OTHERS     = 2.

  IF sy-subrc = 0.

    CALL FUNCTION 'LIST_TO_ASCI'
      TABLES
        listasci           = lt_ascii
        listobject         = lt_list
      EXCEPTIONS
        empty_list         = 1
        list_index_invalid = 2
        OTHERS             = 3.

    IF sy-subrc = 0.

      CLEAR: ls_ascii,ls_output. " +V001
      LOOP AT lt_ascii INTO ls_ascii.
* Begin of changes V001
        REPLACE ALL OCCURRENCES OF '-' IN ls_ascii WITH ''.
        REPLACE ALL OCCURRENCES OF '|' IN ls_ascii WITH ''.
        IF ls_ascii IS NOT INITIAL.
* End of changes V001
          ls_output = ls_ascii.
          APPEND ls_output TO lt_output.
* Begin of changes V001
        ENDIF.
        CLEAR: ls_ascii,ls_output.
* End of changes V001
      ENDLOOP.

* Begin of changes V001
    ELSEIF sy-subrc EQ 1.

      ls_output = lc_empty_list.
      APPEND ls_output TO lt_output.
      CLEAR ls_output.
      RETURN.

    ELSEIF sy-subrc EQ 2.

      ls_output = lc_invalid.
      APPEND ls_output TO lt_output.
      CLEAR ls_output.
      RETURN.

    ELSE.

      ls_output = lc_fail_asci.
      APPEND ls_output TO lt_output.
      CLEAR ls_output.
      RETURN.

* End of changes V001

    ENDIF.

* Begin of changes V001
  ELSE.

    ls_output = lc_not_found.
    APPEND ls_output TO lt_output.
    CLEAR ls_output.
    RETURN.

* End of changes V001

  ENDIF.

ENDFORM.