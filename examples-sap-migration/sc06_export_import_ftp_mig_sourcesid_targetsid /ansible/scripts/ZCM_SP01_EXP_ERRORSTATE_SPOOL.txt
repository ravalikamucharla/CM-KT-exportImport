*---------------------------------------------------------------------*
* Program Name        : ZCM_SP01_EXP_ERRORSTATE_SPOOL                 *
* Title               : Logical Systems                               *
* Purpose             : This report is used to export errornous spool *
*                       request details( tcode:SP01)                  *
*---------------------------------------------------------------------*
* Related Transaction OR Standard Program References                  *
* SP01                                                                *
*---------------------------------------------------------------------*
* Tables              :   SELECT    UPDATE      INSERT      DELETE    *
* TSP03D                    X                                         *
*---------------------------------------------------------------------*
* Program Change History                                              *
*---------------------------------------------------------------------*
*Date        Version   Author       TR#/Local     Description         *
*---------------------------------------------------------------------*
*09-22-2020  Initial  Soumya Ray      Local       This report is used *
*                                                 to export errornous *
*                                                 spool req details   *
*09-27-2022  V001     Yasaswini K     Local       To pass "No data    *
*                                                 found" in case no   *
*                                                 data present        *
*10-20-2022  V002     Soumya Ray      Local       To make code compati*
*                                               ble with lower version*
*---------------------------------------------------------------------*
REPORT zcm_sp01_exp_errorstate_spool.

LOAD-OF-PROGRAM.

FORM get_config
              TABLES ft_input  STRUCTURE tab512
                     ft_output STRUCTURE tab512.

  CONSTANTS: lc_sep        TYPE c       VALUE '|',
             lc_export     TYPE char20   VALUE 'EXPORT',
             lc_msg        TYPE string VALUE 'Spoolrequest',
             lc_msg_nodata TYPE string VALUE 'No data found',
             lc_rqnone     LIKE  rspotype-mode VALUE 'X',
             lc_rqproc     LIKE  rspotype-mode VALUE 'X',
             lc_rqsucc     LIKE  rspotype-mode VALUE 'X',
             lc_rqerr      LIKE  rspotype-mode VALUE 'X',
             lc_access     LIKE  authb-spoaction VALUE 'BASE',
             lc_proto      LIKE rspotype-mode VALUE '',
             lc_nonexdev   LIKE rspotype-mode VALUE '',
             lc_client     TYPE char30 VALUE 'Client',
             lc_spno       TYPE char30 VALUE 'Spoolno',
             lc_outno      TYPE char30 VALUE 'Outpreqno.',
             lc_user       TYPE char30 VALUE 'User',
             lc_date       TYPE char30 VALUE 'Date',
             lc_time       TYPE char30 VALUE 'Time',
             lc_odev       TYPE char30 VALUE 'Odev',
             lc_format     TYPE char30 VALUE 'Format',
             lc_text       TYPE char30 VALUE  'Statustext',
             lc_page       TYPE char30 VALUE  'Page',
             lc_status     TYPE char30 VALUE 'Status',
             lc_title      TYPE char30 VALUE  'Title',
* Begin of changes in V001
             lc_noinput    TYPE c      VALUE
             'No input passed'                            LENGTH 15,
             lc_inc_input  TYPE c      VALUE
             'Incorrect Input'                            LENGTH 20.
* End of changes in V001

  TYPES: BEGIN OF lty_spool,
           rqclient   TYPE char3,
           pjident    TYPE char10,
           pjnummer   TYPE char5,
           pjowner    TYPE rspouser,
           pjdate     TYPE char10,
           pjtime     TYPE char5,
           pjdest     TYPE char4,
           pjpaper    TYPE char16,
           pjtext     TYPE string,
           rqstatus_v TYPE string,
           rqpages_v  TYPE char10,
           rqtitle_v  TYPE string,
         END OF lty_spool.

  DATA: ls_output    TYPE tab512,
        lv_pdate     TYPE sy-datum,
        lv_cdate     TYPE sy-datum,
        lv_action    TYPE char8,
        ls_prefinal  TYPE string,
        r_rqcred     TYPE TABLE OF rqcred_t,
        lv_rqcred    LIKE LINE OF r_rqcred,
        lt_tsp01     TYPE STANDARD TABLE OF tsp01sys,
        lv_no_access LIKE  tsp01-rqident,
        lv_access    LIKE  tsp01-rqident,
        lt_reqview   TYPE sp01r_tview,
        lt_tsp02     TYPE STANDARD TABLE OF tsp02,
        lt_spool     TYPE TABLE OF lty_spool,
        ls_spool     TYPE lty_spool,
        lt_outrq     TYPE sp01r_toview WITH HEADER LINE,
        lt_outrq1    TYPE  sp01r_tsp02,
* Begin of changes in V001
        ls_input     TYPE tab512,
        ls_view      TYPE sp01r_view,
        ls_outrq     TYPE sp01r_oview.
* End of changes in V001

  FIELD-SYMBOLS: <fs_ftsp01>  TYPE sp01r_tsp01,
                 <fs_fsporq>  TYPE sp01r_tview,
                 <fs_ftsp02>  TYPE sp01r_tsp02,
                 <fs_foutrq2> TYPE sp01r_toview.

  " Title
  ls_output = lc_msg.
  APPEND ls_output TO ft_output.
  CLEAR: ls_output.


  READ TABLE ft_input INTO ls_input INDEX 1.

* Begin of changes in V001
  IF sy-subrc NE 0.
    ls_output = lc_noinput.
    APPEND ls_output TO ft_output.
    CLEAR ls_output.
    RETURN.
  ENDIF.
* End of changes in V001

  SPLIT ls_input AT lc_sep INTO lv_action
                                lv_pdate
                                lv_cdate.

  CASE lv_action.

    WHEN lc_export.
*      condition is executed when date is not specified in input
      IF lv_pdate EQ '' AND lv_cdate EQ ''.
        lv_cdate = sy-datum.
        lv_pdate = lv_cdate - 7.
      ENDIF.
      lv_rqcred-option = 'BT'.
      lv_rqcred-sign = 'I'.
      lv_rqcred-low = lv_pdate.
      lv_rqcred-high = lv_cdate.
      APPEND lv_rqcred TO r_rqcred.

*    To get spool request in specific date range and client
      CALL FUNCTION 'RSPO_L_RSELECT_SPOOLREQS'
        EXPORTING
          rqnone       = lc_rqnone
          rqproc       = lc_rqproc
          rqsucc       = lc_rqsucc
          rqerr        = lc_rqerr
          access       = lc_access
          proto        = lc_proto
          nonex_dev    = lc_nonexdev
        IMPORTING
          rq_no_access = lv_no_access
          rq_access    = lv_access
        TABLES
          s_rqcred     = r_rqcred
          result_tsp01 = lt_tsp01
        EXCEPTIONS
          OTHERS       = 1.

      IF NOT lt_tsp01 IS INITIAL.

        ASSIGN lt_tsp01[] TO <fs_ftsp01>.
        ASSIGN lt_reqview[] TO <fs_fsporq>.

*    Code from FORM: refresh_spo FUNC :SPOOL_SP01R
*    function module fetches the extended list of status of all spool.
        CALL FUNCTION 'RSPO_RSPOOLREQ_LIST_TO_VIEW'
          TABLES
            requests = <fs_ftsp01>
            req_view = <fs_fsporq>
          EXCEPTIONS
            OTHERS   = 1.
        IF NOT lt_reqview IS INITIAL.
*  Internal table loops entry for error spool
          LOOP AT lt_reqview INTO ls_view.
            IF ls_view-rqstatus_v NE '   -' OR
               ls_view-rqstatus_v NE 'Compl.'.

              SELECT * FROM tsp02
                INTO TABLE lt_tsp02
                WHERE pjident = ls_view-rqident.
              IF sy-subrc EQ 0.
*              MOVE-CORRESPONDING lt_tsp02 TO lt_outrq1[]. "-V002
                lt_outrq1[] = lt_tsp02[]. "+V002
                ASSIGN lt_outrq1[] TO <fs_ftsp02>.
                ASSIGN lt_outrq[] TO <fs_foutrq2>.

*     Code from FORM: refresh_out FUNC :SPOOL_SP01R
*      function module fetches the extended list of status( errornous)
                CALL FUNCTION 'RSPO_ROUTREQ_LIST_TO_VIEW'
                  TABLES
                    requests = <fs_ftsp02>
                    req_view = <fs_foutrq2>
                  EXCEPTIONS
                    OTHERS   = 1.
                LOOP AT lt_outrq INTO ls_outrq.
                  ls_spool-rqclient = ls_view-rqclient.
                  ls_spool-pjident  =  ls_outrq-pjident.
                  ls_spool-pjnummer = ls_outrq-pjnummer.
                  ls_spool-pjowner  = ls_outrq-pjowner.
                  ls_spool-pjdate   = ls_outrq-pjdate.
                  ls_spool-pjtime   = ls_outrq-pjtime.
                  ls_spool-pjdest   = ls_outrq-pjdest.
                  ls_spool-pjpaper  = ls_outrq-pjpaper.
                  ls_spool-pjtext   = ls_outrq-pjtext.
                  ls_spool-rqstatus_v = ls_view-rqstatus_v.
                  ls_spool-rqpages_v  = ls_view-rqpages_v .
                  ls_spool-rqtitle_v  = ls_view-rqtitle_v .
                  APPEND ls_spool TO lt_spool.
                  CLEAR: ls_spool, ls_outrq.
                  .
                ENDLOOP.
              ENDIF.
              CLEAR: ls_view.
            ENDIF.
          ENDLOOP.
        ENDIF.
      ENDIF.

      IF lt_spool IS INITIAL.
        ls_output = lc_msg_nodata.
        APPEND ls_output TO ft_output.

      ELSE.
        " Header text
        CONCATENATE lc_client lc_sep
                    lc_spno lc_sep
                    lc_outno lc_sep
                    lc_user  lc_sep
                    lc_date  lc_sep
                    lc_time lc_sep
                    lc_odev  lc_sep
                    lc_format lc_sep
                    lc_text  lc_sep
                    lc_status lc_sep
                    lc_page  lc_sep
                    lc_title INTO ls_output.
        APPEND ls_output TO ft_output.
        CLEAR ls_output.

        LOOP AT lt_spool INTO ls_spool.

          CONCATENATE ls_spool-rqclient   lc_sep
                      ls_spool-pjident    lc_sep
                      ls_spool-pjnummer  lc_sep
                      ls_spool-pjowner  lc_sep
                      ls_spool-pjdate   lc_sep
                      ls_spool-pjtime   lc_sep
                      ls_spool-pjdest   lc_sep
                      ls_spool-pjpaper  lc_sep
                      ls_spool-pjtext   lc_sep
                      ls_spool-rqstatus_v lc_sep
                      ls_spool-rqpages_v lc_sep
                      ls_spool-rqtitle_v  INTO ls_prefinal.
          CONDENSE ls_prefinal.
          PERFORM end_null_check CHANGING ls_prefinal.
          ls_output = ls_prefinal.
          APPEND ls_output TO ft_output.
          CLEAR: ls_output, ls_spool.

        ENDLOOP.
      ENDIF.

      PERFORM null_check TABLES  ft_output.

* Begin of changes in V001
    WHEN OTHERS.
      ls_output = lc_inc_input. "Incorrect input
      APPEND ls_output TO ft_output.
      CLEAR ls_output.
*  End of changes in V001

  ENDCASE.
  CLEAR: lt_spool, lt_tsp01, lt_reqview.

ENDFORM.

FORM end_null_check  CHANGING ls_string TYPE string.

  DATA lv_last_char TYPE char1.

  lv_last_char = substring( val = ls_string
                   off = strlen( ls_string ) - 1
                   len = 1 ).
  IF lv_last_char = '|'.
    CONCATENATE ls_string 'NULL'
      INTO ls_string.
  ENDIF.

ENDFORM.

FORM null_check TABLES lt_table TYPE table.

  DO .
    REPLACE ALL OCCURRENCES OF SUBSTRING '||'
    IN TABLE lt_table WITH '|NULL|'.
    FIND '||' IN TABLE lt_table.
    IF sy-subrc <> 0.
      EXIT .
    ENDIF.
  ENDDO.

ENDFORM.