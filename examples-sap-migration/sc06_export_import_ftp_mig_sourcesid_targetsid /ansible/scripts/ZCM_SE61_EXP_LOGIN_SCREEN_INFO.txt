*---------------------------------------------------------------------*
* Program Name        :   ZCM_SE61_EXP_LOGIN_SCREEN_INFO              *
* Title               :   Capture Login Screen Info in SE61           *
* Purpose             :   This report is used to capture login screen *
*                         info in SE61 during Cloud Migration         *
*---------------------------------------------------------------------*
* Related Transaction OR Standard Program References                  *
* SE61                                                                *
*---------------------------------------------------------------------*
* Tables              :   SELECT    UPDATE      INSERT      DELETE    *
* XXXXX                     X                                         *
*---------------------------------------------------------------------*
* Program Change History                                              *
*---------------------------------------------------------------------*
*Date        Version   Author       TR#/Local     Description         *
*---------------------------------------------------------------------*
*02-26-2021  Initial   Ruchir Kamble  Local      To Capture Login     *
*                                                 Screen Info         *
*08-16-2022  V001      Soumya Ray     Local      Remove inline declara*
*                                                tions for lower versi*
*                                                on compatibility     *
*---------------------------------------------------------------------*

REPORT zcm_se61_exp_login_screen_info.

LOAD-OF-PROGRAM.

FORM get_config
              TABLES lt_input  STRUCTURE tab512
                     lt_output STRUCTURE tab512.

  CONSTANTS:
    lc_sep        TYPE c VALUE '|'                        LENGTH 1,
    lc_export     TYPE c VALUE 'EXPORT'                   LENGTH 6,
    lc_msg        TYPE c VALUE 'Message'                  LENGTH 7,
    lc_title      TYPE c VALUE 'Login Screen Information' LENGTH 25,
    lc_inc_input  TYPE c VALUE 'Incorrect input'          LENGTH 20,
    lc_noinput    TYPE c VALUE 'No input given'           LENGTH 20,
    lc_no_docname TYPE c VALUE 'No document name given'   LENGTH 25,
    lc_err_msg    TYPE c VALUE 'No data found'            LENGTH 20,
    lc_msg1       TYPE c VALUE 'No document on screen'    LENGTH 25,
    lc_msg2       TYPE c VALUE
    'No document self definition'                         LENGTH 30,
    lc_msg3       TYPE c VALUE
    'No document in temp folder'                          LENGTH 30,
    lc_msg4       TYPE c VALUE 'No module found'          LENGTH 25,
    lc_msg5       TYPE c VALUE
    'Reading of login screen info failed'                 LENGTH 50.

  DATA: ls_output    TYPE tab512,
        lv_action    TYPE char6,
        lv_doc_name  TYPE dokhl-object,
        lt_tab_texts TYPE TABLE OF tline,
        lv_msg       TYPE string,
        lv_subrc     TYPE char4,
*  Begin of changes in V001
        ls_tab_texts TYPE tline,
        ls_input     TYPE tab512.

  FIELD-SYMBOLS: <fs_output> TYPE any.
*  End of changes in V001

  " Clearing variables before use
  CLEAR: ls_output, lv_action, lv_doc_name.

  FREE: lt_output, lt_tab_texts.

  " Adding title to the output
  ls_output = lc_title.
  APPEND ls_output TO lt_output.
  CLEAR ls_output.

  READ TABLE lt_input INTO ls_input INDEX 1.
  IF sy-subrc EQ 0.
    SPLIT ls_input AT lc_sep INTO
    lv_action               " Action
    lv_doc_name.            " Document name
  ELSE.
    " No input given
    ls_output = lc_noinput.
    APPEND ls_output TO lt_output.
    CLEAR ls_output.
    RETURN.
  ENDIF.

  CASE lv_action.

    WHEN lc_export.               " When action is EXPORT

      IF lv_doc_name IS INITIAL.
        " No document name given
        ls_output = lc_no_docname.
        APPEND ls_output TO lt_output.
        CLEAR ls_output.

      ELSE.

        " FM to read Login Screen Info from SE61
        CALL FUNCTION 'DOCU_GET'
          EXPORTING
            id                = 'TX'
            langu             = sy-langu
            object            = lv_doc_name
          TABLES
            line              = lt_tab_texts
          EXCEPTIONS
            no_docu_on_screen = 1
            no_docu_self_def  = 2
            no_docu_temp      = 3
            ret_code          = 4
            OTHERS            = 5.

        IF sy-subrc EQ 0.

          IF lt_tab_texts IS NOT INITIAL.

            ls_output = lc_msg.
            APPEND ls_output TO lt_output.
            CLEAR ls_output.

            LOOP AT lt_tab_texts INTO ls_tab_texts.
              IF ls_tab_texts-tdline IS NOT INITIAL.
                ls_output = ls_tab_texts-tdline.
                APPEND ls_output TO lt_output.
                CLEAR: ls_output, ls_tab_texts.
              ENDIF.

            ENDLOOP.

          ELSE.
            " No data found
            ls_output = lc_err_msg.
            APPEND ls_output TO lt_output.
            CLEAR ls_output.

          ENDIF.

        ELSE.

          CLEAR: lv_subrc.
          lv_subrc = sy-subrc.
          CONCATENATE 'lc_msg' lv_subrc INTO lv_msg.
          CONDENSE lv_msg NO-GAPS.
* Begin of changes V001
          ASSIGN (lv_msg) TO <fs_output>.
          IF <fs_output> IS ASSIGNED.
            ls_output = <fs_output>.
          ENDIF.
* End of changes V001
          APPEND ls_output TO lt_output.
          CLEAR: ls_output.

        ENDIF.

      ENDIF.

    WHEN OTHERS.
      " Incorrect input
      ls_output = lc_inc_input.
      APPEND ls_output TO lt_output.
      CLEAR ls_output.

  ENDCASE.
ENDFORM.