*---------------------------------------------------------------------*
* Program Name        :   ZCM_DB02_EXP_HOSTS_SERVICES                 *
* Title               :   Hosts and Services                          *
* Purpose             :   This report is used to export Hosts and     *
*                         services data from DB02                     *
*---------------------------------------------------------------------*
* Related Transaction OR Standard Program References                  *
* DB02                                                                *
*---------------------------------------------------------------------*
* Tables              :   SELECT    UPDATE      INSERT      DELETE    *
* XXXXXX                    X                                         *
*---------------------------------------------------------------------*
* Program Change History                                              *
*---------------------------------------------------------------------*
*Date        Version   Author       TR#/Local     Description         *
*---------------------------------------------------------------------*
*12-06-2021  Initial   Yasaswini K   Local       To Export Host and   *
*                                                Services Data        *
*09-08-2022  V001     Soumya Ray     Local   To pass message "No data *
*                                            found" in case of no data*
*                                            found in sytem           *
*---------------------------------------------------------------------*
REPORT zcm_db02_exp_hosts_services.

LOAD-OF-PROGRAM.

FORM get_config
              TABLES lt_input  STRUCTURE tab512
                     lt_output STRUCTURE tab512.

  CONSTANTS: lc_hostname                   TYPE c VALUE
             'net_realhostname'                              LENGTH 20,
             lc_export                     TYPE c VALUE
             'EXPORT'                                        LENGTH 6,
             lc_sep                        TYPE c VALUE
             '|'                                             LENGTH 1,
             lc_inc_input                  TYPE c VALUE
             'Incorrect input'                               LENGTH 20,
             lc_null                       TYPE c VALUE
             'NULL'                                          LENGTH 4,
             lc_key                        TYPE c VALUE
             'KEY'                                           LENGTH 3,
             lc_publicname                 TYPE c VALUE
             'net_publicname'                                LENGTH 20,
             lc_host                       TYPE c VALUE
             'Host'                                          LENGTH 4,
             lc_net_realhostname           TYPE c VALUE
             'netrealhostname'                               LENGTH 30,
             lc_hostactive                 TYPE c VALUE
             'Hostactive'                                    LENGTH 20,
             lc_hoststatus                 TYPE c VALUE
             'HostStatus'                                    LENGTH 12,
             lc_netpublicname              TYPE c VALUE
             'netpublicname'                                 LENGTH 20,
             lc_failstatus                 TYPE c VALUE
             'FailoverStatus'                                LENGTH 20,
             lc_actual                     TYPE c VALUE
             'Nameserveractualrole'                          LENGTH 30,
             lc_resolved                   TYPE c VALUE
             'Resolvedhostname'                              LENGTH 30,
             lc_namerole                   TYPE c VALUE
             'NameserverConfigRole'                          LENGTH 30,
             lc_indexrole                  TYPE c VALUE
             'IndexserverConfigRole'                         LENGTH 30,
             lc_indexactual                TYPE c VALUE
             'IndexserverActualRole'                         LENGTH 30,
             lc_storage                    TYPE c VALUE
             'StoragePartition'                              LENGTH 20,
             lc_remove                     TYPE c VALUE
             'RemoveStatus'                                  LENGTH 20,
             lcfailgroup                   TYPE c VALUE
             'FailoverGroup'                                 LENGTH 20,
             lc_failconfig                 TYPE c VALUE
             'FailoverConfigGroup'                           LENGTH 30,
             lc_failactual                 TYPE c VALUE
             'FailoverActualGroup'                           LENGTH 30,
             lc_removestatus               TYPE c VALUE
             'Removestatus'                                  LENGTH 20,
             lc_title                      TYPE c VALUE
             'DB02 Services'                                 LENGTH 20,
             lc_num                        TYPE c VALUE
             ' .1234567890'                                  LENGTH 15,
             lc_title1                     TYPE c VALUE
             'DB02 Hosts'                                    LENGTH 20,
             lc_port                       TYPE c VALUE
             'Port'                                          LENGTH 30,
             lc_servicename                TYPE c VALUE
             'ServiceName'                                   LENGTH 30,
             lc_activestatus               TYPE c VALUE
             'ActiveStatus'                                  LENGTH 30,
             lc_processid                  TYPE c VALUE
             'ProcessID'                                     LENGTH 30,
             lc_detail                     TYPE c VALUE
             'Detail'                                        LENGTH 30,
             lc_sqlport                    TYPE c VALUE
             'SQLPort'                                       LENGTH 30,
             lc_starttime                  TYPE c VALUE
             'StartTime'                                     LENGTH 30,
             lc_processcpu                 TYPE c VALUE
             'ProcessCPU'                                    LENGTH 30,
             lc_totalcpu                   TYPE c VALUE
             'TotalCPU'                                      LENGTH 30,
             lc_processmemory              TYPE c VALUE
             'ProcessMemory(GB)'                             LENGTH 30,
             lc_totalmemory                TYPE c VALUE
             'TotalMemory(GB)'                               LENGTH 30,
             lc_availablememory            TYPE c VALUE
             'AvailableMemory'                               LENGTH 30,
             lc_physicalmemory             TYPE c VALUE
             'PhysicalMemory(GB)'                            LENGTH 30,
             lc_processphysicalmemory      TYPE c VALUE
             'ProcessPhysicalMemory(GB)'                     LENGTH 30,
             lc_totalmemoryused            TYPE c VALUE
             'TotalMemoryUsedSize(GB)'                       LENGTH 30,
             lc_effectiveallocation        TYPE c VALUE
             'EffectiveAllocationLimit (GB)'                 LENGTH 30,
             lc_requestspersec             TYPE c VALUE
             'RequestsPerSec'                                LENGTH 30,
             lc_heapmemoryused             TYPE c VALUE
             'HeapMemoryUsedSize'                            LENGTH 30,
             lc_sharedmemoryused           TYPE c VALUE
             'SharedMemoryUsedSize'                          LENGTH 30,
             lc_responsetime               TYPE c VALUE
             'ResponseTime'                                  LENGTH 30,
             lc_noinput                    TYPE c VALUE
             'No input given'                                LENGTH 20,
             lc_finishednoninternalrequest TYPE c VALUE
             'FinishedNonInternalRequestCount'               LENGTH 50,
             lc_allfinishedrequests        TYPE c VALUE
             'AllFinishedRequests'                           LENGTH 30,
             lc_activerequests             TYPE c VALUE
             'ActiveRequests'                                LENGTH 30,
             lc_pendingrequests            TYPE c VALUE
             'PendingRequests'                               LENGTH 30,
             lc_allocationlimit            TYPE c VALUE
             'AllocationLimit(GB)'                           LENGTH 30,
             lc_codesize                   TYPE c VALUE
             'CodeSize'                                      LENGTH 30,
             lc_stacksize                  TYPE c VALUE
             'StackSize'                                     LENGTH 30,
             lc_heapmemoryallocatedsize    TYPE c VALUE
             'HeapMemoryAllocatedSize'                       LENGTH 30,
             lc_sharedmemoryallocatedsize  TYPE c VALUE
             'Shared Memory Allocated Size'                  LENGTH 30,
             lc_compactorsallocatedsize    TYPE c VALUE
             'CompactorsAllocatedSize'                       LENGTH 30,
             lc_active                     TYPE c VALUE
             'Active'                                        LENGTH 6,
             lc_yes                        TYPE c VALUE
             'YES'                                           LENGTH 3,
             lc_no                         TYPE c VALUE
             'NO'                                            LENGTH 2,
             lc_inactive                   TYPE c VALUE
             'Inactive'                                      LENGTH 8,
             lc_compactorsfreeablesize     TYPE c VALUE
             'CompactorsFreeableSize'                        LENGTH 30,
* Begin of changes in V001
             lc_nodata                     TYPE c VALUE
             'No data found'                                 LENGTH 20.
* End of changes in V001


  DATA: lv_sys_id                      TYPE sy-sysid,
        lr_exec                        TYPE REF TO cx_db6_sys,
        lr_serv                        TYPE REF TO cx_dba_adbc,
        lr_rdi                         TYPE REF TO cl_dba_rdi,
        lr_dba                         TYPE REF TO cx_dba_rdi,
        lv_key                         TYPE string,
        lv_port                        TYPE string,
        lv_active                      TYPE string,
        lv_process_cpu                 TYPE string,
        ls_output                      TYPE tab512,
        lv_exe_msg                     TYPE string,
        lv_realhostname                TYPE string,
        lv_publicname                  TYPE string,
        lv_storage_partition           TYPE string,
        lv_nodeaddr                    TYPE ni_nodeaddr,
        lv_hostname                    TYPE ni_hostname,
        lt_value                       TYPE STANDARD TABLE OF string,
        lt_host_information            TYPE STANDARD TABLE OF
        hdb_m_host_information,
        lt_services                    TYPE
        hdb_resource_utilization_tab,
        ls_services                    TYPE hdb_resource_utilization,
        ls_host_information            TYPE hdb_m_host_information,
        lt_landscape_host_config       TYPE STANDARD TABLE OF
                                   hdb_m_landscape_host_config,
        ls_landscape_host_config       TYPE hdb_m_landscape_host_config,
        lo_sys                         TYPE REF TO cl_db6_sys,
        lv_process_id                  TYPE string,
        lv_sql_port                    TYPE string,
        lv_total_cpu                   TYPE string,
        lv_process_memory              TYPE string,
        lv_total_memory                TYPE string,
        lv_available_memory            TYPE string,
        lv_physical_memory             TYPE string,
        lv_process_physical_memory     TYPE string,
        lv_total_memory_used_size      TYPE string,
        lv_effective_allocation_limit  TYPE string,
        ls_input                       TYPE tab512,
        lv_action                      TYPE char6,
        lv_requests_per_sec            TYPE string,
        lv_heap_memory_used_size       TYPE string,
        lv_shared_memory_used_size     TYPE string,
        lv_response_time               TYPE string,
        lv_finished_nonrequests        TYPE string,
        lv_all_finished_requests       TYPE string,
        lv_active_requests             TYPE string,
        lv_pending_requests            TYPE string,
        lv_allocation_limit            TYPE string,
        lv_code_size                   TYPE string,
        lv_stack_size                  TYPE string,
        lv_heap_memory_allocated_size  TYPE string,
        lv_shared_memory_allocatedsize TYPE string,
        lv_compactors_allocated_size   TYPE string,
        lv_compactors_freeable_size    TYPE string.

  CLEAR: ls_output, ls_services, lv_port, lv_process_id ,
         lv_sql_port, lv_process_cpu, lv_total_cpu,
         lv_process_memory,
         lv_total_memory, lv_available_memory, lv_physical_memory,
         lv_process_physical_memory, lv_total_memory_used_size,
         lv_effective_allocation_limit,lv_requests_per_sec,
         lv_heap_memory_used_size, lv_shared_memory_used_size,
         lv_response_time, lv_finished_nonrequests,
         lv_all_finished_requests, lv_active_requests,
         lv_pending_requests, lv_allocation_limit, lv_code_size,
         lv_stack_size, lv_heap_memory_allocated_size,
         lv_shared_memory_allocatedsize,
         lv_compactors_allocated_size,
         lv_compactors_freeable_size.

  FREE: lt_value, lt_host_information, lt_services,
        lt_landscape_host_config.

  " Adding title to the output
  ls_output = lc_title.
  APPEND ls_output TO lt_output.
  CLEAR ls_output.

  READ TABLE lt_input INTO ls_input INDEX 1.
  IF sy-subrc EQ 0.
    lv_action = ls_input.              " Action
  ELSE.
    " No input given
    ls_output = lc_noinput.
    APPEND ls_output TO lt_output.
    CLEAR ls_output.
    RETURN.
  ENDIF.

  CASE lv_action.

    WHEN lc_export.               " When action is EXPORT

      lv_sys_id = sy-sysid. "System ID

      TRY .
          cl_db6_sys=>get_sys_ref(
          EXPORTING
          system_id     = lv_sys_id
          RECEIVING
          sys_ref       = lo_sys        ).

        CATCH cx_db6_sys INTO lr_exec.
          lv_exe_msg = lr_exec->get_text( ).
          ls_output =  lv_exe_msg.
          APPEND ls_output TO lt_output.
          CLEAR ls_output.
          RETURN.
      ENDTRY.

      IF lo_sys IS BOUND.

        "Fetch Host Data
        APPEND lc_hostname     TO lt_value.
        APPEND lc_publicname   TO lt_value.

        lv_key = lc_key.

        TRY .
            lr_rdi = cl_dba_rdi=>get_instance( lo_sys ).
          CATCH cx_dba_rdi INTO lr_dba.
            lv_exe_msg = lr_dba->get_text( ).
            ls_output =  lv_exe_msg.
            APPEND ls_output TO lt_output.
            CLEAR ls_output.
            RETURN.

        ENDTRY.

        lr_rdi->query->set_filter( ddic_field  = lv_key
                                    value      = lt_value
                                    operator   =
                                    cl_dba_rdi_query=>co_op_in ).

        TRY.
            lr_rdi->query->get_snapshot(
            EXPORTING
              ddic_src = cl_hdb_rdi_meta=>co_ddic_m_host_information
            IMPORTING
              data     = lt_host_information ).

          CATCH cx_dba_adbc INTO lr_serv.
            lv_exe_msg = lr_serv->get_text( ).
            ls_output =  lv_exe_msg.
            APPEND ls_output TO lt_output.
            CLEAR ls_output.
            RETURN.
        ENDTRY.

        lr_rdi->query->reset( ).

        TRY .
            lr_rdi->query->get_snapshot(
            EXPORTING
              ddic_src = cl_hdb_rdi_meta=>co_ddic_m_landscape_host_confg
            IMPORTING
              data     = lt_landscape_host_config ).

          CATCH cx_dba_adbc INTO lr_serv.
            lv_exe_msg = lr_serv->get_text( ).
            ls_output =  lv_exe_msg.
            APPEND ls_output TO lt_output.
            CLEAR ls_output.
            RETURN.
        ENDTRY.

        IF lt_landscape_host_config IS NOT INITIAL.

          CONCATENATE lc_host                 lc_sep
                      lc_net_realhostname     lc_sep
                      lc_hostactive           lc_sep
                      lc_hoststatus           lc_sep
                      lc_netpublicname        lc_sep
                      lc_failstatus           lc_sep
                      lc_actual               lc_sep
                      lc_resolved             lc_sep
                      lc_namerole             lc_sep
                      lc_indexrole            lc_sep
                      lc_indexactual          lc_sep
                      lc_storage              lc_sep
                      lc_remove               lc_sep
                      lcfailgroup             lc_sep
                      lc_failconfig           lc_sep
                      lc_failactual           lc_sep
                      lc_removestatus
                      INTO ls_output.
          APPEND ls_output TO lt_output.
          CLEAR: ls_output.

          LOOP AT lt_landscape_host_config INTO
            ls_landscape_host_config.

            READ TABLE lt_host_information INTO ls_host_information
            WITH KEY key = lc_hostname.
            IF sy-subrc = 0.
              lv_realhostname = ls_host_information-value.
            ENDIF.

            READ TABLE lt_host_information INTO ls_host_information
            WITH KEY key = lc_publicname.
            IF sy-subrc = 0.
              lv_publicname = ls_host_information-value.
            ENDIF.

            IF lv_publicname IS NOT INITIAL AND
              lv_publicname CO lc_num.

              lv_nodeaddr = lv_publicname.

              CALL FUNCTION 'NI_ADDR_TO_NAME'
                EXPORTING
                  nodeaddr      = lv_nodeaddr
                IMPORTING
                  hostname      = lv_hostname
                EXCEPTIONS
                  ehost_unknown = 1
                  einval        = 2
                  etoo_small    = 3
                  OTHERS        = 4.

              IF sy-subrc = 0 AND lv_hostname IS NOT INITIAL.
                ls_landscape_host_config-resolved_hostname =
                lv_hostname.
              ENDIF.
            ENDIF.

            IF ls_landscape_host_config-remove_status IS INITIAL.
              ls_landscape_host_config-remove_status = lc_null.
            ENDIF.

            lv_storage_partition =
            ls_landscape_host_config-storage_partition.

            CONCATENATE ls_landscape_host_config-host         lc_sep
            lv_realhostname                                   lc_sep
            ls_landscape_host_config-host_active              lc_sep
            ls_landscape_host_config-host_status              lc_sep
            lv_publicname                                     lc_sep
            ls_landscape_host_config-failover_status          lc_sep
            ls_landscape_host_config-nameserver_actual_role   lc_sep
            ls_landscape_host_config-resolved_hostname        lc_sep
            ls_landscape_host_config-nameserver_config_role   lc_sep
            ls_landscape_host_config-indexserver_config_role  lc_sep
            ls_landscape_host_config-indexserver_actual_role  lc_sep
            lv_storage_partition                              lc_sep
            ls_landscape_host_config-remove_status            lc_sep
            ls_landscape_host_config-failover_group           lc_sep
            ls_landscape_host_config-failover_config_group    lc_sep
            ls_landscape_host_config-failover_actual_group    lc_sep
            ls_landscape_host_config-remove_status
            INTO ls_output.

            APPEND ls_output TO lt_output.
            CLEAR: ls_output, ls_landscape_host_config, lv_publicname,
            lv_storage_partition, ls_host_information.

          ENDLOOP.

        ELSE.
          "No data found
          ls_output = lc_nodata. "+V001
          APPEND ls_output TO lt_output.
          CLEAR: ls_output.
        ENDIF.

        "Fetch Service Data

        "Adding Blank Line
        APPEND ls_output TO lt_output.
        CLEAR ls_output.

        " Adding title to the output
        ls_output = lc_title1.
        APPEND ls_output TO lt_output.
        CLEAR ls_output.

        "Services
        lr_rdi->query->reset( ).

        TRY .
            lr_rdi->query->get_snapshot(
            EXPORTING
            ddic_src = cl_hdb_rdi_meta=>co_ddic_resource_utilization
            IMPORTING
            data     = lt_services ).

          CATCH cx_dba_adbc INTO lr_serv.
            lv_exe_msg = lr_serv->get_text( ).
            ls_output =  lv_exe_msg.
            APPEND ls_output TO lt_output.
            CLEAR ls_output.
            RETURN.

        ENDTRY.

        IF lt_services IS NOT INITIAL.

          CONCATENATE lc_active                       lc_sep
                      lc_host                         lc_sep
                      lc_port                         lc_sep
                      lc_servicename                  lc_sep
                      lc_activestatus                 lc_sep
                      lc_processid                    lc_sep
                      lc_detail                       lc_sep
                      lc_sqlport                      lc_sep
                      lc_starttime                    lc_sep
                      lc_processcpu                   lc_sep
                      lc_totalcpu                     lc_sep
                      lc_processmemory                lc_sep
                      lc_totalmemory                  lc_sep
                      lc_availablememory              lc_sep
                      lc_physicalmemory               lc_sep
                      lc_processphysicalmemory        lc_sep
                      lc_totalmemoryused              lc_sep
                      lc_effectiveallocation          lc_sep
                      lc_requestspersec               lc_sep
                      lc_heapmemoryused               lc_sep
                      lc_sharedmemoryused             lc_sep
                      lc_responsetime                 lc_sep
                      lc_finishednoninternalrequest   lc_sep
                      lc_allfinishedrequests          lc_sep
                      lc_activerequests               lc_sep
                      lc_pendingrequests              lc_sep
                      lc_allocationlimit              lc_sep
                      lc_codesize                     lc_sep
                      lc_stacksize                    lc_sep
                      lc_heapmemoryallocatedsize      lc_sep
                      lc_sharedmemoryallocatedsize    lc_sep
                      lc_compactorsallocatedsize      lc_sep
                      lc_compactorsfreeablesize
                      INTO ls_output.
          APPEND ls_output TO lt_output.
          CLEAR: ls_output.

          LOOP AT lt_services INTO ls_services.
            CASE ls_services-active_status.
              WHEN lc_yes.
                lv_active = lc_active.
              WHEN lc_no.
                lv_active = lc_inactive.
              WHEN OTHERS.
                lv_active = ls_services-active_status.
            ENDCASE.

            lv_port                      = ls_services-port.
            lv_process_id                = ls_services-process_id .
            lv_sql_port                  = ls_services-sql_port.
            lv_process_cpu               = ls_services-process_cpu.
            lv_total_cpu                 = ls_services-total_cpu.
            lv_process_memory            = ls_services-process_memory.
            lv_total_memory              = ls_services-total_memory.
            lv_available_memory          = ls_services-available_memory.
            lv_physical_memory           = ls_services-physical_memory.
            lv_process_physical_memory   =
            ls_services-process_physical_memory.
            lv_total_memory_used_size      =
            ls_services-total_memory_used_size.
            lv_effective_allocation_limit  =
            ls_services-effective_allocation_limit.
            lv_requests_per_sec            =
            ls_services-requests_per_sec.
            lv_heap_memory_used_size       =
            ls_services-heap_memory_used_size.
            lv_shared_memory_used_size     =
            ls_services-shared_memory_used_size.
            lv_response_time               = ls_services-response_time.
            lv_finished_nonrequests        =
            ls_services-finished_non_internal_requests.
            lv_all_finished_requests       =
            ls_services-all_finished_requests.
            lv_active_requests             =
            ls_services-active_requests.
            lv_pending_requests            =
            ls_services-pending_requests.
            lv_allocation_limit            =
            ls_services-allocation_limit.
            lv_code_size                   = ls_services-code_size.
            lv_stack_size                  = ls_services-stack_size.
            lv_heap_memory_allocated_size  =
            ls_services-heap_memory_allocated_size.
            lv_shared_memory_allocatedsize =
            ls_services-shared_memory_allocated_size.
            lv_compactors_allocated_size   =
            ls_services-compactors_allocated_size.
            lv_compactors_freeable_size    =
            ls_services-compactors_freeable_size.

            IF lv_compactors_freeable_size IS INITIAL.
              lv_compactors_freeable_size = lc_null.
            ENDIF.

            CONCATENATE
            lv_active                         lc_sep
            ls_services-host                  lc_sep
            lv_port                           lc_sep
            ls_services-service_name          lc_sep
            ls_services-active_status         lc_sep
            lv_process_id                     lc_sep
            ls_services-detail                lc_sep
            lv_sql_port                       lc_sep
            ls_services-start_time            lc_sep
            lv_process_cpu                    lc_sep
            lv_total_cpu                      lc_sep
            lv_process_memory                 lc_sep
            lv_total_memory                   lc_sep
            lv_available_memory               lc_sep
            lv_physical_memory                lc_sep
            lv_process_physical_memory        lc_sep
            lv_total_memory_used_size         lc_sep
            lv_effective_allocation_limit     lc_sep
            lv_requests_per_sec               lc_sep
            lv_heap_memory_used_size          lc_sep
            lv_shared_memory_used_size        lc_sep
            lv_response_time                  lc_sep
            lv_finished_nonrequests           lc_sep
            lv_all_finished_requests          lc_sep
            lv_active_requests                lc_sep
            lv_pending_requests               lc_sep
            lv_allocation_limit               lc_sep
            lv_code_size                      lc_sep
            lv_stack_size                     lc_sep
            lv_heap_memory_allocated_size     lc_sep
            lv_shared_memory_allocatedsize    lc_sep
            lv_compactors_allocated_size      lc_sep
            lv_compactors_freeable_size
            INTO ls_output.
            APPEND ls_output TO lt_output.

            CLEAR: ls_output, ls_services, lv_port, lv_process_id ,
            lv_sql_port, lv_process_cpu, lv_total_cpu,
            lv_process_memory,
            lv_total_memory, lv_available_memory, lv_physical_memory,
            lv_process_physical_memory, lv_total_memory_used_size,
            lv_effective_allocation_limit,lv_requests_per_sec,
            lv_heap_memory_used_size, lv_shared_memory_used_size,
            lv_response_time, lv_finished_nonrequests,
            lv_all_finished_requests, lv_active_requests,
            lv_pending_requests, lv_allocation_limit, lv_code_size,
            lv_stack_size, lv_heap_memory_allocated_size,
            lv_shared_memory_allocatedsize,
            lv_compactors_allocated_size,
            lv_compactors_freeable_size.

          ENDLOOP.

        ELSE.
          "No data found
          ls_output = lc_nodata. "+V001
          APPEND ls_output TO lt_output.
          CLEAR: ls_output.
        ENDIF.

      ENDIF.

    WHEN OTHERS.
      " Incorrect input
      ls_output = lc_inc_input.
      APPEND ls_output TO lt_output.
      CLEAR ls_output.

  ENDCASE.

  "Adding NULL values in between
  DO.
    REPLACE ALL OCCURRENCES OF SUBSTRING '||'
    IN TABLE lt_output WITH '|NULL|'.
    FIND '||' IN TABLE lt_output.
    IF sy-subrc <> 0.
      EXIT .
    ENDIF.
  ENDDO.
ENDFORM.