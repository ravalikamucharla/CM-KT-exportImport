*---------------------------------------------------------------------*
* Program Name        :   ZCM_SPAD_UPD_OPDEVICE_SERVER                *
* Title               :   Updating Spool servers for output Devices   *
* Purpose             :   This report is used to update spool servers *
*                     :   for output devices in SPAD                  *
*---------------------------------------------------------------------*
* Related Transaction OR Standard Program References                  *
* SPAD                                                                *
*---------------------------------------------------------------------*
* Tables              :   SELECT    UPDATE      INSERT      DELETE    *
* TSP03D                              X                               *
*---------------------------------------------------------------------*
* Program Change History                                              *
*---------------------------------------------------------------------*
*Date        Version   Author       TR#/Local     Description         *
*---------------------------------------------------------------------*
*03-09-2020 Initial Yasaswini K    Local      To Update Spool servers *
*09-09-2022  V001   Yasaswini K    Local      To remove dead code     *
*---------------------------------------------------------------------*
REPORT zcm_spad_upd_opdevice_server.
FORM get_config
              TABLES lt_input  STRUCTURE tab512
                     lt_output STRUCTURE tab512.

  CONSTANTS:
             lc_outputdev   TYPE char20 VALUE 'Output Device',
             lc_notavail    TYPE char20 VALUE 'is not available in',
             lc_spoolserver TYPE char20 VALUE 'Spool Server for',
             lc_success     TYPE char20 VALUE 'updated Successfully',
             lc_header      TYPE char80 VALUE
             'Output Devices Restore',
             lc_err_msg     TYPE char80     VALUE
             'NoSLDAccessentriestorestore',
             lc_sep         TYPE c      VALUE '|'  LENGTH 1,
             lc_null        TYPE c      VALUE 'NULL' LENGTH 4,
             lc_lock_type   TYPE c      VALUE 'E' LENGTH 1,
             lc_spadtab     TYPE char20 VALUE 'SPAD',
             lc_del         TYPE char8  VALUE 'DEL',
             lc_insert      TYPE c      VALUE 'I',
             lc_update      TYPE c      VALUE 'U',
             lc_delete      TYPE c      VALUE 'D',
             lc_delete_msg  TYPE char80    VALUE
            'Number of output devices deleted in SPAD: ',
             lc_lock_tbl1   TYPE rstable-tabname
                                  VALUE 'TSP03D',
             lc_lock_tbl    TYPE rstable-tabname
                                  VALUE 'TSP03C'.

  DATA: lv_action     TYPE char8,
        lv_lines      TYPE i,
        ls_input      TYPE tab512,
        ls_output     TYPE tab512,
        lv_closedflag TYPE char1,
        lv_server     TYPE tsp03d-pamsserver,
        lt_tsp03d     TYPE STANDARD TABLE OF tsp03d,
        lt_tsp03d2    TYPE STANDARD TABLE OF tsp03d,
        ls_tsp03d     TYPE tsp03d,
        ls_tsp03d1    TYPE tsp03d,
        lv_count      TYPE i,
        ls_tsp0c      TYPE tsp0c,
        ls_tsp03dd    TYPE tsp03d,
        lv_dele       TYPE string,
        lt_tsp03d_del TYPE STANDARD TABLE OF tsp03d,
        lt_tsp03du    TYPE STANDARD TABLE OF tsp03d,
        lt_tsp03di    TYPE STANDARD TABLE OF tsp03d,
        lt_tsp03dd    TYPE STANDARD TABLE OF tsp03d.

  DATA: BEGIN OF index_record,
          version,
          first   LIKE tsp0c-satznummer,
          fill1,
          next    LIKE tsp0c-satznummer,
          fill2,
          maxsize LIKE tsp0c-satznummer,
        END OF index_record,
        my_version VALUE 'A'.

  DATA: diff LIKE tsp0c-satznummer.

  FREE: lt_tsp03d[],
        lt_tsp03dd,
        lt_tsp03du.

  CLEAR: ls_input,
         lv_closedflag,
         lv_action,
         ls_tsp03d1.

  CLEAR lv_lines.
  DESCRIBE TABLE lt_input LINES lv_lines.

  IF lv_lines < 3.
    "Title
    ls_output = lc_header.
    APPEND ls_output TO lt_output.
    CLEAR ls_output.
    " No entries to restore
    ls_output = lc_err_msg.
    APPEND ls_output TO lt_output.
    CLEAR ls_output.
    RETURN.
  ENDIF.

  " To delete title and heading
  DELETE lt_input INDEX 1.

  LOOP AT lt_input INTO ls_input.
    IF ls_input IS INITIAL.
      EXIT.
    ELSE.
      REPLACE ALL OCCURRENCES OF lc_null IN ls_input WITH space.

      SPLIT ls_input AT lc_sep INTO ls_tsp03d1-name
                                    ls_tsp03d1-pamethod
                                    ls_tsp03d1-patype
                                    ls_tsp03d1-pamsserver
                                    ls_tsp03d1-pamsg
                                    lv_closedflag
                                    lv_action.
      IF lv_action EQ lc_delete.
        ls_tsp03d1-pamsserver = lv_server.
        APPEND ls_tsp03d1 TO lt_tsp03dd.
      ELSEIF lv_action EQ lc_update.
        APPEND ls_tsp03d1 TO lt_tsp03du.
      ELSEIF lv_action EQ lc_insert.
        APPEND ls_tsp03d1 TO lt_tsp03di.
      ENDIF.
    ENDIF.
    CLEAR:ls_input, ls_tsp03d1, lv_action, lv_closedflag.
  ENDLOOP.

  "Cloumn Heading
  ls_output = lc_header.
  APPEND ls_output TO lt_output.
  CLEAR: ls_output.

  "Updating delete log in tsp0c table
  SELECT SINGLE * FROM tsp0c
          INTO ls_tsp0c WHERE
              komponente = lc_spadtab
          AND satznummer = '00000000'.

*Delete output device
  IF lt_tsp03dd[] IS NOT INITIAL.

    SELECT * FROM tsp03d INTO TABLE lt_tsp03d_del
      FOR ALL ENTRIES IN lt_tsp03dd
      WHERE name = lt_tsp03dd-name.
    IF sy-subrc = 0.

      CALL FUNCTION 'ENQUEUE_E_TABLE'
        EXPORTING
          mode_rstable   = lc_lock_type
          tabname        = lc_lock_tbl1
        EXCEPTIONS
          foreign_lock   = 1
          system_failure = 2
          OTHERS         = 3.
      IF sy-subrc = 0.
        "Delete table
        DELETE tsp03d FROM TABLE lt_tsp03d_del.
        IF sy-subrc = 0.
          COMMIT WORK.
          CLEAR: lv_count.
          DESCRIBE TABLE lt_tsp03dd LINES lv_count.
          lv_dele = lv_count.
          " Number of entries updated in the table
          CONCATENATE lc_delete_msg lv_dele
          INTO ls_output SEPARATED BY space.

          APPEND ls_output TO lt_output.
          CLEAR ls_output.

          "Updating delete log in tsp0c table
          IF ls_tsp0c IS NOT INITIAL.

            LOOP AT lt_tsp03dd INTO ls_tsp03dd.

              index_record = ls_tsp0c-kommentar.

              IF index_record-maxsize < 0. EXIT. ENDIF.
              IF index_record-version <> my_version.
                IF index_record-version > my_version. EXIT. ENDIF.
                DELETE FROM tsp0c WHERE komponente = lc_spadtab.
                EXIT.
              ENDIF.

              ADD 1 TO index_record-next.
              diff = index_record-next - index_record-first + 1.
              IF diff > index_record-maxsize.
                diff = index_record-maxsize * 9 / 10 .
                index_record-first = index_record-next - diff.
                DELETE FROM tsp0c WHERE komponente = lc_spadtab
                                    AND satznummer > '00000000'
                                    AND satznummer < index_record-first.
              ENDIF.
              ls_tsp0c-kommentar = index_record.
              UPDATE tsp0c FROM ls_tsp0c.
              ls_tsp0c-satznummer = index_record-next.
              ls_tsp0c-komponente = lc_spadtab.
              ls_tsp0c-tabelle = lc_lock_tbl1.
              ls_tsp0c-schluessel = ls_tsp03dd-name.
              ls_tsp0c-aktion = lc_del.
              ls_tsp0c-benutzer = sy-uname.
              ls_tsp0c-datum = sy-datum.
              ls_tsp0c-zeit = sy-uzeit.
              ls_tsp0c-datenlange = 0.

              CALL FUNCTION 'ENQUEUE_E_TABLE'
                EXPORTING
                  mode_rstable   = lc_lock_type
                  tabname        = lc_lock_tbl
                EXCEPTIONS
                  foreign_lock   = 1
                  system_failure = 2
                  OTHERS         = 3.
              IF sy-subrc = 0.
                INSERT tsp0c FROM ls_tsp0c.

                IF sy-subrc = 0.
                  COMMIT WORK.
                ENDIF.

                CALL FUNCTION 'DEQUEUE_E_TABLE'
                  EXPORTING
                    mode_rstable = lc_lock_type
                    tabname      = lc_lock_tbl.
              ENDIF.

              CLEAR: ls_tsp03dd, ls_tsp0c, index_record, diff.

            ENDLOOP.
          ENDIF.
        ENDIF.
        CALL FUNCTION 'DEQUEUE_E_TABLE'
          EXPORTING
            mode_rstable = lc_lock_type
            tabname      = lc_lock_tbl1.
      ENDIF.
    ENDIF.
  ENDIF.
  "Update Spool Server
  IF lt_tsp03du[] IS NOT INITIAL.

    SELECT * FROM tsp03d INTO TABLE lt_tsp03d2
      FOR ALL ENTRIES IN lt_tsp03du
      WHERE name = lt_tsp03du-name.
    IF sy-subrc = 0.

      LOOP AT lt_tsp03du INTO ls_tsp03d1.
        READ TABLE lt_tsp03d2 INTO ls_tsp03d WITH KEY
                                        name = ls_tsp03d1-name.
        IF sy-subrc = 0.
          CALL FUNCTION 'ENQUEUE_E_TABLE'
            EXPORTING
              mode_rstable   = lc_lock_type
              tabname        = lc_lock_tbl
            EXCEPTIONS
              foreign_lock   = 1
              system_failure = 2
              OTHERS         = 3.
          IF sy-subrc EQ 0.
            UPDATE tsp03c SET pamsserver = ls_tsp03d1-pamsserver
                      WHERE padest = ls_tsp03d-padest.
            "new server
            ls_tsp03d-pamsserver = ls_tsp03d1-pamsserver.
            "change log
            IF sy-uname <> ls_tsp03d-chgname1 OR
               sy-sysid <> ls_tsp03d-chgsapsys1 OR
               sy-saprl <> ls_tsp03d-chgsaprel1.
              ls_tsp03d-chgtstmp3 = ls_tsp03d-chgtstmp2.
              ls_tsp03d-chgtstmp2 = ls_tsp03d-chgtstmp1.
              ls_tsp03d-chgname3  = ls_tsp03d-chgname2.
              ls_tsp03d-chgname2  = ls_tsp03d-chgname1.
              ls_tsp03d-chgsaprel3 = ls_tsp03d-chgsaprel2.
              ls_tsp03d-chgsaprel2 = ls_tsp03d-chgsaprel1.
              ls_tsp03d-chgsapsys3 = ls_tsp03d-chgsapsys2.
              ls_tsp03d-chgsapsys2 = ls_tsp03d-chgsapsys1.
            ENDIF.
            ls_tsp03d-chgname1       = sy-uname.
            ls_tsp03d-chgsaprel1     = sy-saprl.
            ls_tsp03d-chgsapsys1     = sy-sysid.
            ls_tsp03d-chgtstmp1      = sy-datum.
            ls_tsp03d-chgtstmp1+8(6) = sy-uzeit.

            CALL FUNCTION 'ENQUEUE_E_TABLE'
              EXPORTING
                mode_rstable   = lc_lock_type
                tabname        = lc_lock_tbl1
              EXCEPTIONS
                foreign_lock   = 1
                system_failure = 2
                OTHERS         = 3.
            IF sy-subrc = 0.
              UPDATE tsp03d FROM ls_tsp03d.
              IF sy-subrc = 0.
                CONCATENATE lc_spoolserver
                            lc_outputdev
                            ls_tsp03d-name
                            lc_success
                            INTO ls_output
                            SEPARATED BY space.
                APPEND ls_output TO lt_output.
              ENDIF.
              CALL FUNCTION 'DEQUEUE_E_TABLE'
                EXPORTING
                  mode_rstable = lc_lock_type
                  tabname      = lc_lock_tbl1.
            ENDIF.

            CALL FUNCTION 'DEQUEUE_E_TABLE'
              EXPORTING
                mode_rstable = lc_lock_type
                tabname      = lc_lock_tbl.
          ENDIF.
        ENDIF.
        CLEAR: ls_tsp03d1, ls_tsp03d.
      ENDLOOP.
    ENDIF.
  ENDIF.

  "Inser output device
  CLEAR: ls_tsp03d, ls_output.

  IF lt_tsp03di[] IS NOT INITIAL.
    LOOP AT lt_tsp03di INTO ls_tsp03dd.
      CONCATENATE lc_outputdev ls_tsp03dd-name
                  lc_notavail  sy-sysid INTO ls_output
                  SEPARATED BY space.
      APPEND ls_output TO lt_output.
      CLEAR: ls_output, ls_tsp03dd.
    ENDLOOP.
  ENDIF.

ENDFORM.