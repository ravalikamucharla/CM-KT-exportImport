*---------------------------------------------------------------------*
* Program Name        :  ZCM_EXP_MISSING_TABLES_INDEX                 *
* Title               :  Missing Tables and Indexes                   *
* Purpose             :  This report is to capture Missing Tables and *
*                        Indexes for Cloud Migration                  *
*---------------------------------------------------------------------*
* Related Transaction OR Standard Program References                  *
* DB02                                                                *
*---------------------------------------------------------------------*
* Tables              :   SELECT    UPDATE      INSERT      DELETE    *
*   X                       X                                         *
*---------------------------------------------------------------------*
* Program Change History                                              *
*---------------------------------------------------------------------*
*Date        Version   Author       TR#/Local     Description         *
*---------------------------------------------------------------------*
*08-09-2020  Initial   Ruchir Kamble   Local   For exporting Missing  *
*                                              Tables and Indexes for *
*                                              Cloud Migration        *
*11-29-2021  V001      Yasaswini K     Local   Adding missing objects *
*09-08-2022  V002      Soumya Ray      Local   To pass 'No data found'*
*                                              in case no data found  *
*                                              in system              *
*---------------------------------------------------------------------*

REPORT zcm_exp_missing_tables_index.

LOAD-OF-PROGRAM.

FORM get_config
              TABLES lt_input  STRUCTURE tab512
                     lt_output STRUCTURE tab512.

  CONSTANTS: lc_sep     TYPE c VALUE '|'                 LENGTH 1,
             lc_obrac   TYPE c VALUE '('                 LENGTH 1,
             lc_cbrac   TYPE c VALUE ')'                 LENGTH 1,
             lc_null    TYPE c VALUE 'NULL'              LENGTH 4,
             lc_export  TYPE c VALUE 'EXPORT'            LENGTH 6,
             lc_folder1 TYPE c VALUE 'Folder1'           LENGTH 7,
             lc_folder2 TYPE c VALUE 'Folder2'           LENGTH 7,
             lc_table   TYPE c VALUE 'Table'             LENGTH 5,
             lc_title   TYPE c VALUE
             'Results of Consistency Check'              LENGTH 40,
             lc_naction TYPE c VALUE
             'Action is not supported'                   LENGTH 30,
             lc_ninput  TYPE c VALUE
             'No input passed'                           LENGTH 20,
* Begin of changes in V002
             lc_err_msg TYPE c VALUE 'No data found'     LENGTH 20.
* End of changes in V002

  DATA: ls_input        TYPE tab512,
        ls_output       TYPE tab512,
        lv_action       TYPE char20,
        lv_object_count TYPE i,
        lv_count        TYPE char10,
        lv_text         TYPE string,
        lv_head         TYPE string,
        lt_node_tab     TYPE TABLE OF snodetext.

  FIELD-SYMBOLS: <fs_node_tab> TYPE snodetext.

  " Adding title to the output
  ls_output = lc_title.
  APPEND ls_output TO lt_output.
  CLEAR ls_output.

  READ TABLE lt_input INTO ls_input INDEX 1.
  IF sy-subrc EQ 0.
    lv_action = ls_input.      " Action
*Begin of changes V001
  ELSE.
    ls_output = lc_ninput.
    APPEND ls_output TO lt_output.
    CLEAR ls_output.
    RETURN.
  ENDIF.
*End of changes V001

  CASE lv_action.

    WHEN lc_export.               " When action is EXPORT

      CALL FUNCTION 'DB6_DIAG_DDIC_CONSISTENCY'
        EXPORTING
          action                = 3
        TABLES
          node_tab              = lt_node_tab
        EXCEPTIONS
          invalid_parameter_set = 1
          OTHERS                = 2.

      IF sy-subrc NE 0 OR
         lt_node_tab IS NOT INITIAL.

        " Adding headings to the output
        CONCATENATE lc_folder1  lc_sep
                    lc_folder2  lc_sep
                    lc_table
                    INTO ls_output.
        APPEND ls_output TO lt_output.
        CLEAR ls_output.

        LOOP AT lt_node_tab ASSIGNING <fs_node_tab>.

          CASE <fs_node_tab>-tlevel.
            WHEN 1.

            WHEN 2.
              lv_text = <fs_node_tab>-text.
*Begin of changes V001
              CONCATENATE lv_text lc_sep lc_null lc_sep lc_null
              INTO ls_output.
              APPEND ls_output TO lt_output.
              CLEAR: ls_output.
*End of changes V001
            WHEN 3.

              CLEAR lv_object_count.

              LOOP AT lt_node_tab TRANSPORTING NO FIELDS
                WHERE type = <fs_node_tab>-name.
                lv_object_count = lv_object_count + 1.
              ENDLOOP.

              IF lv_object_count > 0.
                lv_count = lv_object_count.
                CONDENSE lv_count.
                lv_head = <fs_node_tab>-text.

              ENDIF.

            WHEN 4.

              CONCATENATE lv_text lc_sep lv_head lc_obrac lv_count
                          lc_cbrac lc_sep <fs_node_tab>-text
                          INTO ls_output.
              APPEND ls_output TO lt_output.
              CLEAR ls_output.
            WHEN OTHERS.
          ENDCASE.
        ENDLOOP.

      ELSE.

        " No Missing Tables and Indexes found in the system
        ls_output = lc_err_msg.
        APPEND ls_output TO lt_output.
        CLEAR ls_output.

      ENDIF.

    WHEN OTHERS.
*Begin of changes V001
      ls_output = lc_naction."Action not supported
      APPEND ls_output TO lt_output.
      CLEAR ls_output.
*End of changes V001
  ENDCASE.

  "Null check in middle fields
  DO .

    REPLACE ALL OCCURRENCES OF SUBSTRING '||'
    IN TABLE lt_output WITH '|NULL|'.

    FIND '||' IN TABLE lt_output.

    IF sy-subrc <> 0.
      EXIT .
    ENDIF.

  ENDDO.
ENDFORM.