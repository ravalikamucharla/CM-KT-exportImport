*---------------------------------------------------------------------*
* Program Name        :   ZCM_SCC4_UPD_CLIENT_SETTINGS                *
* Title               :   Restore Client Settings                     *
* Purpose             :   This report is for restoring Client settings*
*                         during Cloud Migration                      *
*---------------------------------------------------------------------*
* Related Transaction OR Standard Program References                  *
* SCC4                                                                *
*---------------------------------------------------------------------*
*Tables              :   SELECT    UPDATE      INSERT      DELETE    *
* T000                                X           X          X        *
*---------------------------------------------------------------------*
* Program Change History                                              *
*---------------------------------------------------------------------*
*Date        Version   Author       TR#/Local     Description         *
*---------------------------------------------------------------------*
*09-23-2022  Initial  Soumya Ray   Local        To restore client sett*
*                                               ings                  *
*---------------------------------------------------------------------*

REPORT zcm_scc4_upd_client_settings.

LOAD-OF-PROGRAM.

FORM get_config
               TABLES lt_input  STRUCTURE tab512
                      lt_output STRUCTURE tab512.

  CONSTANTS: lc_sep        TYPE c VALUE '|'            LENGTH 1,
             lc_insert     TYPE c VALUE 'I'            LENGTH 1,
             lc_update     TYPE c VALUE 'U'            LENGTH 1,
             lc_delete     TYPE c VALUE 'D'            LENGTH 1,
             lc_test       TYPE c VALUE 'T'            LENGTH 1,
             lc_title      TYPE c VALUE
             'Restore Client Settings'                 LENGTH 30,
             lc_insert_msg TYPE c VALUE
             'Number of entries created in SCC4:'      LENGTH 50,
             lc_update_msg TYPE c VALUE
             'Number of entries updated in SCC4:'      LENGTH 50,
             lc_delete_msg TYPE c VALUE
             'Number of entries deleted in SCC4:'      LENGTH 50,
             lc_err_msg    TYPE c VALUE
             'No SCC4 entries to restore'              LENGTH 35,
             lc_update_err TYPE c VALUE
             'Error during updating SCC4 settings'     LENGTH 40,
             lc_mode       TYPE dd26e-enqmode   VALUE 'E',
             lc_t000       TYPE rstable-tabname VALUE 'T000'.

  DATA: ls_input       TYPE tab512,
        ls_output      TYPE tab512,
        lv_action      TYPE char10,
        lv_lines       TYPE i,
        lv_count_ins   TYPE string,
        lv_count_upd   TYPE string,
        lv_count_del   TYPE string,
        ls_t000        TYPE t000,
        lt_t000_insert TYPE STANDARD TABLE OF t000,
        lt_t000_update TYPE STANDARD TABLE OF t000,
        lt_t000_delete TYPE STANDARD TABLE OF t000.

  " To remove NULL and N in the input
  DO.
    REPLACE ALL OCCURRENCES OF SUBSTRING '|N|'
    IN TABLE lt_input WITH '| |'.
    FIND '|N|' IN TABLE lt_input.
    IF sy-subrc <> 0.
      EXIT .
    ENDIF.
  ENDDO.

  DO.
    REPLACE ALL OCCURRENCES OF SUBSTRING '|NULL|'
    IN TABLE lt_input WITH '| |'.
    FIND '|NULL|' IN TABLE lt_input.
    IF sy-subrc <> 0.
      EXIT .
    ENDIF.
  ENDDO.

  DESCRIBE TABLE lt_input LINES lv_lines.

  " Adding title to the output
  ls_output = lc_title.
  APPEND ls_output TO lt_output.
  CLEAR ls_output.

  IF lv_lines < 2.
    " No SCC4 entries to restore
    ls_output = lc_err_msg.
    APPEND ls_output TO lt_output.
    CLEAR ls_output.
    RETURN.
  ENDIF.

  " To delete heading
  DELETE lt_input INDEX 1.

  LOOP AT lt_input INTO ls_input.

    SPLIT ls_input AT lc_sep INTO
    ls_t000-mandt
    ls_t000-mtext "Client Name
    ls_t000-ort01 "City
    ls_t000-mwaer "Currency
    ls_t000-cccategory "Client role
    ls_t000-cccoractiv "Changes and Tr for client-specific objects
    ls_t000-ccnocliind "Cross-client Object changes
    ls_t000-cccopylock "Client copy and comparision Tool
    ls_t000-ccnocascad "Restriction: Protection against SAP upgrade
    ls_t000-ccimaildis "Client copy and comparision tool protection
    ls_t000-logsys "Logical system
    lv_action.

    ls_t000-changeuser = sy-uname.
    ls_t000-changedate = sy-datum.

   " If Clist role is not 'Test' Protection against SAP upgrade
   "Can not be 'X' as per SAP standard
    IF ls_t000-cccategory NE lc_test.
      ls_t000-ccnocascad = space.
    ENDIF.

    IF lv_action EQ lc_delete. " If action is Delete
      APPEND ls_t000 TO lt_t000_delete.
    ELSEIF lv_action EQ lc_update. " If action is Update
      APPEND ls_t000 TO lt_t000_update.
    ELSEIF lv_action EQ lc_insert. " If action is Insert
      APPEND ls_t000 TO lt_t000_insert.
    ENDIF.

    CLEAR: lv_action, ls_t000.
  ENDLOOP.

  "FM to lock clients table to update
  CALL FUNCTION 'ENQUEUE_E_TABLE'
    EXPORTING
      mode_rstable   = lc_mode
      tabname        = lc_t000
    EXCEPTIONS
      foreign_lock   = 1
      system_failure = 2
      OTHERS         = 3.
  IF sy-subrc NE 0.
    ls_output = lc_update_err.
    APPEND ls_output TO lt_output.
    CLEAR ls_output.
    RETURN.
  ENDIF.

  IF lt_t000_delete IS NOT INITIAL.
    DELETE t000 FROM TABLE lt_t000_delete. "Data Deleted
    COMMIT WORK.
  ENDIF.

  IF lt_t000_update IS NOT INITIAL.
    UPDATE t000 FROM TABLE lt_t000_update. "Data Update
    COMMIT WORK.
  ENDIF.

  IF lt_t000_insert IS NOT INITIAL.
    MODIFY t000 FROM TABLE lt_t000_insert. "Data Modify
    COMMIT WORK.
  ENDIF.

  " FM to unlock clients table
  CALL FUNCTION 'DEQUEUE_E_TABLE'
  EXPORTING
    mode_rstable = lc_mode
    tabname      = lc_t000.

  DESCRIBE TABLE lt_t000_delete LINES lv_lines.
  lv_count_del = lv_lines.
  CONCATENATE lc_delete_msg lv_count_del INTO ls_output
  SEPARATED BY space.
  APPEND ls_output TO lt_output.
  CLEAR: ls_output, lv_lines.

  DESCRIBE TABLE lt_t000_update LINES lv_lines.
  lv_count_upd = lv_lines.
  CONCATENATE lc_update_msg lv_count_upd INTO ls_output
  SEPARATED BY space.
  APPEND ls_output TO lt_output.
  CLEAR: ls_output, lv_lines.

  DESCRIBE TABLE lt_t000_insert LINES lv_lines.
  lv_count_ins = lv_lines.
  CONCATENATE lc_insert_msg lv_count_ins INTO ls_output
  SEPARATED BY space.
  APPEND ls_output TO lt_output.
  CLEAR: ls_output, lv_lines.

ENDFORM.