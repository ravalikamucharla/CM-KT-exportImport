*---------------------------------------------------------------------*
* Program Name        :  ZCM_SLDAPICUST_UPD_SLDDATA                   *
* Title               :  Restoring SLD Access                         *
* Purpose             :  This report is used to restore SLD Access    *
*                        Tcode : SLDAPICUST                           *
*                        using import and export as access to secstore*
*                        is denied                                    *
*---------------------------------------------------------------------*
* Related Transaction OR Standard Program References                  *
* SLDAPICUST                                                          *
*---------------------------------------------------------------------*
* Tables              :   SELECT    UPDATE      INSERT      DELETE    *
*                                                                     *
*---------------------------------------------------------------------*
* Program Change History                                              *
*---------------------------------------------------------------------*
*Date        Version   Author       TR#/Local     Description         *
*---------------------------------------------------------------------*
*07-29-2021  Initial  Yasaswini K  Local       To restore SLD Access  *
*09-30-2022  V001     Yasaswini K  Local       To remove dead code    *
*---------------------------------------------------------------------*
REPORT zcm_sldapicust_upd_slddata.

FORM get_config TABLES lt_input  STRUCTURE tab512
                       lt_output STRUCTURE tab512.

  CONSTANTS: lc_srtfd       TYPE indx_srtfd VALUE
             'SLDACCESSDATA',
             lc_null        TYPE char20     VALUE 'NULL',
             lc_abaptrue    TYPE c          VALUE 'X',
             lc_insert      TYPE c          VALUE 'I',
             lc_update      TYPE c          VALUE 'U',
             lc_delete      TYPE c          VALUE 'D',
             lc_sldrfc      TYPE char80     VALUE
             'Access to SLD Server Using RFC',
             lc_http        TYPE char80     VALUE
             'Access to SLD Server Using HTTP',
             lc_httpdes     TYPE char80     VALUE
             'Connection Using HTTP Destination',
             lc_err_msg     TYPE char80     VALUE
             'NoSLDentriestorestore',
             lc_success     TYPE char80     VALUE
             'SLDdatarestoredsuccessfully',
             lc_error       TYPE char80     VALUE
             'FailedtorestoreSLDdata',
             lc_tabname     TYPE char80     VALUE
             'SLDData',
             lc_sep         TYPE char01     VALUE '|'.

  DATA: ls_indx             TYPE lcrt_indx,
        lv_lines            TYPE i,
        lv_wbem             TYPE char1,
        lv_http             TYPE char1,
        ls_input            TYPE tab512,
        ls_output           TYPE tab512,
        lt_dbdata           TYPE sld_t_accessdata,
        lt_dbdata1          TYPE sld_t_accessdata,
        ls_dbdata           TYPE sld_s_accessdata,
        ls_inputdb          TYPE sld_s_accessdata,
        ls_data_db          TYPE sld_s_accessdata,
        lv_display_password TYPE sld_password,
        lv_alias            TYPE sld_alias,
        lv_alias1           TYPE sld_alias,                  "+V001
        lv_primary          TYPE sld_primary,
        lv_host             TYPE sld_hostname,
        lv_port             TYPE sld_portnumber,
        lv_user             TYPE sld_user,
        lv_action           TYPE char1,
        lv_server           TYPE string,
        lv_active           TYPE string,
        lv_password         TYPE sld_b64pwd.

  CLEAR: ls_inputdb,
         lv_wbem,
         lv_http,
         lv_alias,
         lv_primary,
         lv_host,
         lv_port,
         lv_user,
         lv_password,
         ls_input,
         ls_dbdata,
         ls_output,
         lv_display_password.

  FREE: lt_dbdata.

  CLEAR ls_indx.
  ls_indx-mandt = sy-mandt.
  ls_indx-aedat = sy-datum.
  ls_indx-usera = sy-uname.
  ls_indx-pgmid = sy-cprog.

  CLEAR lv_lines.
  DESCRIBE TABLE lt_input LINES lv_lines.

  "Title
  ls_output = lc_tabname.
  APPEND ls_output TO lt_output.
  CLEAR ls_output.

  IF lv_lines < 2.

    " No SLDAccess entries to restore
    ls_output = lc_err_msg.
    APPEND ls_output TO lt_output.
    CLEAR ls_output.
    RETURN.
  ENDIF.

  " To delete title and heading
  DELETE lt_input INDEX 1.

  LOOP AT lt_input INTO ls_input.

    SPLIT ls_input AT lc_sep INTO lv_server
                                  lv_active
                                  lv_action.
    IF lv_server IS NOT INITIAL.
      IF lv_active EQ lc_abaptrue.
        IF lv_server EQ lc_sldrfc.
          EXIT.
        ELSEIF lv_server EQ lc_http.
          lv_wbem = lc_abaptrue.
        ELSEIF lv_server EQ lc_httpdes.
          lv_http = lc_abaptrue.
        ENDIF.
      ENDIF.
    ELSE.
      EXIT.
    ENDIF.
    CLEAR: ls_input,
           lv_action,
           lv_active,
           lv_server.
  ENDLOOP.

  "Setting radio button in SLDAPICUST
  cl_sld_accessor_wbem_client=>save_srvr_access_setting(
      EXPORTING
        flg_use_wbem_client = lv_wbem
        flg_use_http_dest   = lv_http ).

  "Delete headings
  DELETE lt_input FROM 1 TO 6.
  "column heading
  ls_output = lc_srtfd.
  APPEND ls_output TO lt_output.
  CLEAR: ls_output.

  "Import SLD Data
  IMPORT sldaccdata TO lt_dbdata
  FROM DATABASE lcrt_indx(ld)
  ID lc_srtfd TO ls_indx.
  IF sy-subrc = 0.
    lt_dbdata1 = lt_dbdata.
    "Read input
    LOOP AT lt_input INTO ls_input.
      REPLACE ALL OCCURRENCES OF lc_null IN ls_input WITH space.
      SPLIT ls_input AT lc_sep INTO lv_alias
                                    lv_primary
                                    lv_host
                                    lv_port
                                    lv_user
                                    lv_password
                                    lv_action
                                    .
      IF lv_primary NE lc_abaptrue.
        CLEAR lv_primary.
      ELSE.
        READ TABLE lt_dbdata1 INTO ls_data_db WITH KEY
                                         primary = lc_abaptrue.
        IF sy-subrc = 0 AND
          ls_data_db-alias NE lv_alias.

          ls_data_db-primary = space.
          lv_alias1    = ls_data_db-alias.         "+V001

          MODIFY lt_dbdata FROM ls_data_db TRANSPORTING
                                primary
          WHERE alias = lv_alias1.
        ENDIF.
      ENDIF.

      IF lv_action EQ lc_delete.

        DELETE lt_dbdata WHERE alias = lv_alias.

      ELSEIF lv_action EQ lc_insert.

        ls_dbdata-alias    = lv_alias.
        ls_dbdata-primary  = lv_primary.
        ls_dbdata-host     = lv_host.
        ls_dbdata-port     = lv_port.
        ls_dbdata-user     = lv_user.

        IF lv_password IS  INITIAL OR
           lv_password EQ lc_null.
          CLEAR lv_password.
        ELSE.
          lv_display_password = lv_password.
        ENDIF.

        CALL FUNCTION 'ENCODE_SLDPWD_BASE64'
          EXPORTING
            password  = lv_display_password
          IMPORTING
            pwdbase64 = ls_dbdata-password.

        READ TABLE lt_dbdata1 INTO ls_data_db WITH KEY
                                        alias = ls_dbdata-alias.
        IF sy-subrc NE 0.
          APPEND ls_dbdata TO lt_dbdata.
        ELSE.
          MODIFY lt_dbdata FROM ls_dbdata TRANSPORTING
                                primary
                                host
                                port
                                user
                                password
          WHERE alias = ls_dbdata-alias.
        ENDIF.

      ELSEIF lv_action EQ lc_update.

        READ TABLE lt_dbdata1 INTO ls_data_db WITH KEY alias = lv_alias.
        IF sy-subrc = 0.
          ls_dbdata-alias    = lv_alias.
          ls_dbdata-primary  = lv_primary.
          ls_dbdata-host     = lv_host.
          ls_dbdata-port     = lv_port.
          ls_dbdata-user     = lv_user.

          IF lv_password IS INITIAL OR
             lv_password EQ lc_null.
            ls_dbdata-password = ls_data_db-password.
          ELSE.
            lv_display_password = lv_password.

            CALL FUNCTION 'ENCODE_SLDPWD_BASE64'
              EXPORTING
                password  = lv_display_password
              IMPORTING
                pwdbase64 = ls_dbdata-password.
          ENDIF.

          MODIFY lt_dbdata FROM ls_dbdata TRANSPORTING
                                primary
                                host
                                port
                                user
                                password
          WHERE alias = lv_alias.
        ENDIF.

      ENDIF.

      CLEAR: ls_inputdb,
             lv_alias,
             lv_display_password,
             lv_primary,
             lv_host,
             lv_port,
             lv_user,
             lv_password,
             lv_action,
             ls_dbdata,
             ls_data_db,
             ls_input.
    ENDLOOP.

    SORT lt_dbdata BY alias primary.

    DELETE ADJACENT DUPLICATES FROM lt_dbdata COMPARING alias.

    "Export to SLDAPICUST
    EXPORT sldaccdata FROM lt_dbdata
       TO DATABASE lcrt_indx(ld)
       ID lc_srtfd FROM ls_indx.

    "Output
    IF sy-subrc = 0.
      ls_output = lc_success.
      APPEND ls_output TO lt_output.
      CLEAR ls_output.
    ELSE.
      ls_output = lc_error.
      APPEND ls_output TO lt_output.
      CLEAR ls_output.
    ENDIF.
  ENDIF.

ENDFORM.