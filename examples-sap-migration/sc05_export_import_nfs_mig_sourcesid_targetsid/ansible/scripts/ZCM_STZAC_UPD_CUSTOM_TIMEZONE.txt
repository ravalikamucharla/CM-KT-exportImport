*---------------------------------------------------------------------*
* Program Name        :   ZCM_STZAC_UPD_CUSTOM_TIMEZONE               *
* Title               :   Restore Customizing time zone               *
* Purpose             :   This report is used restore Customizing time*
*                         zones across clients  (tcode: STZAC)        *
*                         Update, Insert, Delete records from TTZCU   *
*                         The standard subroutine for updating changes*
*                         in timezone cannot be called individually.  *
*                         Additionally, standard FM for chnage        *
*                         functionality is not avaialable             *
*                         As the standard subrountine is also directly*
*                         updating DB tables, thus we have replicated *
*                         same in script.                             *
*---------------------------------------------------------------------*
* Related Transaction OR Standard Program References                  *
* STZAC                                                               *
*---------------------------------------------------------------------*
* Tables              :   SELECT    UPDATE      INSERT      DELETE    *
* TTZCU                               X            X           X      *
*---------------------------------------------------------------------*
* Program Change History                                              *
*---------------------------------------------------------------------*
*Date        Version   Author       TR#/Local     Description         *
*---------------------------------------------------------------------*
*14-10-2020 Initial Soumya Ray     Local     To update custom timezone*
*09-09-2022  V001   Yasaswini K    Local      To remove dead code     *
*---------------------------------------------------------------------*

REPORT zcm_stzac_upd_custom_timezone.

FORM get_config
               TABLES lt_input  STRUCTURE tab512
                      lt_output STRUCTURE tab512.
  CONSTANTS: lc_sep       TYPE c       VALUE '|',
             lc_umsg      TYPE string
                          VALUE 'No of record updated:',
             lc_imsg      TYPE string
                          VALUE 'No of record inserted:',
             lc_dmsg      TYPE string
                          VALUE 'No of record deleted:',
             lc_unchanged TYPE string VALUE 'Timezone unchanged',
             lc_msg_head  TYPE string VALUE 'Timezone Restore',
             lc_update    TYPE c      VALUE  'U',
             lc_insert    TYPE c      VALUE  'I',
             lc_delete    TYPE c      VALUE  'D',
             lc_mode      TYPE dd26e-enqmode VALUE  'E',
             lc_tabname   TYPE rstable-tabname VALUE  'TTZCU',
             lc_enqueue   TYPE string
                          VALUE 'SLDAGADM table failed to lock',
             lc_dequeue   TYPE string
                          VALUE 'SLDAGADM table failed to unlock'.

  DATA: ls_output       TYPE tab512,
        lt_ttzcu_update TYPE TABLE OF ttzcu,
        lt_ttzcu_insert TYPE TABLE OF ttzcu,
        lt_ttzcu_delete TYPE TABLE OF ttzcu,
        ls_ttzcu        TYPE ttzcu,
        lv_action       TYPE c,
        ls_input        TYPE tab512,                 "+V001
        lv_lines        TYPE i,                      "+V001
        lv_ttzcu_d      TYPE i,
        lv_ttzcu_i      TYPE i,
        lv_ttzcu_u      TYPE i,
        lv_count        TYPE string.

*   Heading of output
  ls_output = lc_msg_head.
  APPEND ls_output TO lt_output.
  CLEAR ls_output.

  DESCRIBE TABLE lt_input LINES lv_lines.
  IF lv_lines > 1. " To check if the imported file has data
    PERFORM blank_check TABLES lt_input.
    PERFORM end_blank_check TABLES lt_input.
    DELETE lt_input INDEX 1.  " To delete the header line
  ELSE. " If no data input from PYTHON
    ls_output = lc_unchanged. "Msg Timezone unchanged
    APPEND ls_output TO lt_output.
    RETURN.
  ENDIF.

    LOOP AT lt_input INTO ls_input.
      SPLIT ls_input AT lc_sep INTO   " Input records split
      ls_ttzcu-client
      ls_ttzcu-tzonesys
      ls_ttzcu-tzonedef
      ls_ttzcu-flagactive
      ls_ttzcu-flagchange
      ls_ttzcu-flagdelete
      lv_action.

      CASE lv_action.
        WHEN lc_update. " Action update 'U'
          APPEND ls_ttzcu TO lt_ttzcu_update.
        WHEN lc_insert.  " Action insert'I'
          APPEND ls_ttzcu TO lt_ttzcu_insert.
        WHEN lc_delete.  " Action Delete 'D'
          APPEND ls_ttzcu TO lt_ttzcu_delete.
        WHEN OTHERS.

      ENDCASE.
      CLEAR: ls_ttzcu, ls_input, lv_action.
    ENDLOOP.
* FM to enqueue the TTZCU table
    CALL FUNCTION 'ENQUEUE_E_TABLE'
      EXPORTING
        mode_rstable   = lc_mode
        tabname        = lc_tabname
      EXCEPTIONS
        foreign_lock   = 1
        system_failure = 2
        OTHERS         = 3.

    IF sy-subrc <> 0. " Table is not locked
    ls_output = lc_enqueue. " Msg to denote lock of table failed
    APPEND ls_output TO lt_output.
    CLEAR ls_output.
    RETURN.
  ENDIF.
* Deleteion of records from ttzcu table
      IF lt_ttzcu_delete IS NOT INITIAL.
        DELETE ttzcu CLIENT SPECIFIED FROM TABLE lt_ttzcu_delete .
        COMMIT WORK.
        DESCRIBE TABLE lt_ttzcu_delete LINES lv_ttzcu_d.
      ENDIF.
* Insertion of records from ttzcu table
      IF lt_ttzcu_insert IS NOT INITIAL.
        MODIFY ttzcu CLIENT SPECIFIED FROM TABLE lt_ttzcu_insert .
        COMMIT WORK.
        DESCRIBE TABLE lt_ttzcu_insert LINES lv_ttzcu_i.
      ENDIF.
* Updation of records from ttzcu table
      IF lt_ttzcu_update IS NOT INITIAL.
        UPDATE ttzcu CLIENT SPECIFIED FROM TABLE lt_ttzcu_update .
        COMMIT WORK.
        DESCRIBE TABLE lt_ttzcu_update LINES lv_ttzcu_u.
      ENDIF.

*  No of timezone records deleted.
    lv_count = lv_ttzcu_d.
    CONCATENATE lc_dmsg lv_count INTO ls_output.
    APPEND ls_output TO lt_output.
    CLEAR: lv_count, ls_output.

*  No of timezone records inserted.
    lv_count = lv_ttzcu_i.
    CONCATENATE lc_imsg lv_count INTO ls_output.
    APPEND ls_output TO lt_output.
    CLEAR: lv_count, ls_output.

*  No of timezone records updated.
    lv_count = lv_ttzcu_u.
    CONCATENATE lc_umsg lv_count INTO ls_output.
    APPEND ls_output TO lt_output.

* FM to enqueue the TTZCU table
  CALL FUNCTION 'DEQUEUE_E_TABLE'
  EXPORTING
    mode_rstable = lc_mode
    tabname      = lc_tabname.
  IF sy-subrc <> 0.
    ls_output = lc_dequeue. " Msg to denote unlock of table failed
    APPEND ls_output TO lt_output.
    CLEAR ls_output.
  ENDIF.

  CLEAR: lv_count, ls_output, lv_ttzcu_d, lv_ttzcu_i, lv_ttzcu_u.
  FREE:  lt_ttzcu_delete, lt_ttzcu_update, lt_ttzcu_insert.

ENDFORM.

FORM blank_check TABLES lt_table TYPE table.

  DO .
    REPLACE ALL OCCURRENCES OF SUBSTRING '|NULL|'
    IN TABLE lt_table WITH '||'.
    FIND '|NULL|' IN TABLE lt_table.
    IF sy-subrc <> 0.
      EXIT .
    ENDIF.
  ENDDO.

ENDFORM.
FORM end_blank_check  TABLES lt_table TYPE table.
  DO .

    REPLACE ALL OCCURRENCES OF SUBSTRING '|NULL'
    IN TABLE lt_table WITH '|'.
    FIND '|NULL' IN TABLE lt_table.
    IF sy-subrc <> 0.
      EXIT .
    ENDIF.
  ENDDO.
ENDFORM.