*---------------------------------------------------------------------*
* Program Name        :   ZCM_SM51_EXP_INSTANCES                      *
* Title               :   Export SAP Instances                        *
* Purpose             :   This report is for exporting SAP Instances  *
*                         data during Cloud Migration                 *
*---------------------------------------------------------------------*
* Related Transaction OR Standard Program References                  *
* SM51                                                                *
*---------------------------------------------------------------------*
* Tables              :   SELECT    UPDATE      INSERT      DELETE    *
* XXXXX                     X                                         *
*---------------------------------------------------------------------*
* Program Change History                                              *
*---------------------------------------------------------------------*
*Date        Version   Author       TR#/Local     Description         *
*---------------------------------------------------------------------*
*08-18-2020  Initial Ruchir Kamble  Local  To Export SAP Instances    *
*06-22-2021   V001   Ruchir Kamble  Local  To remove import parameters*
*                                          in FM TH_SERVER_TYPE       *
*08-16-2022   V002   Soumya Ray     Local  To pass message "No data   *
*                                          found" in case of no data  *
*                                          found in sytem             *
*---------------------------------------------------------------------*

REPORT zcm_sm51_exp_instances.

LOAD-OF-PROGRAM.

FORM get_config
              TABLES lt_input  STRUCTURE tab512
                     lt_output STRUCTURE tab512.

  TYPES: BEGIN OF lty_imsxxlist_alv,
           name                      TYPE  msname2,
           host                      TYPE  mshost2,
           serv                      TYPE  msserv,
           msgtypes                  TYPE  mstypes,
           hostadr                   TYPE  mshostadr,
           servno                    TYPE  msservno,
           state                     TYPE  msstate,
           hostnamelong              TYPE  mshostname,
           hostaddr_v4_str           TYPE  ni_ipv4addr,
           hostaddr_v6_str           TYPE  ni_nodeaddr,
           sysservice0               TYPE  mssysservice,
           sysservice1               TYPE  mssysservice,
           sysservice2               TYPE  mssysservice,
           sysservice3               TYPE  mssysservice,
           services(80),
           servstr(10),
           status(10),
           kernel_update_pending(30),
           server_suspended(50),
         END OF lty_imsxxlist_alv,

         BEGIN OF lty_result,
           name     TYPE  msname2,
           host     TYPE  mshost2,
           services TYPE  char80,
           status   TYPE  char10,
         END OF lty_result.

  CONSTANTS:
    lc_sep       TYPE c VALUE '|'                LENGTH 1,
    lc_export    TYPE c VALUE 'EXPORT'           LENGTH 6,
    lc_active    TYPE c VALUE 'Active'           LENGTH 6,
    lc_passive   TYPE c VALUE 'Passive'          LENGTH 7,
    lc_shutdown  TYPE c VALUE 'Shutdown'         LENGTH 8,
    lc_stop      TYPE c VALUE 'Stop'             LENGTH 4,
    lc_starting  TYPE c VALUE 'Starting'         LENGTH 8,
    lc_initial   TYPE c VALUE 'Initial'          LENGTH 7,
    lc_host      TYPE c VALUE 'Host'             LENGTH 4,
    lc_services  TYPE c VALUE 'InstanceServices' LENGTH 20,
    lc_state     TYPE c VALUE 'State'            LENGTH 6,
    lc_instance  TYPE c VALUE
    'ApplicationServerInstance'                  LENGTH 35,
    lc_title     TYPE c VALUE
    'AS Instances of SAP System'                 LENGTH 30,
    lc_inc_input TYPE c VALUE 'Incorrect input'  LENGTH 20,
    lc_noinput   TYPE c VALUE 'No input given'   LENGTH 20,
    lc_noserver  TYPE c VALUE 'Server not found' LENGTH 20,
    lc_err_msg   TYPE c VALUE
    'Failed to fetch server list'                LENGTH 30,
    lc_null      TYPE c VALUE 'NULL'             LENGTH 4,
    lc_nodata    TYPE c VALUE 'No data found'    LENGTH 20. "+V002

  DATA : ls_input         TYPE tab512,
         ls_output        TYPE tab512,
         lv_action        TYPE char20,
         lt_imsxxlist     TYPE TABLE OF msxxlist_v6,
         ls_imsxxlist     TYPE msxxlist_v6,
         ls_imsxxlist_alv TYPE lty_imsxxlist_alv,
         lt_result        TYPE TABLE OF lty_result,
         ls_result        TYPE lty_result.

  " Clearing varibles before use
  CLEAR: ls_output, ls_input, ls_result, lv_action, ls_imsxxlist_alv,
         ls_imsxxlist.

  FREE: lt_output, lt_imsxxlist.

  " Adding title to the output
  ls_output = lc_title.
  APPEND ls_output TO lt_output.
  CLEAR ls_output.

  READ TABLE lt_input INTO ls_input INDEX 1.
  IF sy-subrc EQ 0.
    lv_action = ls_input.       " Action
  ELSE.
    " No input given
    ls_output = lc_noinput.                       "+V002
    APPEND ls_output TO lt_output.
    CLEAR ls_output.
    RETURN.
  ENDIF.

  CASE lv_action.

    WHEN lc_export.                     " If action is EXPORT

      " FM to get server list
      CALL FUNCTION 'TH_SERVER_LIST'
        EXPORTING
          active_server  = 0
        TABLES
          list           = lt_imsxxlist
        EXCEPTIONS
          no_server_list = 1
          OTHERS         = 2.

      IF sy-subrc EQ 0.
*  Begin of changes in V002
        IF lt_imsxxlist IS INITIAL.
          ls_output = lc_nodata.
          APPEND ls_output TO lt_output.
          CLEAR ls_output.
          RETURN.
        ENDIF.
*  End of changes in V002
        SORT lt_imsxxlist BY name.

        LOOP AT lt_imsxxlist INTO ls_imsxxlist.

          " Retrive server details( Services , update_pending...)
          CALL FUNCTION 'TH_SERVER_TYPE'
            EXPORTING
              services     = ls_imsxxlist-msgtypes
              sysservice0  = ls_imsxxlist-sysservice0
              sysservice1  = ls_imsxxlist-sysservice1
              sysservice2  = ls_imsxxlist-sysservice2
              sysservice3  = ls_imsxxlist-sysservice3
            IMPORTING
              service_text = ls_imsxxlist_alv-services.

          " Populate status field
          CASE ls_imsxxlist_alv-state.
            WHEN 1.
              ls_imsxxlist_alv-status = lc_active.
            WHEN 2.
              ls_imsxxlist_alv-status = lc_passive.
            WHEN 3.
              ls_imsxxlist_alv-status = lc_shutdown.
            WHEN 4.
              ls_imsxxlist_alv-status = lc_stop.
            WHEN 5.
              ls_imsxxlist_alv-status = lc_starting.
            WHEN 6.
              ls_imsxxlist_alv-status = lc_initial.
            WHEN OTHERS.
              ls_imsxxlist_alv-status = lc_active.
          ENDCASE.

          ls_result-name     = ls_imsxxlist-name.
          ls_result-host     = ls_imsxxlist-host.
          ls_result-services = ls_imsxxlist_alv-services.
          ls_result-status   = ls_imsxxlist_alv-status.
          APPEND ls_result TO lt_result.
          CLEAR: ls_result, ls_imsxxlist_alv, ls_imsxxlist.
        ENDLOOP.

        IF lt_result IS NOT INITIAL.

          " Adding headings to the output
          CONCATENATE lc_instance lc_sep
                      lc_host     lc_sep
                      lc_services lc_sep
                      lc_state
                      INTO ls_output.
          APPEND ls_output TO lt_output.
          CLEAR ls_output.

          LOOP AT lt_result INTO ls_result.

            IF ls_result-name IS INITIAL.
               ls_result-name = lc_null.
            ENDIF.

            IF ls_result-status IS INITIAL.
               ls_result-status = lc_null.
            ENDIF.

            CONCATENATE ls_result-name     lc_sep
                        ls_result-host     lc_sep
                        ls_result-services lc_sep
                        ls_result-status
                        INTO ls_output.
            APPEND ls_output TO lt_output.
            CLEAR ls_output.

          ENDLOOP.
*  Begin of changes in V002
        ELSE.
          ls_output = lc_nodata.
          APPEND ls_output TO lt_output.
          CLEAR ls_output.
*  End of changes in V002
        ENDIF.

      ELSEIF sy-subrc EQ 1.

        " No server list found
        ls_output =  lc_noserver.
        APPEND ls_output TO lt_output.
        CLEAR ls_output.

      ELSE.
        " Failed to fetch server list
        ls_output =  lc_err_msg.
        APPEND ls_output TO lt_output.
        CLEAR ls_output.

      ENDIF.

*  Begin of changes in V001
 "Null check in middle fields
  DO .
    REPLACE ALL OCCURRENCES OF SUBSTRING '||'
    IN TABLE lt_output WITH '|NULL|'.
    FIND '||' IN TABLE lt_output.
    IF sy-subrc <> 0.
      EXIT .
    ENDIF.
  ENDDO.
*  End of changes in V001

    WHEN OTHERS.
      " Incorrect input
      ls_output = lc_inc_input.
      APPEND ls_output TO lt_output.
      CLEAR ls_output.

  ENDCASE.

ENDFORM.