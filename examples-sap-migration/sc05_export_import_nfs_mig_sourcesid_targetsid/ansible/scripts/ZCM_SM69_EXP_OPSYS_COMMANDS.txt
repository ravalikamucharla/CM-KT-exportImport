*---------------------------------------------------------------------*
* Program Name        :   ZCM_SM69_EXP_OPSYS_COMMANDS                 *
* Title               :   Operating System Commands                   *
* Purpose             :   To Capture Operating System Commands in     *
*                         SM69 during Cloud Migration                 *
*---------------------------------------------------------------------*
* Related Transaction OR Standard Program References                  *
* SM69                                                                *
*---------------------------------------------------------------------*
* Tables              :   SELECT    UPDATE      INSERT      DELETE    *
* SXPGCOTABE                X                                         *
* SXPGCOSTAB                X                                         *
*---------------------------------------------------------------------*
* Program Change History                                              *
*---------------------------------------------------------------------*
*Date        Version   Author       TR#/Local     Description         *
*---------------------------------------------------------------------*
*04-07-2021  Initial   Ruchir Kamble Local    To Capture Operating    *
*                                             System Commands in SM69 *
*07-28-2022   V001     Yasaswini K    Local   To pass message "No data*
*                                             found" in case of no    *
*                                             data found in sytem     *
*---------------------------------------------------------------------*

" Note: lt_sxpgcotabe has SAP created OS Commands
"       lt_sxpgcostab has Customer created OS Commands

REPORT zcm_sm69_exp_opsys_commands.

LOAD-OF-PROGRAM.

FORM get_config
              TABLES lt_input  STRUCTURE tab512
                     lt_output STRUCTURE tab512.

  CONSTANTS:
    lc_sep        TYPE c VALUE '|'                           LENGTH 1,
    lc_null       TYPE c VALUE 'NULL'                        LENGTH 4,
    lc_export     TYPE c VALUE 'EXPORT'                      LENGTH 6,
    lc_sap        TYPE c VALUE 'SAP'                         LENGTH 3,
    lc_customer   TYPE c VALUE 'Customer'                    LENGTH 8,
    lc_type       TYPE c VALUE 'Type'                        LENGTH 4,
    lc_cmd_name   TYPE c VALUE 'Commandname'                 LENGTH 11,
    lc_opsys      TYPE c VALUE 'Operatingsystem'             LENGTH 15,
    lc_exprog     TYPE c VALUE 'Nameofexternalprogram'       LENGTH 22,
    lc_param      TYPE c VALUE 'Parametersofexternalprogram' LENGTH 30,
    lc_add_params TYPE c VALUE 'Additionalparametersallowed' LENGTH 40,
    lc_trace      TYPE c VALUE 'Trace'                       LENGTH 5,
    lc_createdby  TYPE c VALUE 'Createdby'                   LENGTH 9,
    lc_currdate   TYPE c VALUE 'Currentdate'                 LENGTH 11,
    lc_time       TYPE c VALUE 'Time'                        LENGTH 4,
    lc_changedby  TYPE c VALUE 'Changedby'                   LENGTH 9,
    lc_module     TYPE c VALUE 'Checkmodule'                 LENGTH 12,
    lc_inc_input  TYPE c VALUE 'Incorrect input'             LENGTH 20,
    lc_noinput    TYPE c VALUE 'No input given'              LENGTH 20,
    lc_title      TYPE c VALUE
    'External Operating System Commands'                     LENGTH 35,
* Begin of changes in V001
     lc_err_msg    TYPE c VALUE
    'No data found'                                          LENGTH 20.
* End of changes in V001

  DATA: ls_output     TYPE tab512,
        ls_input      TYPE tab512,
        lv_action     TYPE char6,
        lt_sxpgcotabe TYPE TABLE OF sxpgcotabe,
        ls_sxpgcotabe TYPE sxpgcotabe,
        lt_sxpgcostab TYPE TABLE OF sxpgcostab,
        ls_sxpgcostab TYPE sxpgcostab.

  " Clearing variables before use
  CLEAR: lv_action, ls_input, ls_output, ls_sxpgcostab, ls_sxpgcotabe.

  FREE: lt_output, lt_sxpgcostab, lt_sxpgcostab.

  " Adding title to the output
  ls_output = lc_title.
  APPEND ls_output TO lt_output.
  CLEAR ls_output.

  READ TABLE lt_input INTO ls_input INDEX 1.
  IF sy-subrc EQ 0.
    lv_action = ls_input.               " Action
  ELSE.
    " No input given
    ls_output = lc_noinput.                     "+V001
    APPEND ls_output TO lt_output.
    CLEAR ls_output.
    RETURN.
  ENDIF.

  CASE lv_action.

    WHEN lc_export.               " When action is EXPORT

       " Adding headings to the output
        CONCATENATE lc_type       lc_sep
                    lc_cmd_name   lc_sep
                    lc_opsys      lc_sep
                    lc_exprog     lc_sep
                    lc_param      lc_sep
                    lc_add_params lc_sep
                    lc_trace      lc_sep
                    lc_createdby  lc_sep
                    lc_currdate   lc_sep
                    lc_time       lc_sep
                    lc_changedby  lc_sep
                    lc_module
                    INTO ls_output.
        APPEND ls_output TO lt_output.
        CLEAR ls_output.

      " To fetch operating system commands created by SAP
      SELECT * FROM sxpgcotabe INTO TABLE lt_sxpgcotabe.

      IF lt_sxpgcotabe IS NOT INITIAL.

        LOOP AT lt_sxpgcotabe INTO ls_sxpgcotabe.

          IF ls_sxpgcotabe-checkcall IS INITIAL.
            ls_sxpgcotabe-checkcall = lc_null.
          ENDIF.

          CONCATENATE lc_sap                    lc_sep
                      ls_sxpgcotabe-name        lc_sep
                      ls_sxpgcotabe-opsystem    lc_sep
                      ls_sxpgcotabe-opcommand   lc_sep
                      ls_sxpgcotabe-parameters  lc_sep
                      ls_sxpgcotabe-addpar      lc_sep
                      ls_sxpgcotabe-traceon     lc_sep
                      ls_sxpgcotabe-createdby   lc_sep
                      ls_sxpgcotabe-createdate  lc_sep
                      ls_sxpgcotabe-createtime  lc_sep
                      ls_sxpgcotabe-changedby   lc_sep
                      ls_sxpgcotabe-changedate  lc_sep
                      ls_sxpgcotabe-changetime  lc_sep
                      ls_sxpgcotabe-checkcall
                      INTO ls_output.
          APPEND ls_output TO lt_output.
          CLEAR: ls_output, ls_sxpgcotabe.

        ENDLOOP.

      ENDIF.

      " To fetch operating system commands created by Customer
      SELECT * FROM sxpgcostab INTO TABLE lt_sxpgcostab.

      IF lt_sxpgcostab IS NOT INITIAL.

        LOOP AT lt_sxpgcostab INTO ls_sxpgcostab.

          IF ls_sxpgcostab-checkcall IS INITIAL.
            ls_sxpgcostab-checkcall = lc_null.
          ENDIF.

          CONCATENATE lc_customer               lc_sep
                      ls_sxpgcostab-name        lc_sep
                      ls_sxpgcostab-opsystem    lc_sep
                      ls_sxpgcostab-opcommand   lc_sep
                      ls_sxpgcostab-parameters  lc_sep
                      ls_sxpgcostab-addpar      lc_sep
                      ls_sxpgcostab-traceon     lc_sep
                      ls_sxpgcostab-createdby   lc_sep
                      ls_sxpgcostab-createdate  lc_sep
                      ls_sxpgcostab-createtime  lc_sep
                      ls_sxpgcostab-changedby   lc_sep
                      ls_sxpgcostab-changedate  lc_sep
                      ls_sxpgcostab-changetime  lc_sep
                      ls_sxpgcostab-checkcall
                      INTO ls_output.
          APPEND ls_output TO lt_output.
          CLEAR: ls_output, ls_sxpgcostab.

        ENDLOOP.

      ENDIF.

" It is unlikely that lt_sxpgcostabe(SAP) will not have OS Commands
" This is to check when there are no SAP and Customer created
" OS Commands in the system

      IF lt_sxpgcotabe IS INITIAL AND lt_sxpgcostab IS INITIAL.

        DELETE lt_output INDEX 2.

        " No data found
        ls_output = lc_err_msg.                  "+V001
        APPEND ls_output TO lt_output.
        CLEAR ls_output.

      ENDIF.

      DO.
        REPLACE ALL OCCURRENCES OF SUBSTRING '||'
        IN TABLE lt_output WITH '|NULL|'.
        FIND '||' IN TABLE lt_output.
        IF sy-subrc <> 0.
          EXIT .
        ENDIF.
      ENDDO.

    WHEN OTHERS.
      " Incorrect input
      ls_output = lc_inc_input.                   "+V001
      APPEND ls_output TO lt_output.
      CLEAR ls_output.

  ENDCASE.
ENDFORM.