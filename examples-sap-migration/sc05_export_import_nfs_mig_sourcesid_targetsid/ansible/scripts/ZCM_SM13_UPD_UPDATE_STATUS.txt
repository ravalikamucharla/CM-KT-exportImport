*---------------------------------------------------------------------*
* Program Name        :   ZCM_SM13_UPD_UPDATE_STATUS                  *
* Title               :   Restore Update Status in SM13               *
* Purpose             :   This report is for restore Update Status    *
*                         in SM13 during Cloud Migration.             *
*                         Action:                                     *
*                       Update-if source and target are in same status*
*                       Insert-status is changed as per input         *
*                       delete-target is not in same status as source *
*---------------------------------------------------------------------*
* Related Transaction OR Standard Program References                  *
* SM13                                                                *
*---------------------------------------------------------------------*
*Tables              :   SELECT    UPDATE      INSERT      DELETE    *
* XXXXX                     X                                         *
*---------------------------------------------------------------------*
* Program Change History                                              *
*---------------------------------------------------------------------*
*Date        Version   Author       TR#/Local     Description         *
*---------------------------------------------------------------------*
*10-22-2020  Initial  Soumya Ray    Local      Restore update status  *
*07-19-2021  V001     Soumya Ray    Local    To get SM13 update status*
*09-30-2022  V002     Yasaswini K  Local       To remove dead code    *
*---------------------------------------------------------------------*

REPORT zcm_sm13_upd_update_status.

LOAD-OF-PROGRAM.

FORM get_config
               TABLES lt_input  STRUCTURE tab512
                      lt_output STRUCTURE tab512.

  TYPES: BEGIN OF lty_infoline,
           vb_active    TYPE vbstat1,
           autostop     TYPE vbstat1,
           server       TYPE msname,
           vb_user      TYPE ubname,
           time         TYPE udtime,
           vbdelete     TYPE vbstat1,
           vbv2start    TYPE vbstat1,
           vb_info      TYPE thraw1,
           infotext(50) TYPE c,
         END OF lty_infoline.

  CONSTANTS : lc_sep        TYPE c   VALUE '|'          LENGTH 1,
              lc_1          TYPE c   VALUE '1'          LENGTH 1,
              lc_activate   TYPE c   VALUE 'Activate'   LENGTH 8,
              lc_deactivate TYPE c   VALUE 'Deactivate' LENGTH 10,
              lc_msg        TYPE c   VALUE
              'Incorrect command'                       LENGTH 20,
              lc_head       TYPE c   VALUE
              'Update Program Administration Status'    LENGTH 40,
              lc_txt01      TYPE c   VALUE
              'Update is active'                        LENGTH 16,
              lc_txt02      TYPE c   VALUE
              'Update deactivated by system'            LENGTH 30,
              lc_txt03      TYPE c   VALUE
               'Updating by user deactivated'           LENGTH 30,
              lc_unchanged  TYPE c   VALUE
              'Settings unchanged'                      LENGTH 20,
              lc_txt30      TYPE c   VALUE 'Deactivate' LENGTH 10,
              lc_txt31      TYPE c   VALUE 'Activate'   LENGTH 8,
              lc_err_msg    TYPE c   VALUE
              'UnabletoreadUpdateStatus'                LENGTH 30,
              lc_status     TYPE c   VALUE 'Status'     LENGTH 6,
              lc_statusmsg  TYPE c   VALUE 'Message'    LENGTH 7,
              lc_update     TYPE c   VALUE  'U'         LENGTH 1,
              lc_insert     TYPE c   VALUE  'I'         LENGTH 1,
              lc_delete     TYPE c   VALUE  'D'         LENGTH 1.


  DATA: ls_output      TYPE tab512,
        lv_flag        TYPE c,
        lv_activate(1) TYPE x VALUE 15,
        lv_adminstatus TYPE string,
        lv_deactivate  TYPE x VALUE 16,
        lv_get_info    TYPE x VALUE 17,
        ls_input       TYPE tab512,
        lv_status      TYPE string,
        lv_msg         TYPE string,
        lv_action      TYPE c,
        lv_lines       TYPE i,
        ls_info        TYPE vbinfo,
        ls_infoline    TYPE lty_infoline,
        lt_sub_input   TYPE STANDARD TABLE OF tab512, "+V001
        lv_tabix       TYPE sy-tabix. "+V001

  CLEAR: ls_output, lv_action, lv_adminstatus,  lv_msg, lv_status,
         ls_infoline, ls_info, lv_lines, ls_input, lv_action,
         lv_flag, lv_tabix.
  FREE: lt_sub_input. "+V001

*  Heading of the script is inserted in output
  ls_output = lc_head.
  APPEND ls_output TO lt_output.
  CLEAR ls_output.

  DESCRIBE TABLE lt_input LINES lv_lines.
  IF lv_lines > lc_1. " To check if the imported file has data
*  Begin of changes in V001
    "To get the data of 1st table
    LOOP AT lt_input INTO ls_input FROM lv_tabix.

      IF ls_input IS NOT INITIAL.
        APPEND ls_input TO lt_sub_input.
      ELSE.
        lv_tabix = sy-tabix.
        EXIT.
      ENDIF.
      CLEAR: ls_input.
    ENDLOOP.
*  End of changes in V001
    DELETE lt_sub_input INDEX lc_1." To delete the Data header line
  ELSE. " If input has no data
    ls_output = lc_unchanged. " No change in settings
    APPEND ls_output TO lt_output.
    CLEAR ls_output.
    RETURN.
  ENDIF.

  LOOP AT lt_sub_input INTO ls_input. "+V001
    SPLIT ls_input AT lc_sep INTO"Split the data into fields
    lv_status  " Status of SM13
    lv_msg     " Status msg for SM13
    lv_action. " Action for insert, delete or update
    IF lv_action EQ lc_delete.    " Delete code
      CONTINUE.
    ELSEIF lv_action EQ lc_insert.  " Insert code
*  The status of SM13 is changed as per the input.
      CASE lv_status.

        WHEN lc_activate.      " If action is Activate
          CALL 'ThVBCall' ID 'OPCODE' FIELD lv_activate.

        WHEN lc_deactivate.      " If action is Deactivate
          CALL 'ThVBCall' ID 'OPCODE' FIELD lv_deactivate.

        WHEN OTHERS.
          ls_output = lc_msg. " Incorrect command
          lv_flag  = 'X'.
      ENDCASE.

      IF lv_flag EQ 'X'.
        APPEND ls_output TO lt_output.
        EXIT.
      ELSE.
* //Logic to read current status in SM13.
*  To get the current status of the system after the change
        CALL 'ThVBCall'
        ID 'OPCODE' FIELD lv_get_info
        ID 'VBINFO' FIELD ls_info.

        IF sy-subrc = 0.
          MOVE-CORRESPONDING ls_info TO ls_infoline.
          " SM13 administration is active
          IF ls_infoline-vb_active = lc_1.
            ls_infoline-infotext = lc_txt01.
            lv_adminstatus = lc_txt31.
          ELSE.
            "SM13 administration is deactive
            IF ls_infoline-autostop = lc_1.
              ls_infoline-infotext = lc_txt02.
            ELSE.
              ls_infoline-infotext = lc_txt03.
            ENDIF.
            lv_adminstatus = lc_txt30.
          ENDIF.
        ENDIF.
*// Current Status read end
        IF ls_infoline-infotext IS NOT INITIAL.
          CONCATENATE lc_status lc_sep
          lc_statusmsg INTO ls_output. " Heading of table
          APPEND ls_output TO lt_output.
          CLEAR ls_output.
          CONCATENATE lv_adminstatus lc_sep
          ls_infoline-infotext INTO ls_output. "Status data
          APPEND ls_output TO lt_output.
        ELSE.
          " Unable to read Update Status
          ls_output = lc_err_msg.
          APPEND ls_output TO lt_output.
        ENDIF.
      ENDIF.

    ELSEIF lv_action EQ lc_update. " Update code
      CONCATENATE lc_status lc_sep
      lc_statusmsg INTO ls_output. " Heading of table
      APPEND ls_output TO lt_output.
      CLEAR ls_output.
      CONCATENATE lv_status lc_sep
      lv_msg INTO ls_output. "Status data
      APPEND ls_output TO lt_output.
    ELSE. " If input has no action sent with data
      ls_output = lc_unchanged. " No change in settings
      APPEND ls_output TO lt_output.
      CLEAR ls_output.
    ENDIF.
    CLEAR: ls_input, lv_action, lv_msg, lv_status.
  ENDLOOP.
  DELETE ADJACENT DUPLICATES FROM lt_output.
  CLEAR: ls_output, lv_action, ls_input,lv_adminstatus,
         ls_infoline, ls_info, lv_lines, lv_tabix.
  FREE: lt_sub_input. "+V001
ENDFORM.