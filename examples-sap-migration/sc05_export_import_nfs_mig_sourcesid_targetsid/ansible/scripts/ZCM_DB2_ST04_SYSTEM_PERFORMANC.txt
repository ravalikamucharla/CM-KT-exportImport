*---------------------------------------------------------------------*
* Program Name        :  ZCM_DB2_ST04_SYSTEM_PERFORMANC               *
* Title               :  Capture system configuration & Performance   *
*                        overview                                     *
* Purpose             :  To capture system configuration & Performance*
*                        overview in ST04 for DB2                     *
*---------------------------------------------------------------------*
* Related Transaction OR Standard Program References                  *
* ST04                                                                *
*---------------------------------------------------------------------*
* Tables              :   SELECT    UPDATE      INSERT      DELETE    *
* DB6NAVSYST                X                                         *
*---------------------------------------------------------------------*
* Program Change History                                              *
*---------------------------------------------------------------------*
*Date        Version   Author       TR#/Local     Description         *
*---------------------------------------------------------------------*
*07-31-2021  Initial Yasaswini K   Local       Capture system config. *
*                                              & performance overview *
*09-08-2022  V001     Soumya Ray     Local   To pass message "No data *
*                                            found" in case of no data*
*                                            found in sytem           *
*---------------------------------------------------------------------*
REPORT zcm_db2_st04_system_performanc.

FORM get_config TABLES lt_input  STRUCTURE tab512
                       lt_output STRUCTURE tab512.

  CONSTANTS: lc_12           TYPE c VALUE '12'                LENGTH 2,
             lc_sep          TYPE c VALUE '|'                 LENGTH 1,
             lc_bufferpool   TYPE c VALUE 'BufferPools'       LENGTH 12,
             lc_buffer       TYPE c VALUE 'BufferPool'        LENGTH 12,
             lc_num          TYPE c VALUE 'Number'            LENGTH 10,
             lc_size         TYPE c VALUE 'TotalSize'         LENGTH 14,
             lc_avgtime      TYPE c VALUE 'AverageTime'       LENGTH 20,
             lc_reads        TYPE c VALUE 'PhysicalReads'     LENGTH 22,
             lc_writes       TYPE c VALUE 'PhysicalWrites'    LENGTH 24,
             lc_logical      TYPE c VALUE 'LogicalReads'      LENGTH 22,
             lc_sync         TYPE c VALUE 'SynchronousReads'  LENGTH 26,
             lc_syncwrite    TYPE c VALUE 'SynchronousWrites' LENGTH 28,
             lc_tempread     TYPE c VALUE 'TempLogicalReads'  LENGTH 26,
             lc_tempphy      TYPE c VALUE 'TempPhysicalReads' LENGTH 28,
             lc_quality      TYPE c VALUE 'BufferQuality'     LENGTH 25,
             lc_overall      TYPE c VALUE 'OverallBufferQuality'
             LENGTH 30,
             lc_ratio        TYPE c VALUE 'DataHitRatio'      LENGTH 24,
             lc_title2       TYPE c VALUE 'Performance overview details'
             LENGTH 50,
             lc_index        TYPE c VALUE 'IndexHitRatio'     LENGTH 25,
             lc_victim       TYPE c VALUE 'NoVictimBuffers'   LENGTH 28,
             lc_data         TYPE c VALUE 'Data'              LENGTH 4,
             lc_ind          TYPE c VALUE 'Index'             LENGTH 5,
             lc_cache        TYPE c VALUE 'Cache'             LENGTH 8,
             lc_direct       TYPE c VALUE 'DirectInputOutput' LENGTH 30,
             lc_realtime     TYPE c VALUE
             'RealTimeStatistics'                             LENGTH 25,
             lc_locks        TYPE c VALUE 'LocksDeadlocks'    LENGTH 20,
             lc_logging      TYPE c VALUE 'Logging'           LENGTH 15,
             lc_calls        TYPE c VALUE 'Calls'             LENGTH 8,
             lc_sort         TYPE c VALUE 'Sorts'             LENGTH 8,
             lc_xml          TYPE c VALUE 'XmlStorage'        LENGTH 12,
             lc_async        TYPE c VALUE 'AsynchronousInputOutput'
             LENGTH 25,
             lc_catalog      TYPE c VALUE 'catalogcache'      LENGTH 20,
             lc_size1        TYPE c VALUE 'Size'              LENGTH 4,
             lc_qlty         TYPE c VALUE 'Quality'           LENGTH 10,
             lc_look         TYPE c VALUE 'Lookups'           LENGTH 10,
             lc_insert       TYPE c VALUE 'Inserts'           LENGTH 10,
             lc_overflows    TYPE c VALUE 'Overflows'         LENGTH 12,
             lc_servers      TYPE c VALUE 'NumberofinputoutputServers'
             LENGTH 30,
             lc_cleaners     TYPE c VALUE 'NumberofinputoutputCleaners'
             LENGTH 30,
             lc_asynreads    TYPE c VALUE 'AsynchronousPhysicalReads'
             LENGTH 30,
             lc_asynwrites   TYPE c VALUE 'AsynchronousPhysicalWrites'
             LENGTH 30,
             lc_asyinout     TYPE c VALUE 'AsynchronousInputOutput'
             LENGTH 30,
             lc_inout        TYPE c VALUE 'InputOutput'       LENGTH 12,
             lc_readreq      TYPE c VALUE 'AsynchronousReadRequest'
             LENGTH 35,
             lc_dirreads     TYPE c VALUE 'DirectReads'       LENGTH 15,

             lc_avginout     TYPE c VALUE 'AvgInputOutput'    LENGTH 20,
             lc_dirwrites    TYPE c VALUE 'DirectWrites'      LENGTH 15,
             lc_null         TYPE c VALUE 'NULL'              LENGTH 4,
             lc_stacache     TYPE c VALUE 'SizeofStatisticsCache'
             LENGTH 25,
             lc_asystats     TYPE c VALUE
             'NumberofAsynchronouslyCollected Statistics'     LENGTH 50,
             lc_query        TYPE c VALUE
             'NumberofStatisticsCollectionsDuringQueryCompilation'
             LENGTH 60,
             lc_compil       TYPE c VALUE
             'TimeSpentDuringQueryCompilation'                LENGTH 40,
             lc_collected    TYPE c VALUE
             'NumberofSynchronouslyCollectedStatistics'       LENGTH 60,
             lc_activities   TYPE c VALUE
             'TimeSpentonSynchronousStatisticsCollectionActivities'
             LENGTH 70,
             lc_locklist     TYPE c VALUE 'LockList'          LENGTH 10,
             lc_inuse        TYPE c VALUE 'InUse'             LENGTH 10,
             lc_lock1        TYPE c VALUE 'Locks'             LENGTH 5,
             lc_total        TYPE c VALUE 'Total'             LENGTH 8,
             lc_waited       TYPE c VALUE 'TimeWaited'        LENGTH 15,
             lc_avgwaited    TYPE c VALUE 'AvgTimeWaited'     LENGTH 18,
             lc_lockwait     TYPE c VALUE 'LockWait'          LENGTH 12,
             lc_escalation   TYPE c VALUE 'Escalations'       LENGTH 15,
             lc_lockesc      TYPE c VALUE 'LockEscalations'   LENGTH 20,
             lc_held         TYPE c VALUE 'LocksCurrentlyHeld'
             LENGTH 20,
             lc_deadlocks    TYPE c VALUE 'DeadlocksDetected' LENGTH 20,
             lc_timeouts     TYPE c VALUE 'LockTimeouts'      LENGTH 20,
             lc_exclusive    TYPE c VALUE 'ExclusiveLockEsc'  LENGTH 25,
             lc_logfiles     TYPE c VALUE 'LogFiles'          LENGTH 10,
             lc_1            TYPE c VALUE '1'                 LENGTH 1,
             lc_2            TYPE c VALUE '2'                 LENGTH 1,
             lc_3            TYPE c VALUE '3'                 LENGTH 1,
             lc_primary      TYPE c VALUE 'Primary'           LENGTH 7,
             lc_totallog     TYPE c VALUE 'TotalLog'          LENGTH 10,
             lc_read         TYPE c VALUE 'Read'              LENGTH 5,
             lc_availdb      TYPE c VALUE 'AvailableToDatabase'
             LENGTH 20,
             lc_usedbd       TYPE c VALUE 'UsedByDatabase'    LENGTH 20,
             lc_maxspace     TYPE c VALUE 'MaximumSpaceUsed'  LENGTH 20,
             lc_oldest       TYPE c VALUE
             'ApplicationWithOldestTransaction'               LENGTH 35,
             lc_logpages     TYPE c VALUE
             'LogPages'                                       LENGTH 8,
             lc_written      TYPE c VALUE
             'Written'                                        LENGTH 10,
             lc_alloct       TYPE c VALUE
             'LogsCurrentlyAllocated'                         LENGTH 30,
             lc_secondary    TYPE c VALUE 'Secondary'         LENGTH 10,
             lc_consumption  TYPE c VALUE 'LogBufferConsumption'
             LENGTH 35,
             lc_gap          TYPE c VALUE 'LSNGap'            LENGTH 6,
             lc_buffio       TYPE c VALUE 'LogBufferIO'       LENGTH 15,
             lc_avgpage      TYPE c VALUE
             'AverageWriteTimePage'                           LENGTH 25,
             lc_avgwrite     TYPE c VALUE
             'AverageWriteTimeIO'                             LENGTH 25,
             lc_readwrt      TYPE c VALUE
             'AverageReadTimePage'                            LENGTH 25,
             lc_readtime     TYPE c VALUE
             'AverageReadTimeIO'                              LENGTH 25,
             lc_buffqulty    TYPE c VALUE
             'LogBufferQuality'                               LENGTH 20,
             lc_lloghit      TYPE c VALUE
             'LogBufferHitRatio'                              LENGTH 25,
             lc_logover      TYPE c VALUE
             'LogBufferOverflows'                             LENGTH 30,
             lc_restart      TYPE c VALUE 'RestartRange'      LENGTH 12,
             lc_selected     TYPE c VALUE 'Selected'          LENGTH 8,
             lc_deleted      TYPE c VALUE 'Deleted'           LENGTH 8,
             lc_inserted     TYPE c VALUE 'Inserted'          LENGTH 8,
             lc_updated      TYPE c VALUE 'Updated'           LENGTH 8,
             lc_rows         TYPE c VALUE 'Rows'              LENGTH 4,
             lc_rowsread     TYPE c VALUE 'RowsRead'          LENGTH 10,
             lc_bpgets       TYPE c VALUE 'BPGets'            LENGTH 10,
             lc_hashjoins    TYPE c VALUE 'HashJoins'         LENGTH 10,
             lc_totalhash    TYPE c VALUE 'TotalHashLoops'    LENGTH 25,
             lc_small        TYPE c VALUE 'SmallOverflows'    LENGTH 25,
             lc_threshold    TYPE c VALUE 'PostThreshold'     LENGTH 20,
             lc_executed     TYPE c VALUE 'StatementsExecuted'
             LENGTH 25,
             lc_domname      TYPE dd07l-domname VALUE 'DBCON_DBMS',
             lc_sql          TYPE c VALUE 'SelectSQL'         LENGTH 15,
             lc_upddel       TYPE c VALUE 'UpdateInsertDelete'
             LENGTH 20,
             lc_ddl          TYPE c VALUE 'DDL'               LENGTH 3,
             lc_sec          TYPE c VALUE 'ElapsedTimeSec'    LENGTH 15,
             lc_msec         TYPE c VALUE 'ElapsedTimeMsec'   LENGTH 15,
             lc_attempted    TYPE c VALUE 'StatementsAttempted'
             LENGTH 25,
             lc_set          TYPE ddrefstruc-bool  VALUE 'X',
             lc_export       TYPE c VALUE 'EXPORT'            LENGTH 20,
             lc_lrdate       TYPE c VALUE 'Refreshdate'       LENGTH 15,
             lc_lrtime       TYPE c VALUE 'Refreshtime'       LENGTH 15,
             lc_edata        TYPE c VALUE
             'Issue in fetching system details'               LENGTH 35,
             lc_config       TYPE c VALUE
             'Configuredsystems'                              LENGTH 20,
             lc_incomp       TYPE c VALUE
             'Incompletesystems'                              LENGTH 20,
             lc_head         TYPE c VALUE
             'System configuration details'                   LENGTH 30,
             lc_ninput       TYPE c VALUE 'No input passed'   LENGTH 15,
             lc_system       TYPE c VALUE 'System'            LENGTH 6,
             lc_dbsys        TYPE c VALUE 'Dbsystem'          LENGTH 10,
             lc_dbrelse      TYPE c VALUE 'Dbrelease'         LENGTH 10,
             lc_naction      TYPE c VALUE
             'Incorrect input command'                        LENGTH 23,
             lc_dbhost       TYPE c VALUE 'Dbhost'            LENGTH 10,
             lc_relse        TYPE c VALUE 'Release'           LENGTH 10,
             lc_conname      TYPE c VALUE 'Connectionname'    LENGTH 15,
             lc_dbuser       TYPE c VALUE 'Dbuser'            LENGTH 6,
             lc_rfcdest      TYPE c VALUE 'Rfcdestination'    LENGTH 20,
             lc_commit       TYPE c VALUE 'Commits'           LENGTH 8,
             lc_rollbacks    TYPE c VALUE 'Rollbacks'         LENGTH 10,
             lc_dynamic      TYPE c VALUE 'DynamicSQL'        LENGTH 11,
             lc_static       TYPE c VALUE 'StaticSQL'         LENGTH 10,
             lc_failed       TYPE c VALUE 'FailedSQL'         LENGTH 10,
             lc_sortheap     TYPE c VALUE 'SortHeap'          LENGTH 9,
             lc_shareheap    TYPE c VALUE 'SortShareHeap'     LENGTH 15,
             lc_highwater    TYPE c VALUE 'HighWaterMark'     LENGTH 15,
             lc_allocated    TYPE c VALUE 'Allocated'         LENGTH 10,
             lc_sorttime     TYPE c VALUE 'Sorttimes'         LENGTH 10,
             lc_active       TYPE c VALUE 'Active'            LENGTH 8,
             lc_average      TYPE c VALUE 'Average'           LENGTH 8,
             lc_pooldata     TYPE c VALUE 'PoolData'          LENGTH 8,
             lc_logicalreads TYPE c VALUE 'LogicalReads'      LENGTH 15,
             lc_temp         TYPE c VALUE 'TemporaryData'     LENGTH 15,
             lc_blhead       TYPE c VALUE 'Blockheading'      LENGTH 12,
             lc_tabhead      TYPE c VALUE 'Tabheading'        LENGTH 12,
             lc_fieldheading TYPE c VALUE 'Fieldheading'      LENGTH 12,
             lc_value        TYPE c VALUE 'Value'             LENGTH 5,
             lc_writeaccess  TYPE c VALUE 'WriteAccesses'     LENGTH 15,
* Begin of changes in V001
             lc_nodata       TYPE c VALUE
             'No data found'                                  LENGTH 30.
* End of changes in V001

  DATA: lv_partitn   TYPE db6pmsd-partitn,
        lv_sys_id    TYPE sy-sysid,
        lo_sys       TYPE REF TO cl_db6_sys,
        ls_db6pm1st4 TYPE db6pm1st4,
        lv_date      TYPE string,
        ls_input     TYPE tab512,
        lv_time      TYPE string,
        lv_langu     TYPE dd07t-ddlanguage,
        lv_lconfig   TYPE string,
        lv_lincomp   TYPE string,
        ls_output    TYPE tab512,
        lv_value     TYPE string,
        ls_navsyst   TYPE db6navsyst,
        ls_dbsys     TYPE dd07v,
        ls_prefinal  TYPE string,
        lv_length    TYPE i,
        lv_last_char TYPE char1,
        lv_action1   TYPE i,
        lv_action    TYPE string,
        lt_preoutput TYPE STANDARD TABLE OF string,
        lt_dbsys     TYPE STANDARD TABLE OF dd07v,
        it_db6pm1st4 TYPE STANDARD TABLE OF db6pm1st4.

  CLEAR: lv_partitn, lv_sys_id, ls_db6pm1st4, ls_output, lv_lconfig,
  lv_lincomp, lv_date, lv_time, lv_langu, ls_navsyst, lv_value,
  ls_navsyst, lv_value, ls_dbsys, ls_prefinal,
  lv_length, lv_last_char, lv_action, lv_action1.

  FREE: it_db6pm1st4[], lt_dbsys[],lt_preoutput.

* Heading of the script
  "System Configuration details & performance overview details
  ls_output = lc_head.
  APPEND ls_output TO lt_preoutput.
  CLEAR: ls_output, ls_input, lv_action.

  READ TABLE lt_input INTO ls_input INDEX 1.
  IF sy-subrc EQ 0.
    lv_action = ls_input.
  ELSE.
    ls_output = lc_ninput. "No input passed
    APPEND ls_output TO lt_preoutput.
    lt_output[] = lt_preoutput[].
    RETURN.
  ENDIF.

  CASE lv_action.

    WHEN lc_export. "EXPORT

      "To fetch details of system registered
      SELECT SINGLE *  FROM db6navsyst
      INTO ls_navsyst WHERE sysid = sy-sysid.
      IF sy-subrc NE 0.
        ls_output = lc_nodata.
        APPEND ls_output TO lt_preoutput.
        CLEAR ls_output.
        RETURN.
      ENDIF.

      " To get number of  system configured  successfully
      IF ls_navsyst-entrystate EQ lc_2."2=COMPLETE
        lv_lconfig = lc_1.
        CLEAR lv_lincomp.
      ELSEIF ls_navsyst-entrystate EQ lc_3. "3=DISABLED
        lv_lincomp = lc_1.
        CLEAR lv_lconfig.
      ENDIF.

      lv_date = sy-datum. "System date
      lv_time = sy-uzeit. "System time
      lv_langu = sy-langu. " System language
      " FM to get DB system name
      CALL FUNCTION 'DD_DOMVALUES_GET'
        EXPORTING
          domname        = lc_domname
          text           = lc_set
          langu          = lv_langu
        TABLES
          dd07v_tab      = lt_dbsys
        EXCEPTIONS
          wrong_textflag = 1
          OTHERS         = 2.
      IF sy-subrc NE 0.
        " The FM is used to get system name and if it fails the
        "processing has to continue
        FREE: lt_dbsys.
      ENDIF.
      SORT lt_dbsys BY domname ASCENDING.

      "Subheading of system configuration
      CONCATENATE   lc_lrdate lc_lrtime lc_config lc_incomp lc_system
      lc_dbsys lc_dbrelse lc_dbhost lc_relse lc_conname
      lc_dbuser lc_rfcdest INTO ls_output
      SEPARATED BY lc_sep.
      APPEND ls_output TO lt_preoutput.
      CLEAR ls_output.

      READ TABLE lt_dbsys INTO ls_dbsys
      WITH KEY domvalue_l = ls_navsyst-dbsys.
      IF sy-subrc NE 0.
        " System name is passed as blank if long text is
        "not maintained
        CLEAR ls_dbsys-ddtext.
      ENDIF.

      CONCATENATE lv_date lv_time lv_lconfig lv_lincomp
      ls_navsyst-sysid ls_dbsys-ddtext ls_navsyst-dbrel
      ls_navsyst-dbhost ls_navsyst-saprel ls_navsyst-dbcname
      ls_navsyst-schemaname ls_navsyst-rfcdest_2
      INTO ls_output SEPARATED BY lc_sep.
      APPEND ls_output TO lt_preoutput.
      CLEAR: ls_output, ls_navsyst, ls_dbsys.

      "Blank Line
      APPEND ls_output TO lt_preoutput.
      CLEAR: ls_output.



      lv_sys_id = sy-sysid. "System ID

      TRY .
          cl_db6_sys=>get_sys_ref(
          EXPORTING
            system_id     = lv_sys_id
            RECEIVING
            sys_ref       = lo_sys        ).

        CATCH cx_db6_sys.
          "Issue in system details
          ls_output = lc_edata.
          APPEND ls_output TO lt_output.
          CLEAR ls_output.
          RETURN.

      ENDTRY.

      IF lo_sys IS BOUND.

        lv_action1 = lc_12.

        ls_output = lc_title2.
        APPEND ls_output TO lt_preoutput.
        CLEAR: ls_output.

        CALL FUNCTION 'DB6_PM_1ST4'
          EXPORTING
            action       = lv_action1
            partitn      = lv_partitn
            connection   = lo_sys->con_ref->con_data-con_name
          TABLES
            it_db6pm1st4 = it_db6pm1st4.

        IF it_db6pm1st4 IS NOT INITIAL.

          READ TABLE it_db6pm1st4 INTO ls_db6pm1st4 INDEX 1.
          IF sy-subrc = 0.

            CONCATENATE lc_tabhead lc_sep lc_blhead lc_sep
            lc_fieldheading lc_sep lc_value INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR ls_output.

            lv_value = ls_db6pm1st4-bp_num.

            "BufferPools
            CONCATENATE lc_buffer lc_sep lc_bufferpool lc_sep
            lc_num    lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output,lv_value.

            lv_value = ls_db6pm1st4-bp_sz.
            CONCATENATE lc_buffer lc_sep lc_bufferpool lc_sep
            lc_size   lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            "Avg Time
            lv_value = ls_db6pm1st4-bp_av_rtm.
            CONCATENATE lc_buffer lc_sep lc_avgtime lc_sep
            lc_reads  lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            lv_value = ls_db6pm1st4-bp_av_wtm.
            CONCATENATE lc_buffer lc_sep lc_avgtime lc_sep
            lc_writes lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            "Buffer Quality
            lv_value = ls_db6pm1st4-bp_qal.
            CONCATENATE lc_buffer lc_sep lc_quality lc_sep
            lc_overall lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            lv_value = ls_db6pm1st4-bp_d_hitrt.
            CONCATENATE lc_buffer lc_sep lc_quality lc_sep
            lc_ratio  lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            lv_value = ls_db6pm1st4-bp_i_hitrt.
            CONCATENATE lc_buffer lc_sep lc_quality lc_sep
            lc_index  lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            lv_value = ls_db6pm1st4-pl_no_victim_buf.
            CONCATENATE lc_buffer lc_sep lc_quality lc_sep
            lc_victim lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            "Data
            lv_value = ls_db6pm1st4-pl_d_lrs.
            CONCATENATE lc_buffer lc_sep lc_data lc_sep
            lc_logical lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            lv_value = ls_db6pm1st4-pl_d_prs.
            CONCATENATE lc_buffer lc_sep lc_data lc_sep
            lc_reads  lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            lv_value = ls_db6pm1st4-pl_d_ws.
            CONCATENATE lc_buffer lc_sep lc_data lc_sep
            lc_writes lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            lv_value = ls_db6pm1st4-bp_d_sprs.
            CONCATENATE lc_buffer lc_sep lc_data lc_sep
            lc_sync   lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            lv_value = ls_db6pm1st4-bp_d_sws.
            CONCATENATE lc_buffer lc_sep lc_data lc_sep
            lc_syncwrite lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            lv_value = ls_db6pm1st4-pl_td_lrs.
            CONCATENATE lc_buffer lc_sep lc_data lc_sep
            lc_tempread lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            lv_value = ls_db6pm1st4-pl_td_prs.
            CONCATENATE lc_buffer lc_sep lc_data lc_sep
            lc_tempphy lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            "Index
            lv_value = ls_db6pm1st4-pl_i_lrs.
            CONCATENATE lc_buffer lc_sep lc_ind lc_sep
            lc_logical lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            lv_value = ls_db6pm1st4-pl_i_prs.
            CONCATENATE lc_buffer lc_sep lc_ind lc_sep
            lc_reads lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            lv_value = ls_db6pm1st4-pl_i_ws.
            CONCATENATE lc_buffer lc_sep lc_ind lc_sep
            lc_writes lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            lv_value = ls_db6pm1st4-bp_i_sprs.
            CONCATENATE lc_buffer lc_sep lc_ind lc_sep
            lc_sync lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            lv_value = ls_db6pm1st4-bp_i_sws.
            CONCATENATE lc_buffer lc_sep lc_ind lc_sep
            lc_syncwrite lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            lv_value = ls_db6pm1st4-pl_ti_lrs.
            CONCATENATE lc_buffer lc_sep lc_ind lc_sep
            lc_tempread lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            lv_value = ls_db6pm1st4-pl_ti_prs.
            CONCATENATE lc_buffer lc_sep lc_ind lc_sep
            lc_tempphy lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            "Cache

            lv_value = ls_db6pm1st4-catca_sz.
            CONCATENATE lc_cache lc_sep lc_catalog lc_sep
            lc_size1 lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            lv_value = ls_db6pm1st4-catca_qal.
            CONCATENATE lc_cache lc_sep lc_catalog lc_sep
            lc_qlty  lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            lv_value = ls_db6pm1st4-catca_lku.
            CONCATENATE lc_cache lc_sep lc_catalog lc_sep
            lc_look  lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            lv_value = ls_db6pm1st4-catca_ins.
            CONCATENATE lc_cache lc_sep lc_catalog lc_sep
            lc_insert lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            lv_value = ls_db6pm1st4-catca_of.
            CONCATENATE lc_cache lc_sep lc_catalog lc_sep
            lc_overflows lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            "Package cache
            lv_value = ls_db6pm1st4-pkg_ca_sz.
            CONCATENATE lc_cache lc_sep lc_catalog lc_sep
            lc_size1 lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            lv_value = ls_db6pm1st4-pkg_ca_qal.
            CONCATENATE lc_cache lc_sep lc_catalog lc_sep
            lc_qlty lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            lv_value = ls_db6pm1st4-pkg_ca_lku.
            CONCATENATE lc_cache lc_sep lc_catalog lc_sep
            lc_look lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            lv_value = ls_db6pm1st4-pkg_ca_ins.
            CONCATENATE lc_cache lc_sep lc_catalog lc_sep
            lc_insert lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            lv_value = ls_db6pm1st4-pkg_num_ov.
            CONCATENATE lc_cache lc_sep lc_catalog lc_sep
            lc_overflows lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            "Asynchronous I/O

            "I/O
            lv_value = ls_db6pm1st4-num_iosvrs.
            CONCATENATE lc_asyinout lc_sep lc_inout lc_sep
            lc_servers  lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            lv_value = ls_db6pm1st4-num_ioclns.
            CONCATENATE lc_asyinout lc_sep lc_inout lc_sep
            lc_cleaners lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            "Average Time
            lv_value = ls_db6pm1st4-av_asp_rtm.
            CONCATENATE lc_asyinout   lc_sep lc_avgtime lc_sep
            lc_asynreads  lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            lv_value = ls_db6pm1st4-av_asp_wtm.
            CONCATENATE lc_asyinout    lc_sep lc_avgtime lc_sep
            lc_asynwrites  lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            "Data
            lv_value = ls_db6pm1st4-pl_a_drs.
            CONCATENATE lc_asyinout   lc_sep lc_data lc_sep
            lc_asynreads  lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            lv_value = ls_db6pm1st4-pl_a_dws.
            CONCATENATE lc_asyinout    lc_sep lc_data lc_sep
            lc_asynwrites  lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            lv_value = ls_db6pm1st4-pl_a_drrq.
            CONCATENATE lc_asyinout    lc_sep lc_data lc_sep
            lc_readreq     lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            "Index
            lv_value = ls_db6pm1st4-pl_a_irs.
            CONCATENATE lc_asyinout   lc_sep lc_ind lc_sep
            lc_asynreads  lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            lv_value = ls_db6pm1st4-pl_a_iws.
            CONCATENATE lc_asyinout    lc_sep lc_ind lc_sep
            lc_asynwrites  lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            lv_value = ls_db6pm1st4-pl_a_irrq.
            CONCATENATE lc_asyinout    lc_sep lc_ind lc_sep
            lc_readreq     lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            "Direct I/O


            "Avgtime
            lv_value = ls_db6pm1st4-av_dct_rtm.
            CONCATENATE lc_direct lc_sep lc_avgtime lc_sep
            lc_dirreads lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            lv_value = ls_db6pm1st4-av_dct_wtm.
            CONCATENATE lc_direct lc_sep lc_avgtime lc_sep
            lc_dirwrites lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            "I/O
            lv_value = ls_db6pm1st4-dirct_rds.
            CONCATENATE lc_direct lc_sep lc_inout lc_sep
            lc_dirreads lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            lv_value = ls_db6pm1st4-dirct_wts.
            CONCATENATE lc_direct lc_sep lc_inout lc_sep
            lc_dirwrites lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            "Avg I/O per request
            lv_value = ls_db6pm1st4-av_dct_rds.
            CONCATENATE lc_direct lc_sep lc_avginout lc_sep
            lc_dirreads lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            lv_value = ls_db6pm1st4-av_dct_wts.
            CONCATENATE lc_direct lc_sep lc_avginout lc_sep
            lc_dirwrites lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            "Real-Time Statistics

            lv_value = ls_db6pm1st4-stats_cache_size.
            CONCATENATE lc_realtime lc_sep lc_null lc_sep
            lc_stacache lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            lv_value = ls_db6pm1st4-async_runstats.
            CONCATENATE lc_realtime lc_sep lc_null lc_sep
            lc_asystats lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            lv_value = ls_db6pm1st4-stats_fabrications.
            CONCATENATE lc_realtime lc_sep lc_null lc_sep
            lc_query lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            lv_value = ls_db6pm1st4-stats_fabricate_time.
            CONCATENATE lc_realtime lc_sep lc_null lc_sep
            lc_compil lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            lv_value = ls_db6pm1st4-sync_runstats.
            CONCATENATE lc_realtime lc_sep lc_null lc_sep
            lc_collected  lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            lv_value = ls_db6pm1st4-sync_runstats_time.
            CONCATENATE lc_realtime lc_sep lc_null lc_sep
            lc_activities lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            "Locks and Deadlocks


            lv_value = ls_db6pm1st4-lcklistsz.
            CONCATENATE lc_locks lc_sep lc_locklist lc_sep
            lc_size lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            lv_value = ls_db6pm1st4-lck_lstiu.
            CONCATENATE lc_locks lc_sep lc_locklist lc_sep
            lc_inuse lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            "Lockwaits
            lv_value = ls_db6pm1st4-lck_waits.
            CONCATENATE lc_locks lc_sep lc_lockwait lc_sep
            lc_total lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            lv_value = ls_db6pm1st4-lck_w_tm.
            CONCATENATE lc_locks lc_sep lc_lockwait lc_sep
            lc_waited lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            lv_value = ls_db6pm1st4-av_wtm_lck.
            CONCATENATE lc_locks lc_sep lc_lockwait lc_sep
            lc_avgwaited lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            "Escalations
            lv_value = ls_db6pm1st4-lck_escals.
            CONCATENATE lc_locks lc_sep lc_escalation lc_sep
            lc_lockesc lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            lv_value = ls_db6pm1st4-x_lck_esca.
            CONCATENATE lc_locks lc_sep lc_escalation lc_sep
            lc_exclusive lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            "Locks
            lv_value = ls_db6pm1st4-lcks_held.
            CONCATENATE lc_locks lc_sep lc_lock1 lc_sep
            lc_held lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            lv_value = ls_db6pm1st4-deadlocks.
            CONCATENATE lc_locks lc_sep lc_lock1 lc_sep
            lc_deadlocks lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            lv_value = ls_db6pm1st4-lck_tmout.
            CONCATENATE lc_locks lc_sep lc_lock1 lc_sep
            lc_timeouts lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            "Logging


            "Log files
            lv_value = ls_db6pm1st4-logprimary.
            CONCATENATE lc_logging lc_sep lc_logfiles lc_sep
            lc_primary  lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            lv_value = ls_db6pm1st4-logsecond.
            CONCATENATE lc_logging lc_sep lc_logfiles lc_sep
            lc_secondary  lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            lv_value = ls_db6pm1st4-logfilsiz.
            CONCATENATE lc_logging lc_sep lc_logfiles lc_sep
            lc_size1  lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            "Total log
            lv_value = ls_db6pm1st4-tot_lgavl.
            CONCATENATE lc_logging lc_sep lc_totallog lc_sep
            lc_availdb  lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            lv_value = ls_db6pm1st4-tot_lgused.
            CONCATENATE lc_logging lc_sep lc_totallog lc_sep
            lc_usedbd  lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            lv_value = ls_db6pm1st4-tot_lgutop.
            CONCATENATE lc_logging lc_sep lc_totallog lc_sep
            lc_maxspace  lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            lv_value = ls_db6pm1st4-appl_id_oldest_x.
            CONCATENATE lc_logging lc_sep lc_totallog lc_sep
            lc_oldest  lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            lv_value = ls_db6pm1st4-sec_lgallo.
            CONCATENATE lc_logging lc_sep lc_secondary lc_sep
            lc_alloct  lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            lv_value = ls_db6pm1st4-sec_lgustp.
            CONCATENATE lc_logging lc_sep lc_secondary lc_sep
            lc_maxspace  lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            lv_value = ls_db6pm1st4-log_reads.
            CONCATENATE lc_logging lc_sep lc_logpages lc_sep
            lc_read  lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            lv_value = ls_db6pm1st4-log_writes.
            CONCATENATE lc_logging lc_sep lc_logpages lc_sep
            lc_written  lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.



            lv_value = ls_db6pm1st4-lsngap_pct.
            CONCATENATE lc_logging lc_sep lc_consumption lc_sep
            lc_gap     lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            lv_value = ls_db6pm1st4-restrtrnge.
            CONCATENATE lc_logging lc_sep lc_consumption lc_sep
            lc_restart lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            lv_value = ls_db6pm1st4-avglwtppag.
            CONCATENATE lc_logging lc_sep lc_buffio lc_sep
            lc_avgpage lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            lv_value = ls_db6pm1st4-avglwtpio.
            CONCATENATE lc_logging lc_sep lc_buffio lc_sep
            lc_avgwrite lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            lv_value = ls_db6pm1st4-avglrtppag.
            CONCATENATE lc_logging lc_sep lc_buffio lc_sep
            lc_readwrt lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            lv_value = ls_db6pm1st4-avglrtpio.
            CONCATENATE lc_logging lc_sep lc_buffio lc_sep
            lc_readtime lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            lv_value = ls_db6pm1st4-lgbufhitrt.
            CONCATENATE lc_logging lc_sep lc_buffqulty  lc_sep
            lc_lloghit lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            lv_value = ls_db6pm1st4-numlogbful.
            CONCATENATE lc_logging lc_sep lc_buffqulty  lc_sep
            lc_logover lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            "Calls

            "Rows
            lv_value = ls_db6pm1st4-rows_read.
            CONCATENATE lc_calls lc_sep lc_rows lc_sep
            lc_read  lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            lv_value = ls_db6pm1st4-rw_seleced.
            CONCATENATE lc_calls lc_sep lc_rows lc_sep
            lc_selected  lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            lv_value = ls_db6pm1st4-rw_deleted.
            CONCATENATE lc_calls lc_sep lc_rows lc_sep
            lc_deleted  lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            lv_value = ls_db6pm1st4-rw_insrted.
            CONCATENATE lc_calls lc_sep lc_rows lc_sep
            lc_inserted  lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            lv_value = ls_db6pm1st4-rw_updated.
            CONCATENATE lc_calls lc_sep lc_rows lc_sep
            lc_updated  lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            lv_value = ls_db6pm1st4-acc_efficiency.
            CONCATENATE lc_calls lc_sep lc_rows lc_sep
            lc_rowsread  lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            "Needs to check
            CONCATENATE lc_calls lc_sep lc_rows lc_sep
            lc_bpgets  lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.


            lv_value = ls_db6pm1st4-tot_hajn.
            CONCATENATE lc_calls lc_sep lc_hashjoins lc_sep
            lc_total  lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            lv_value = ls_db6pm1st4-tot_haloop.
            CONCATENATE lc_calls lc_sep lc_hashjoins lc_sep
            lc_totalhash  lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            lv_value = ls_db6pm1st4-hajn_of.
            CONCATENATE lc_calls lc_sep lc_hashjoins lc_sep
            lc_overflows  lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            lv_value = ls_db6pm1st4-hajn_sm_of.
            CONCATENATE lc_calls lc_sep lc_hashjoins lc_sep
            lc_small  lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            lv_value = ls_db6pm1st4-post_shrthrs_haj.
            CONCATENATE lc_calls lc_sep lc_hashjoins lc_sep
            lc_threshold  lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.



            lv_value = ls_db6pm1st4-selc_sqlst.
            CONCATENATE lc_calls lc_sep lc_executed lc_sep
            lc_sql   lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            lv_value = ls_db6pm1st4-uid_sqlst.
            CONCATENATE lc_calls lc_sep lc_executed lc_sep
            lc_upddel  lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            lv_value = ls_db6pm1st4-ddl_sqlst.
            CONCATENATE lc_calls lc_sep lc_executed lc_sep
            lc_ddl  lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            lv_value = ls_db6pm1st4-elpsd_exc_tim_s.
            CONCATENATE lc_calls lc_sep lc_executed lc_sep
            lc_sec  lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            lv_value = ls_db6pm1st4-elpsd_exc_tim_ms.
            CONCATENATE lc_calls lc_sep lc_executed lc_sep
            lc_msec  lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.




            lv_value = ls_db6pm1st4-cmmt_sqlst.
            CONCATENATE lc_calls lc_sep lc_attempted lc_sep
            lc_commit  lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            lv_value = ls_db6pm1st4-rbck_sqlst.
            CONCATENATE lc_calls lc_sep lc_attempted lc_sep
            lc_rollbacks  lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            lv_value = ls_db6pm1st4-dyn_sqlst.
            CONCATENATE lc_calls lc_sep lc_attempted lc_sep
            lc_dynamic  lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            lv_value = ls_db6pm1st4-stc_sqlst.
            CONCATENATE lc_calls lc_sep lc_attempted lc_sep
            lc_static  lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            lv_value = ls_db6pm1st4-fail_sqlst.
            CONCATENATE lc_calls lc_sep lc_attempted lc_sep
            lc_failed  lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            "Sorts

            "Sort Heap


            lv_value = ls_db6pm1st4-sortheapsz.
            CONCATENATE lc_sort lc_sep lc_sortheap lc_sep
            lc_size  lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            lv_value = ls_db6pm1st4-srt_hp_alo.
            CONCATENATE lc_sort lc_sep lc_sortheap lc_sep
            lc_allocated  lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            lv_value = ls_db6pm1st4-sheaptres.
            CONCATENATE lc_sort lc_sep lc_shareheap lc_sep
            lc_size  lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            lv_value = ls_db6pm1st4-sort_shrheap_all.
            CONCATENATE lc_sort lc_sep lc_shareheap lc_sep
            lc_allocated  lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            lv_value = ls_db6pm1st4-sort_shrheap_top.
            CONCATENATE lc_sort lc_sep lc_shareheap lc_sep
            lc_highwater  lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.



            lv_value = ls_db6pm1st4-tot_srt_tm.
            CONCATENATE lc_sort lc_sep lc_sorttime lc_sep
            lc_total  lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            lv_value = ls_db6pm1st4-av_sort_tm.
            CONCATENATE lc_sort lc_sep lc_sorttime lc_sep
            lc_average  lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            lv_value = ls_db6pm1st4-tot_sorts.
            CONCATENATE lc_sort lc_sep lc_sort lc_sep
            lc_total  lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            lv_value = ls_db6pm1st4-srt_of.
            CONCATENATE lc_sort lc_sep lc_sort lc_sep
            lc_overflows  lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            lv_value = ls_db6pm1st4-activ_sort.
            CONCATENATE lc_sort lc_sep lc_sort lc_sep
            lc_active  lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            lv_value = ls_db6pm1st4-post_shrthrs_srt.
            CONCATENATE lc_sort lc_sep lc_sort lc_sep
            lc_threshold  lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            "XMLStorage


            "Pool Data
            lv_value = ls_db6pm1st4-pool_xda_l_reads.
            CONCATENATE lc_xml lc_sep lc_pooldata lc_sep
            lc_logicalreads lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            lv_value = ls_db6pm1st4-pool_xda_p_reads.
            CONCATENATE lc_xml lc_sep lc_pooldata lc_sep
            lc_reads lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            lv_value = ls_db6pm1st4-pool_xda_writes.
            CONCATENATE lc_xml lc_sep lc_pooldata lc_sep
            lc_writeaccess lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            "Temporary Data
            lv_value = ls_db6pm1st4-pl_temp_xda_l_rd.
            CONCATENATE lc_xml lc_sep lc_temp lc_sep
            lc_logicalreads lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            lv_value = ls_db6pm1st4-pl_temp_xda_p_rd.
            CONCATENATE lc_xml lc_sep lc_temp lc_sep
            lc_reads lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            "Asynchronous I/O
            lv_value = ls_db6pm1st4-pl_async_xda_rds.
            CONCATENATE lc_xml lc_sep lc_async lc_sep
            lc_reads lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            lv_value = ls_db6pm1st4-pl_async_xda_wrt.
            CONCATENATE lc_xml lc_sep lc_async lc_sep
            lc_writes  lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.

            lv_value = ls_db6pm1st4-pl_async_xda_rrq.
            CONCATENATE lc_xml lc_sep lc_async lc_sep
            lc_readreq  lc_sep lv_value
            INTO ls_output.
            APPEND ls_output TO lt_preoutput.
            CLEAR: ls_output, lv_value.
          ELSE.
            ls_output = lc_nodata. "+V001
            APPEND ls_output TO lt_preoutput.
            CLEAR ls_output.
            RETURN.
          ENDIF.
        ELSE.
          ls_output = lc_nodata. "+V001
          APPEND ls_output TO lt_preoutput.
          CLEAR ls_output.
          RETURN.
        ENDIF.
      ELSE.
        ls_output = lc_nodata."+V001
        APPEND ls_output TO lt_preoutput.
        CLEAR ls_output.
        RETURN.
      ENDIF.
    WHEN OTHERS.
      ls_output = lc_naction."Incorrect input command
      APPEND ls_output TO lt_preoutput.
  ENDCASE.

  " Null check in middle fields and end fields
  LOOP AT lt_preoutput INTO ls_prefinal.
    lv_length = strlen( ls_prefinal ).
    "To replace blank value in end field with NULL
    IF lv_length > 0.
      lv_last_char = substring( val = ls_prefinal
      off = strlen( ls_prefinal ) - 1
      len = 1 ).
      IF lv_last_char = lc_sep.
        CONCATENATE ls_prefinal lc_null
        INTO ls_prefinal.
      ENDIF.
      "To replace blank value in middle fields with NULL
      REPLACE ALL OCCURRENCES OF SUBSTRING '||'
      IN ls_prefinal WITH '|NULL|'.
      ls_output = ls_prefinal.
      APPEND ls_output TO lt_output.
      CLEAR: ls_prefinal, ls_output.
    ELSE.
      CLEAR ls_output.
      APPEND ls_output TO lt_output.
    ENDIF.
    CLEAR: ls_output, ls_prefinal, lv_last_char, lv_length.
  ENDLOOP.

ENDFORM.